# DataSource settings: set here your own configurations for the database
# connection. In this example we have "mouseextra" as database name and
# "root" as username and password.
spring.datasource.connection-properties=useUnicode=true;characterEncoding=utf-8;

# Remote
#spring.datasource.url=jdbc:mysql://172.21.1.35:3306/mouseextra?useUnicode=yes&amp;characterEncoding=UTF-8
#spring.datasource.username=extra
#spring.datasource.password=Test123$

# Local
spring.datasource.url=jdbc:mysql://localhost:3306/mouseextra?useUnicode=yes&amp;characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Enable JPA repositories.
spring.data.jpa.repositories.enabled=true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = create

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# jdbc driver
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


# Character encoding to use to decode the URI.
#server.tomcat.uri-encoding=UTF-8

server.compression.enabled=true
server.compression.mime-types=application/xml,application/json


#logging.file=mouseextra.log
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR
spring.profiles.active=dev
server.context-path=/extra

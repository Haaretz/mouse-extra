{"version":3,"sources":["../node_modules/jigsass-tools-selectors/scss/lib/_object.scss","settings/_settings.buttons.scss","settings/_settings.lists.scss","../node_modules/jigsass-generic-normalize/scss/lib/_root.scss","settings/_settings.typography.scss","../node_modules/jigsass-tools-selectors/scss/lib/_block.scss","../node_modules/jigsass-generic-normalize/scss/lib/_html5.scss","../node_modules/jigsass-generic-normalize/scss/lib/_links.scss","../node_modules/jigsass-generic-normalize/scss/lib/_text.scss","../node_modules/jigsass-generic-normalize/scss/lib/_embedded.scss","../node_modules/jigsass-generic-normalize/scss/lib/_grouping.scss","../node_modules/jigsass-generic-normalize/scss/lib/_forms.scss","../node_modules/jigsass-generic-reset/scss/index.scss","../node_modules/jigsass-tools-typography/scss/lib/_rhythm.scss","../node_modules/jigsass-tools-mq/scss/index.scss","../node_modules/jigsass-tools-typography/scss/lib/_units.scss","base/_base.page.scss","settings/_settings.color.scss","base/_base.links.scss","base/_base.typography.scss","../node_modules/jigsass-tools-color/scss/index.scss","base/_base.media.scss","screen.css","../node_modules/jigsass-objects-media/scss/index.scss","../node_modules/jigsass-tools-bidi/scss/index.scss","../node_modules/jigsass-objects-button/scss/index.scss","settings/_settings.animation.scss","../node_modules/jigsass-tools-selectors/scss/lib/_map2styles.scss","settings/_settings.zindex.scss","settings/_settings.card.scss","../node_modules/jigsass-objects-card/scss/index.scss","../node_modules/jigsass-objects-grid/scss/lib/_grid.scss","../node_modules/jigsass-objects-grid/scss/lib/_item.scss","../node_modules/jigsass-objects-lists/scss/lib/_bare.scss","../node_modules/jigsass-objects-lists/scss/lib/_inline.scss","objects/_objects.input.scss","objects/_objects.dialog.scss","settings/_settings.dialog.scss","objects/_objects.dropdown.scss","settings/_settings.dropdown.scss","objects/_objects.advert.scss","objects/_objects.block-link.scss","settings/_settings.breadcrumbs.scss","objects/_objects.breadcrumbs.scss","objects/_objects.icon.scss","objects/_objects.kicker.scss","objects/_objects.aspect-ratio.scss","objects/_objects.embed.scss","objects/_objects.collapsibles.scss","objects/_objects.sec-head.scss","objects/_objects.tag.scss","objects/_objects.tabs.scss","layout/_layout.wrappers.scss","layout/_layout.two-cols.scss","components/_components.top-ad.scss","components/_components.logo.scss","components/_components.masthead.scss","../node_modules/eyeglass-inline-svg/sass/index.scss","components/_components.footer.scss","components/_components.listing-social.scss","components/_components.bounty-list.scss","components/_components.hero-search.scss","components/_components.centerpiece.scss","components/_components.search-results-filter.scss","../node_modules/jigsass-tools-selectors/scss/lib/_util.scss","../node_modules/jigsass-utils-clearfix/scss/index.scss","../node_modules/jigsass-utils-color/scss/index.scss","components/_components.bezeq.scss","../node_modules/jigsass-utils-display/scss/index.scss","../node_modules/jigsass-utils-flexbox/scss/index.scss","components/_components.extra-form.scss","../node_modules/jigsass-utils-float/scss/index.scss","../node_modules/jigsass-utils-offset/scss/index.scss","../node_modules/jigsass-utils-overflow/scss/index.scss","../node_modules/jigsass-utils-position/scss/index.scss","../node_modules/jigsass-utils-size/scss/index.scss","layout/_layout.row.scss","components/_components.article-entry.scss","../node_modules/jigsass-utils-spacing/scss/index.scss","../node_modules/jigsass-utils-text/scss/lib/_ta.scss","../node_modules/jigsass-utils-text/scss/lib/_va.scss","../node_modules/jigsass-utils-text/scss/lib/_whs.scss","../node_modules/jigsass-utils-type/scss/index.scss","base/_base.figure.scss","../node_modules/jigsass-utils-visibility/scss/index.scss","../node_modules/jigsass-utils-border/scss/index.scss"],"names":[],"mappings":"AA+cQ,iBCnNR,ACxMiC,wBDyM/B,GACE,UAAW,AACX,mCAAqB,AAArB,0BAAqB,CAAA,AAGvB,IACE,mCAAqB,AAArB,0BAAqB,CAAA,AAGvB,IAAM,SAAW,CAAA,AAEjB,IAAM,gCAAqB,AAArB,uBAAqB,CAAA,AAE3B,GAAO,gCAAqB,AAArB,uBAAqB,CAAA,CAAA,AAd9B,gBACE,GACE,UAAW,AACX,mCAAqB,AAArB,0BAAqB,CAAA,AAGvB,IACE,mCAAqB,AAArB,0BAAqB,CAAA,AAGvB,IAAM,SAAW,CAAA,AAEjB,IAAM,gCAAqB,AAArB,uBAAqB,CAAA,AAE3B,GAAO,gCAAqB,AAArB,uBAAqB,CAAA,CAAA,AE3O9B,KAGE,8CC4J8C,AD3J9C,0BAA2B,AAC3B,6BAA+B,CAChC,AAGD,KAEE,QAAU,CACX,AE+DK,4GC5DF,aAAe,CAChB,AD2DG,oCCpDF,oBAAsB,CACvB,ADmDG,wBC/CF,aAAc,AACd,QAAU,CACX,AD6CG,WCzCF,uBAAyB,CAC1B,ADwCG,sBClCF,YAAc,CACf,ADiCG,IEzEF,4BAA8B,CAC/B,AFwEG,qBElEF,eAAiB,CAClB,AFiEG,cGxEF,mBAAoB,AACpB,0BAA2B,AAC3B,gCAAkC,CACnC,AHqEG,aG/DF,oBAAqB,AAQrB,kBAAoB,CANrB,AH6DG,MGjDF,iBAAmB,CACpB,AHgDG,OGnCF,sBAAuB,AACvB,UAAY,CACb,AHiCG,QG7BF,aAAe,CAChB,AH4BG,YGtBF,cAAe,AACf,cAAe,AACf,kBAAmB,AACnB,uBAAyB,CAC1B,AHkBG,MGfF,aAAgB,CACjB,AHcG,MGXF,SAAY,CACb,AHUG,MIzEF,iBAAmB,CACpB,AJwEG,iBIpEF,eAAiB,CAClB,AJmEG,0BKrEF,gCAAkC,AAClC,aAAe,CAChB,ALmEG,KKvDF,uBAAwB,AACxB,SAAU,AACV,gBAAkB,CACnB,ALoDG,qCMrEF,aAAc,AACd,QAAU,CACX,ANmEG,WM9DF,eAAkB,CAEnB,AN4DG,0BMpDF,gBAAkB,CACnB,ANmDG,kBM7CF,mBAAqB,CACtB,AN4CG,wDMrCF,cAAgB,CACjB,ANoCG,aMhCF,cAAgB,CACjB,AN+BG,6DMtBF,yBAA2B,CAC5B,ANqBG,qDMhBF,SAAU,AACV,SAAW,CACZ,ANcG,+CMTF,6BAA+B,CAChC,ANQG,WMIA,SAAU,AACV,SAAU,AACV,SAAW,CACZ,ANPC,SMgBF,sBAAuB,AACvB,cAAe,AACf,cAAe,AACf,eAAgB,AAChB,UAAW,AACX,kBAAoB,CACrB,ANtBG,WM0BF,aAAe,CAChB,AN3BG,iCMiCF,sBAAuB,AACvB,SAAW,CACZ,ANnCG,sFMwCF,WAAa,CACd,ANzCG,gBM6CF,4BAA8B,CAC/B,AN9CG,yFMoDF,uBAAyB,CAC1B,AC/GH,KACE,qBAAuB,CACxB,AAGD,iBACE,kBAAoB,CACrB,APmDK,sKOtBF,SAAU,AACV,SAAW,CACZ,APoBG,8BOTF,cAAgB,CACjB,APQG,QOFF,yBAA0B,AAC1B,gBAAkB,CACnB,APAG,2COUF,cAAgB,CACjB,APXG,sTO2BF,YAAa,AACb,YAAc,CACf,AP7BG,uEOsCF,6BAA8B,AAC9B,SAAU,AACV,cAAe,AACf,uBAAwB,AACxB,SAAW,CACZ,ACPQ,KAQD,aTtDM,CS0Db,AC4QG,wBDxRK,KAQD,aTrDC,CSyDR,CAAA,AACQ,KAIH,yBEhCwC,AF2D5C,gBAAkB,CACnB,AC2OG,wBD3QK,KAIH,wBEhCwC,CF4D7C,CAAA,AGzKD,KACE,cCoBgB,ADnBhB,aCmBgB,ADlBhB,gBAAiB,AAGjB,kCAAmC,AACnC,kCAAoC,CAErC,AAED,KACE,iBAAmB,CACpB,AF2gBG,WACE,ytCA2HuD,AA1HvD,YAAc,CACf,AAvID,0BAoIA,WACE,utCA2HuD,AA1HvD,YAAc,CACf,CAAA,AAvID,wBAoIA,WACE,utCA2HuD,AA1HvD,YAAc,CACf,CAAA,AAvID,wBAoIA,WACE,ytCA2HuD,AA1HvD,YAAc,CACf,CAAA,AAvID,wBAoIA,WACE,6tCA2HuD,AA1HvD,YAAc,CACf,CAAA,AIjiBL,EACE,cAAe,AACf,eAAgB,AAChB,oBAAsB,CACvB,ACFD,wBAEE,iBAAkB,AAClB,kBAAmB,AACnB,eAAiB,CAKlB,AL+YG,2BKxZJ,wBNqZA,eEnS+C,AFoS/C,gBEpS+C,CIzG9C,CAAA,AAMD,wGAKI,oCC+JO,AD9JP,aFOc,CENf,AAPH,iLAYI,mCCwJO,CDvJR,AE5BH,UAEE,kBAAmB,AACnB,eAAgB,AAChB,qBAAuB,CACxB,ACiSH,iBD3RI,cAAgB,CACjB,AC8RH,gDDpRI,UAAY,CACb,ArB0aK,SuBtCF,oBAAc,AAAd,oBAAc,AAAd,iBAAc,AAAd,YAAc,CvBwCX,AAFD,2BuBnCA,mBAAe,AAAf,kBAAe,AAAf,aAAe,CAChB,AvBkCC,uBuB/BA,mBAAa,AAAb,oBAAa,AAAb,YAAa,AACb,oBAAe,AAAf,aAAe,CAChB,AvB6BC,qBuBvBE,aAAe,CAgBhB,AAnBD,mCRnFN,YSxR+C,ADkXrC,aAAe,CAKhB,AAZH,uCAUM,kBAAoB,CACrB,AAXL,uCAeI,mBAAoB,AACpB,eAAgB,AAChB,cAAgB,CACjB,AvBQH,iBuB4HF,yBAAoB,AAApB,sBAAoB,AAApB,kBAAoB,CvB1HjB,AAFD,6BuBgIE,aAAe,CAWhB,AAZD,2CAII,qBAAsB,AACtB,UAAY,CACb,AANH,yFAUI,qBAAuB,CACxB,AvB1IH,cuB8VF,8BAA4B,AAA5B,8BAA4B,AAA5B,+BAA4B,AAA5B,0BAA4B,CvB5VzB,AAFD,0BwBxDN,aAFmD,CDsa5C,AAXD,4BCzZN,aAHmD,CDsa1C,AvB3WH,OaxBN,wCYgRiC,AZ/QjC,uCARyB,AYkSvB,wBAAiB,AAAjB,qBAAiB,AAAjB,gBAAiB,AACjB,6BAA8B,AAC9B,sBAAuB,AACvB,cAAe,AACf,eAAgB,AAChB,qBAAsB,AACtB,aAAc,AACd,SAAU,AACV,kBAAmB,AACnB,sBAAuB,AACvB,mBAAoB,AV1XtB,YdjSY,AciSZ,qDW9TyB,AX8TzB,4CW9TyB,C1B6alB,AAFD,+CyBmRF,oBAAsB,CACvB,AzBpRG,wByB2RF,SAAU,AACV,SAAW,CACZ,AzB7RG,caxBN,wCYqXqC,AZpXrC,qCARyB,CbiClB,AAFD,gByB8YJ,0BAAoC,AACpC,kBxBryB2B,CDwZtB,AAFD,gBe7GN,yBExTkB,AFwTlB,UE5Ta,CjB2aN,AAFD,2Fe7GN,yBKhNoB,ALgNpB,WE7Ta,AF6Tb,Yd5QiB,C0BJZ,A3B6XC,qBe7GN,aKjKW,CpBgRJ,AAFD,0Ge7GN,aExTkB,CUwCb,A3B6XC,gBe7GN,sBEpTe,AFoTf,UE7Ta,CjB4aN,AAFD,2Fe7GN,yBKhNoB,ALgNpB,Yd5PiB,C0BpBZ,A3B6XC,gBe7GN,qBE5Ta,CjB2aN,AAFD,2Fe7GN,aExTkB,CUwCb,A3B6XC,kBe7GN,UE5Ta,CjB2aN,AAFD,iGe7GN,sBE5Ta,AF4Tb,cExTkB,AFwTlB,Yd5OiB,C0BpCZ,A3B6XC,gBe7GN,yBKjKW,ALiKX,UE5Ta,CjB2aN,AAFD,2Fe7GN,yBE3TkB,AF2TlB,YdnOiB,C0B7CZ,A3B6XC,ce7GN,yBErSiB,AFqSjB,Ud9Na,CD6UN,AAFD,qFe7GN,yBKhNoB,ALgNpB,Yd1NiB,C0BtDZ,A3B6XC,iBe7GN,aE1QmB,CjByXZ,AAFD,8Fe7GN,aKhNoB,COhEf,A3B6XC,gBe7GN,aEzQkB,CjBwXX,AAFD,2Fe7GN,aKhNoB,COhEf,A3B6XC,iBe7GN,cEvQmB,AFuQnB,SE5Ta,CjB2aN,AAFD,8Fe7GN,aKhNoB,COhEf,A3B6XC,ce7GN,aExQgB,CjBuXT,AAFD,qFe7GN,aKhNoB,COhEf,A3B6XC,ae7GN,cdzLgB,AcyLhB,edxLiB,AcwLjB,UdvLa,CDsSN,AAFD,ee7GN,iCdpLmC,AcoLnC,gBdnLkB,AcmLlB,edlLiB,AckLjB,gBdjLkB,AciLlB,iBdhLoB,CD+Rb,AAFD,qBe7GN,8Bd7KkC,Ac6KlC,uBAlO+C,AAkO/C,Wd3Ke,Ac2Kf,sBAlO+C,AAkO/C,OdzKW,AcyKX,QdxKY,AcwKZ,kBdvKsB,AcuKtB,4BdtKqB,AcsKrB,wBdtKqB,AcsKrB,oBdtKqB,AcsKrB,qDW9TyB,AX8TzB,4CW9TyB,CC8CpB,A3B6XC,wFe7GN,YdjKiB,C0B/GZ,A3B6XC,0Ge7GN,4Bd9JuB,Ac8JvB,wBd9JuB,Ac8JvB,mBd9JuB,C0BlHlB,A3B6XC,+Be7GN,4BdxJqB,AcwJrB,wBdxJqB,AcwJrB,mBdxJqB,C0BxHhB,A3B6XC,uEe7GN,sBE5Ta,AF4Tb,qBExTkB,AFwTlB,mBdjJuB,AciJvB,WE5Ta,AF4Tb,cd/IkB,Ac+IlB,cd9IkB,Ac8IlB,cd7IkB,Ac6IlB,ad5IiB,Ac4IjB,ad3IiB,Ac2IjB,gBd1IoB,Ac0IpB,kBdzIsB,AcyItB,kCWhUgB,AXgUhB,yBWhUgB,CCgDX,A3B6XC,mBe7GN,sDdpIkE,AcoIlE,8CdpIkE,AcoIlE,yBExTkB,AFwTlB,mBdlIuB,AckIvB,WdjIe,AciIf,YdhIgB,AcgIhB,kBd/HsB,Ac+HtB,Qd9HY,Ac8HZ,Md7HU,Ac6HV,oCSuS2B,ATvS3B,gCSuS2B,ATvS3B,4BSuS2B,ATvS3B,Wd3He,Ac2Hf,sBd1H0B,Ac0H1B,Ua7T4B,CD6CvB,A3B6XC,qBe7GN,YAlO+C,AAkO/C,iBAlO+C,AAkO/C,eAlO+C,AAkO/C,iBdjHmB,CDgOZ,AAFD,qBe7GN,YAlO+C,AAkO/C,iBAlO+C,AAkO/C,eAlO+C,AAkO/C,iBd3GmB,CD0NZ,Ac3CH,wBdyCE,8Be7GN,YAlO+C,AAkO/C,iBAlO+C,AAkO/C,eAlO+C,AAkO/C,iBdjHmB,CDgOZ,CAAA,Ac3CH,2BdyCE,sBe7GN,cdzLgB,AcyLhB,edxLiB,AcwLjB,UdvLa,CDsSN,CAAA,AAFD,mBe7GN,edhFe,AcgFf,Ud/EW,CD8LJ,AAFD,Qe7GN,qBE5Ta,CjB2aN,AAFD,wBe7GN,gBczQkB,AdyQlB,iBcxQoB,C7BuXb,AAFD,sCe7GN,sBE5Ta,AF4Tb,iBcpQsB,CFZjB,A3B6XC,kFe7GN,gCcnQyB,AdmQzB,4BcnQyB,AdmQzB,wBcnQyB,AdmQzB,qDW9TyB,AX8TzB,6CW9TyB,AX8TzB,Sa/T2B,C5B4arB,A2B7XD,4CZgRL,aAlO+C,AAkO/C,kBc5PsB,Ad4PtB,UczPe,CFvBV,A3B6XC,4Re7GN,oCcnP2B,AdmP3B,gCcnP2B,AdmP3B,2BcnP2B,CF7BtB,A3B6XC,0Ce7GN,8Bc7OkC,Ad6OlC,Sc5Oa,Ad4Ob,Wc3Oe,Ad2Of,sBAlO+C,AAkO/C,kBczOsB,AdyOtB,QcxOY,AdwOZ,4BcvOsB,AduOtB,oBcvOsB,AduOtB,+BctO4B,AdsO5B,2BctO4B,AdsO5B,uBctO4B,AdsO5B,0DW9TyB,AX8TzB,kDW9TyB,AX8TzB,UcpOe,CF5CV,A3B6XC,gDe7GN,4BchOsB,AdgOtB,oBchOsB,AdgOtB,0DW/TwB,AX+TxB,iDW/TwB,CC+CnB,A3B6XC,Y8BmYJ,wBVhsBkB,CpB+Tb,AAFD,Qe7GN,mBgB/OuC,AACrC,gBAAiB,AACjB,kBAA2B,AAC3B,mBAA4B,AAG1B,oBAAc,AAAd,oBAAc,AAAd,iBAAc,AAAd,aAAc,AACd,mBAAe,AAAf,kBAAe,AAAf,cAAe,AACf,8BAAoB,AAApB,6BAAoB,AAApB,uBAAoB,AAApB,mBAAoB,AACpB,mBAAgB,AAAhB,cAAgB,C/BqVb,AAFD,U+BhVA,kBAA4B,AAC5B,mBAA6B,AAC7B,kBAAoB,CACrB,A/B6UC,qBe7GN,iBSxR+C,AOI/C,cAAe,AACf,sBAAwB,AACxB,4BAA8B,CAyDvB,A/BsUD,4D+B1XJ,oBAAsB,CACvB,A/ByXK,a+BgDF,8BAA4B,AAA5B,8BAA4B,AAA5B,+BAA4B,AAA5B,0BAA4B,C/B9CzB,AAFD,0BwBxDN,aAFmD,COoH5C,AAND,wCP5GN,aAHmD,COoH1C,A/BzDH,kB+BoiBF,cAAqC,AACrC,cAAsC,C/BniBnC,AAFD,oB+BwiBA,eAAsC,AACtC,eAAuC,CACxC,A/B1iBC,kB+BoiBF,mBAAqC,AACrC,mBAAsC,C/BniBnC,AAFD,oB+BwiBA,mBAAsC,AACtC,mBAAuC,CACxC,A/B1iBC,kB+BoiBF,kBAAqC,AACrC,kBAAsC,C/BniBnC,AAFD,oB+BwiBA,kBAAsC,AACtC,kBAAuC,CACxC,A/B1iBC,cgCtXJ,sBAAuB,AACvB,gBAAiB,AAGf,6BAAiB,AAAjB,gBAAiB,AACjB,mBAAa,AAAb,oBAAa,AAAb,YAAa,AACb,oBAAe,AAAf,aAAe,ChCkXZ,AAFD,2Be7GN,iBSxR+C,AQb/C,qBAAsB,AACtB,sBAAuB,AACvB,oBAAqB,AACrB,mBAAqB,CAsCd,AhCyWD,mBgC5NF,4BAAuB,AAAvB,6BAAuB,AAAvB,0BAAuB,AAAvB,qBAAuB,ChC8NpB,AAFD,uBgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,oCgCyEM,oBATM,CAUP,AhC1EL,uBgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,oCgCyEM,SATM,CAUP,AhC1EL,uBgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,oCgCyEM,oBATM,CAUP,AhC1EL,uBgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,oCgCyEM,SATM,CAUP,AhC1EL,uBgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,oCgCyEM,SATM,CAUP,AhC1EL,wBgCmEE,6BAHU,AAGV,gBAHU,AAIV,cAJU,ChC9DX,AAFD,qCgCyEM,UATM,CAUP,AlBnHP,0BdyCE,+BgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,4CgCyEM,oBATM,CAUP,AhC1EL,+BgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,4CgCyEM,SATM,CAUP,AhC1EL,+BgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,4CgCyEM,oBATM,CAUP,AhC1EL,+BgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,4CgCyEM,SATM,CAUP,AhC1EL,+BgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,4CgCyEM,oBATM,CAUP,AhC1EL,gCgCmEE,6BAHU,AAGV,gBAHU,AAIV,cAJU,ChC9DX,AAFD,6CgCyEM,UATM,CAUP,CAAA,AlBnHP,wBdyCE,+BgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,4CgCyEM,oBATM,CAUP,AhC1EL,+BgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,4CgCyEM,SATM,CAUP,AhC1EL,+BgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,4CgCyEM,SATM,CAUP,AhC1EL,gCgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,6CgCyEM,oBATM,CAUP,CAAA,AlBnHP,wBdyCE,+BgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,4CgCyEM,oBATM,CAUP,AhC1EL,+BgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,4CgCyEM,SATM,CAUP,AhC1EL,+BgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,4CgCyEM,SATM,CAUP,AhC1EL,+BgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,4CgCyEM,SATM,CAUP,AhC1EL,+BgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,4CgCyEM,SATM,CAUP,AhC1EL,+BgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,4CgCyEM,SATM,CAUP,CAAA,AlBnHP,wBdyCE,gCgCmEE,sCAHU,AAGV,yBAHU,AAIV,uBAJU,ChC9DX,AAFD,6CgCyEM,mBATM,CAUP,AhC1EL,gCgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,6CgCyEM,oBATM,CAUP,AhC1EL,gCgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,6CgCyEM,oBATM,CAUP,AhC1EL,gCgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,6CgCyEM,oBATM,CAUP,AhC1EL,iCgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,8CgCyEM,oBATM,CAUP,AhC1EL,gCgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,6CgCyEM,SATM,CAUP,CAAA,AlBnHP,kDdyCE,uCgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,oDgCyEM,SATM,CAUP,AhC1EL,uCgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,oDgCyEM,oBATM,CAUP,AhC1EL,uCgCmEE,4BAHU,AAGV,eAHU,AAIV,aAJU,ChC9DX,AAFD,oDgCyEM,SATM,CAUP,AhC1EL,uCgCmEE,uCAHU,AAGV,0BAHU,AAIV,wBAJU,ChC9DX,AAFD,oDgCyEM,oBATM,CAUP,CAAA,AhC1EL,aiCjZJ,eAAiB,CjCmZZ,AAFD,iBkCtZF,oBAAsB,CACvB,AlCqZG,0BkCrVJ,sBAAwB,AACxB,4BAA8B,ClCsVzB,AAFD,sEkChVF,oBAAsB,CACvB,AlC+UG,4BkC5UF,sBAAuB,AACvB,oBAAqB,AACrB,mBAAqB,CAStB,AlCiUG,kDkCvUA,ahCpFyB,CAAA,AF2ZzB,0EkCnUA,oCAAa,CACd,AlCkUC,2BkCvGF,oBAAc,AAAd,oBAAc,AAAd,iBAAc,AAAd,YAAc,ClCyGX,AAFD,6BkCpGA,mBAAa,AAAb,oBAAa,AAAb,WAAa,CAKd,AlC+FC,uCe7GN,iBmBYgD,CACzC,AlCgGD,uCkC1FE,aAAe,CAYhB,AAbD,yCAII,mBAAoB,AACpB,kBAAoB,CAOrB,AAZH,mDnBlBN,gBSxRqD,AUmTzC,eAAgB,AAChB,aAAe,CAChB,ApBuCP,0BdyCE,yBkCtZF,oBAAsB,CACvB,CAAA,ApB4WC,2BdyCE,gCkCuCJ,WAAY,AAIV,oBAAc,AAAd,oBAAc,AAAd,iBAAc,AAAd,aAAc,AACd,6BAAiB,AAAjB,gBAAiB,AACjB,qBAAkB,AAAlB,gBAAkB,ClC3Cf,AAFD,kCkCgDA,mBAAa,AAAb,oBAAa,AAAb,YAAa,AACb,oBAAe,AAAf,aAAe,CAChB,AlClDC,4CkCuDE,cAAe,AACf,kBAAoB,CAKrB,AAPD,8CAKI,kBAAoB,CACrB,CAAA,ApBrGL,2BdyCE,0BkCtZF,oBAAsB,CACvB,AlCqZG,mCkCrVJ,sBAAwB,AACxB,4BAA8B,ClCsVzB,AAFD,wFkChVF,oBAAsB,CACvB,AlC+UG,qCkC5UF,sBAAuB,AACvB,oBAAqB,AACrB,mBAAqB,CAStB,AlCiUG,2DkCvUA,ahCpFyB,CAAA,AF2ZzB,mFkCnUA,oCAAa,CACd,CAAA,AlCkUC,SmC3QJ,wBAAiB,AAAjB,qBAAiB,AAAjB,gBAAiB,AACjB,yBfJS,AeKT,SAAU,AACV,gBAAiB,AACjB,clB9JgB,AkB+JhB,qDTrKuB,ASqKvB,6CTrKuB,ASsKvB,sBAAuB,AACvB,WAAY,ApBuJd,mBAlO+C,AFuT/C,yCIzYe,AJ0Yf,6BARyB,CbiClB,AAFD,8BmC3PA,clB1KY,AkB2KZ,SAAW,CACZ,AnCyPC,oCmC3PA,clB1KY,AkB2KZ,SAAW,CACZ,AnCyPC,2BmC3PA,clB1KY,AkB2KZ,SAAW,CACZ,AnCyPC,+BmC3PA,clB1KY,AkB2KZ,SAAW,CACZ,AnCyPC,sBmC3PA,clB1KY,AkB2KZ,SAAW,CACZ,AnCyPC,emCrPF,yBfzBO,Ae0BP,4BlBjLc,AkBkLd,0BAA2B,AAC3B,aAAc,AACd,gDT3LoB,CSoMrB,AnCwOG,oCmC3OE,afnCG,CeoCJ,AnC0OD,0CmC3OE,afnCG,CeoCJ,AnC0OD,iCmC3OE,afnCG,CeoCJ,AnC0OD,qCmC3OE,afnCG,CeoCJ,AnC0OD,4BmC3OE,afnCG,CeoCJ,AnC0OD,gBe7GN,aAlO+C,AFuT/C,yCIzYe,AJ0Yf,6BARyB,CbiClB,AAFD,wFmChHF,alBpTgB,CkBqTjB,AnC+GG,4BmC5GF,yBflKO,AemKP,4BlBzTgB,AkB0ThB,yBAA2B,CAgB5B,AnC0FG,kCmCvGA,wBfvKK,CewKN,AnCsGC,wGmC7FE,uBAA6D,CAC9D,AnC4FD,oHmC7FE,uBAA6D,CAC9D,AnC4FD,kGmC7FE,uBAA6D,CAC9D,AnC4FD,0GmC7FE,uBAA6D,CAC9D,AnC4FD,wFmC7FE,uBAA6D,CAC9D,AnC4FD,iGmCjDF,cf7NO,Ae8NP,cAAgB,CACjB,AnC+CG,oEmCxCA,yBftOK,AeuOL,2BfvOK,CewON,AnCsCC,8GmC7BE,uBAA6D,CAC9D,AnC4BD,0HmC7BE,uBAA6D,CAC9D,AnC4BD,wGmC7BE,uBAA6D,CAC9D,AnC4BD,gHmC7BE,uBAA6D,CAC9D,AnC4BD,8FmC7BE,uBAA6D,CAC9D,AnC4BD,iBmCWJ,iBAAmB,CnCTd,AAFD,uBe7GN,UAlO+C,AoBgW3C,8BAA+B,AAC/B,8BAA+B,AAC/B,clBxbc,AkBybd,WAAY,AACZ,qBAAsB,AACtB,SAAU,AACV,oBAAqB,AACrB,kBAAmB,AACnB,QAAS,AACT,kBAAmB,AACnB,mCAAqB,AAArB,+BAAqB,AAArB,2BAAqB,AACrB,OAAS,CAUV,AAPC,kCnC/BE,uBmCgCA,YAAc,CAMjB,CAAA,AAHC,2DnCnCE,uBmCoCA,oBAAsB,CAEzB,CAAA,AnCtCG,kDe7GN,kBAlO+C,AoB2X3C,cAAgB,CAKjB,AnCjDG,wEmC+CA,YAAc,CACf,AnChDC,gBe7GN,oBoBwM4C,AAC1C,eAAgB,AAChB,iBAAmB,CnC3Fd,AAFD,kCmCiGF,uCAAyC,CAK1C,AnCtGG,6CmCoGA,YAAc,CACf,AnCrGC,mDmC6GE,alBrhBU,CkBshBX,AnC9GD,4Be7GN,QoBgOkC,AAE9B,6BAA8B,AAC9B,iBAAkB,AAClB,cfrYO,AesYP,WAAY,AACZ,cAAe,AACf,WAAY,AACZ,oBAAqB,AACrB,QAAS,AACT,kBAAmB,AACnB,mCAAqB,AAArB,+BAAqB,AAArB,2BAAqB,AACrB,qDT1iBqB,AS0iBrB,6CT1iBqB,AS2iBrB,SAAW,CAmDZ,AnCnLG,iGmCqIA,kBAAmB,AACnB,WAAY,AACZ,iBAAmB,CACpB,AnCxIC,kCmC4IA,yBlBjjBY,AkBmjBZ,YAAa,AAEb,2BAAgB,AAAhB,uBAAgB,AAAhB,mBAAgB,AAEhB,UAAY,CACb,AnCnJC,qE4B9XN,WA5C4B,AOujBtB,cAAe,AAEf,UAAW,AAEX,qDT5jBmB,AS4jBnB,4CT5jBmB,C1B2anB,AmCgKD,mCATC,yBfraK,AeuaL,YAAa,AACb,SAAU,AAEV,QAAS,AACT,gDAAsC,AAAtC,4CAAsC,AAAtC,wCAAsC,AAEtC,UAAY,CACb,AnChKC,mCmCmKA,iBAAkB,AAClB,afpZK,CeyZN,AnCzKC,0CmCuKE,mDAAkE,AAAlE,0CAAkE,CACnE,AnCxKD,qCmC4KA,alBjlBY,CkBulBb,AnClLC,2CmC+KE,UAAW,AACX,4BAAgB,AAAhB,wBAAgB,AAAhB,mBAAgB,CACjB,AAMD,yCACE,GACE,UAAW,AACX,gDAAsC,AAAtC,uCAAsC,CAAA,AAGxC,IACE,UAAY,CAAA,AAGd,IACE,gDAAsC,AAAtC,uCAAsC,CAAA,AAGxC,GACE,UAAW,AACX,gDAAsC,AAAtC,uCAAsC,CAAA,CAAA,AnCvM1C,mBe7GN,oBoBiW4C,AAC1C,eAAgB,AAChB,iBAAmB,CnCpPd,AAFD,wCmC0PF,aAAc,AACd,uCAAyC,CAK1C,AnChQG,mDmC8PA,YAAc,CACf,AnC/PC,yDmCuQE,alB/qBU,CkBgrBX,AnCxQD,+Be7GN,QoB0XkC,AAE9B,6BAA8B,AAC9B,iBAAkB,AAClB,cf/hBO,AegiBP,WAAY,AACZ,oBAAqB,AACrB,QAAS,AACT,kBAAmB,AACnB,sCAAoB,AAApB,kCAAoB,AAApB,8BAAoB,AACpB,mDTnsBoB,ASmsBpB,2CTnsBoB,ASosBpB,SAAW,CAiDZ,AnCzUG,0GmC6RA,WAAY,AACZ,cAAe,AACf,iBAAmB,CACpB,AnChSC,qCmCmSA,mBAAoB,ApBhZ1B,uBoBiZkD,AAC5C,sBAAuB,AACvB,iBAAkB,AAClB,YAAa,AACb,0DAAgD,AAAhD,sDAAgD,AAAhD,kDAAgD,AAChD,mDTrtBkB,ASqtBlB,2CTrtBkB,ASstBlB,SAAW,CACZ,AnC3SC,sCmC8SA,yBf5jBK,Ae6jBL,kBAAmB,AACnB,YAAa,AACb,SAAU,AACV,UAAW,AACX,QAAS,AACT,gDAAsC,AAAtC,4CAAsC,AAAtC,wCAAsC,AACtC,UAAY,CACb,AnCtTC,sCmCyTA,alB9tBY,CkBmuBb,AnC9TC,6CmC4TE,mDAAkE,AAAlE,0CAAkE,CACnE,AnC7TD,wCmCiUA,yBf/kBK,AeglBL,afhlBK,CeslBN,AnCxUC,8CmCqUE,qBlB1uBU,AkB2uBV,8DAAgD,AAAhD,0DAAgD,AAAhD,qDAAgD,CACjD,AAMD,iCACE,GACE,UAAW,AACX,gDAAsC,AAAtC,uCAAsC,CAAA,AAGxC,IACE,UAAY,CAAA,AAGd,IACE,gDAAsC,AAAtC,uCAAsC,CAAA,AAGxC,GACE,UAAW,AACX,gDAAsC,AAAtC,uCAAsC,CAAA,CAAA,AnC7V1C,oCmC2YF,aAAc,AACd,uCAAyC,CAK1C,AnCjZG,+CmC+YA,YAAc,CACf,AnChZC,0FmCyZF,yBfvqBO,AewqBP,alBl0Bc,CkBm0Bf,AnC3ZG,2BmC8ZF,sBlBv0BS,AkBw0BT,qBlBp0Bc,AkBq0Bd,clBr0Bc,AkBs0Bd,kBAAmB,AACnB,oDT70BqB,AS60BrB,2CT70BqB,CSo1BtB,AnCzaG,2DmCqaA,yBlB10BY,AkB20BZ,WlB/0BO,AkBg1BP,kDTn1BkB,ASm1BlB,yCTn1BkB,CSo1BnB,ArBjdD,0BdyCE,yBmC7LJ,2CAAoC,CnC+L/B,CAAA,AAFD,emCsdJ,afpuBS,CpBgRJ,AAFD,kCmCydF,alB73BgB,CkB83BjB,AnC1dG,qCmC6dF,af3uBO,Ce4uBR,AnC9dG,gBmCmgBJ,cfjxBS,AekxBT,cAAgB,CnClgBX,AAFD,mCmCugBF,alB36BgB,CkB46BjB,AnCxgBG,sCmC2gBF,cfzxBO,Ae0xBP,cAAgB,CACjB,AnC7gBG,kB4B9XN,aAhD8B,AQ8M5B,SAAU,AACV,eAAgB,AAChB,YAAa,AACb,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,oCAA6B,AAA7B,4BAA6B,AAC7B,WAAY,ArB2Gd,mCEjSiC,CjBgZ1B,AAFD,oCoCrNF,YAAc,CACf,AA6DC,kDrB0CJ,gEsB1UgF,AtB0UhF,wDsB1UgF,AtB0UhF,+CsBzUwC,AtByUxC,2CsBzUwC,AtByUxC,uCsBzUwC,AtByUxC,kEsBxUgE,CDgS3D,AAKC,4BT/OF,GZkRJ,asBlUiB,AtBkUjB,SsBjUc,CAAA,AV+CV,GZkRJ,csB7TkB,AtB6TlB,UsB5Tc,AtB4Td,+CsB3T0C,AtB2T1C,uCsB3T0C,AtB2T1C,kEsB1TkE,CAAA,AVwC9D,IZkRJ,+CsBtT0C,AtBsT1C,uCsBtT0C,AtBsT1C,kEsBrTkE,CAAA,AVmC9D,GZkRJ,UsBjTc,AtBiTd,+CsBhT0C,AtBgT1C,uCsBhT0C,AtBgT1C,kEsB/SkE,CAAA,CAAA,AD4Q5D,oBT/OF,GZkRJ,asBlUiB,AtBkUjB,SsBjUc,CAAA,AV+CV,GZkRJ,csB7TkB,AtB6TlB,UsB5Tc,AtB4Td,+CsB3T0C,AtB2T1C,uCsB3T0C,AtB2T1C,kEsB1TkE,CAAA,AVwC9D,IZkRJ,+CsBtT0C,AtBsT1C,uCsBtT0C,AtBsT1C,kEsBrTkE,CAAA,AVmC9D,GZkRJ,UsBjTc,AtBiTd,+CsBhT0C,AtBgT1C,uCsBhT0C,AtBgT1C,kEsB/SkE,CAAA,CAAA,ArC4Z5D,Ue7GN,UqBmBkC,AAEhC,eAAgB,AAChB,eAAgB,AAChB,cAAe,AACf,kBAAmB,AACnB,QAAS,AACT,uCAAoB,AAApB,mCAAoB,AAApB,+BAAoB,ArB1BtB,sBE5Ta,AF4Tb,6CE7Ta,CjB4aN,AAFD,gBoChFF,YAAc,CACf,ApC+EG,yDoC3EF,YAAc,CACf,ApC0EG,YsCzUJ,kBAAmB,AACnB,kBAAoB,CtC0Uf,AAFD,8BsCrUF,YAAc,CACf,AtCoUG,kBsCtPJ,cAAe,AACf,WAAY,AvBwId,sBE5Ta,AF4Tb,6EwBlVuC,AxBkVvC,cExTkB,AFwTlB,qDW9TyB,AX8TzB,4CW9TyB,C1B6alB,AAFD,gDe7GN,yBExTkB,AFwTlB,UE5Ta,CU4CR,A3B6XC,uBwCpVF,cAAe,AACf,cAAe,AACf,SAAW,CACZ,AxCiVG,wBa5CN,0BEnS+C,AFoS/C,iBEpS+C,AyB+B3C,cpBkCO,AoBjCP,kCAAS,AACT,cAAe,AACf,iBAAmB,CACpB,A1BmQC,wBdyCE,wBa5CN,eEnS+C,AFoS/C,gBEpS+C,CyBmC5C,CAAA,AxC4SG,uCwCnOA,YAAe,AACf,WAAc,CACf,AxCiOC,uCwCnOA,YAAe,AACf,WAAc,CACf,AxCiOC,yCwCnOA,aAAe,AACf,WAAc,CACf,A1BwLD,0BdyCE,uDwCnOA,YAAe,AACf,WAAc,CACf,CAAA,A1BwLD,wBdyCE,yDwCnOA,aAAe,AACf,WAAc,CACf,AxCiOC,yDwCnOA,aAAe,AACf,WAAc,CACf,AxCiOC,uDwCnOA,YAAe,AACf,WAAc,CACf,AxCiOC,yDwCnOA,aAAe,AACf,WAAc,CACf,CAAA,A1BwLD,wBdyCE,yDwCnOA,YAAe,AACf,WAAc,CACf,CAAA,AxCiOC,c4B9XN,UA7C2B,AayCzB,uBAAwB,AACxB,SAAU,AACV,OAAQ,AACR,SAAU,AACV,UAAW,AACX,kBAAmB,AACnB,QAAS,AACT,KAAO,CzC6XF,AyC5WH,sBbpBJ,UA9C2B,AaoErB,iBAAmB,CACpB,AzCuWC,kCe7GN,c2BjVsB,A3BiVtB,qB2BhVqB,A3BgVrB,iB2B/UiB,A3B+UjB,iB2B9UkB,CCqGb,A3CsVC,0B2CjVA,a1BpFY,C0BqFb,A3CgVC,sC2C5UA,uBAAyB,CAC1B,A3C2UC,O4C7YJ,WAAY,AACZ,sBAAwB,AACxB,SAAW,C5C6YN,AAFD,U6C/YJ,c5BrBkB,A4BsBlB,cAAgB,C7CgZX,AAFD,gBe7GN,gBAlO+C,A8B1D3C,czB2HO,AyB1HP,YAAa,AACb,qBAAsB,AACtB,eAAiB,CAClB,A7CqYG,U8CtUJ,SAAU,AACV,gBAAiB,AACjB,iBAAmB,C9CsUd,AAFD,oB8CpSF,qBAAkB,C9CsSf,AAFD,mB8CpSF,kBAAkB,C9CsSf,AAFD,qB8CpSF,6BAAkB,C9CsSf,AAFD,uB8C9PF,wBAA0B,AAC1B,sBAAwB,AACxB,iBAAmB,AACnB,mBAAqB,AACrB,oBAAsB,AACtB,4BAA8B,AAC9B,gBAAkB,AAClB,oBAAuB,CAuBxB,A9CgOG,S+C5YJ,eAAiB,C/C8YZ,AAFD,W+CzYF,cAAe,AACf,yBAA2B,AAC3B,oBAAuB,CACxB,A/CsYG,gB+CnYF,YAAc,CACf,A/CkYG,uBgDnWJ,YjCoB6C,AiCnB7C,kBAAmB,AACnB,UjCkB6C,CfiVxC,AAFD,2DgD7VF,8BAA+B,AAC/B,WAAY,AACZ,ejCY2C,AiCX3C,SAAU,AACV,kBAAmB,AACnB,QAAS,AACT,sItBrFoB,AsBqFpB,8HtBrFoB,AsBqFpB,sHtBrFoB,AsBqFpB,mKtBrFoB,CsBwFrB,AhDoVG,8BgDjVF,ajCE2C,AiCD3C,2DAAiD,AAAjD,uDAAiD,AAAjD,mDAAiD,AACjD,UjCA2C,CiCC5C,AhD8UG,6BgD3UF,YjCJ2C,AiCK3C,2DAAiD,AAAjD,uDAAiD,AAAjD,mDAAiD,AACjD,WjCN2C,CiCO5C,AhDwUG,iCgDvSF,oCAAa,CAKd,AhDkSG,4DgDpSA,mCAAa,CACd,AhDmSC,wBgDxPJ,mBAAoB,AACpB,gBAAiB,AACjB,6BAAsB,AAAtB,yBAAsB,AAAtB,qBAAsB,AACtB,qDtBtLuB,AsBsLvB,4CtBtLuB,C1B6alB,AAFD,0OgDtMA,iEAAuD,AAAvD,6DAAuD,AAAvD,wDAAuD,CACxD,AhDqMC,oDgDjMF,SAAU,AACV,aAAc,AACd,iBAAkB,AAClB,cAAe,AACf,4BAAiB,AAAjB,wBAAiB,AAAjB,oBAAiB,AACjB,iBAAmB,CAQpB,AAdG,2DAUA,mBAAoB,AACpB,4BAAiB,AAAjB,wBAAiB,AAAjB,oBAAiB,AACjB,kBAAoB,CACrB,AlC4ID,2BdyCE,8QgDtMA,iEAAuD,AAAvD,6DAAuD,AAAvD,wDAAuD,CACxD,AhDqMC,6DgDjMF,SAAU,AACV,aAAc,AACd,iBAAkB,AAClB,cAAe,AACf,4BAAiB,AAAjB,wBAAiB,AAAjB,oBAAiB,AACjB,iBAAmB,CAQpB,AAdG,oEAUA,mBAAoB,AACpB,4BAAiB,AAAjB,wBAAiB,AAAjB,oBAAiB,AACjB,kBAAoB,CACrB,CAAA,AlC4ID,2BdyCE,8QgDtMA,iEAAuD,AAAvD,6DAAuD,AAAvD,wDAAuD,CACxD,AhDqMC,6DgDjMF,SAAU,AACV,aAAc,AACd,iBAAkB,AAClB,cAAe,AACf,4BAAiB,AAAjB,wBAAiB,AAAjB,oBAAiB,AACjB,iBAAmB,CAQpB,AAdG,oEAUA,mBAAoB,AACpB,4BAAiB,AAAjB,wBAAiB,AAAjB,oBAAiB,AACjB,kBAAoB,CACrB,CAAA,AhDqLC,oHgD5HA,2DAAiD,AAAjD,uDAAiD,AAAjD,kDAAiD,CAClD,AhD2HC,kHgDxHA,2DAAiD,AAAjD,uDAAiD,AAAjD,kDAAiD,CAClD,AhDuHC,mDgDnHF,4BAAiB,AAAjB,wBAAiB,AAAjB,oBAAiB,AACjB,kBAAoB,CACrB,AhDiHG,YaxBN,2COtPW,A6BnFT,2BAAsB,AAAtB,wBAAsB,AAAtB,qBAAsB,AACtB,chCrEgB,AgCsEhB,oBAAc,AAAd,oBAAc,AAAd,iBAAc,AAAd,aAAc,AACd,yBAA+B,AAA/B,sBAA+B,AAA/B,6BAA+B,CjDgW1B,AAFD,2BavBN,6BARyB,Cb+BnB,AAEC,ea1BP,2CI7YkB,AgCoGhB,ahCvGgB,CjB0aX,AAFD,mBiD/RJ,c7BiBS,A6BhBT,oBAAsB,CjDgSjB,AAFD,kFiDzRF,oC7BWO,A6BVP,ahC7Ic,CgC8If,AjDuRG,Oe7GN,iBAlO+C,AAkO/C,eAlO+C,AAkO/C,mBAlO+C,AmCzD7C,yB9B0HS,A8BzHT,kBAAmB,AACnB,kExBrCuB,AwBqCvB,yDxBrCuB,C1B6alB,AAFD,wCkDjYF,wB9BmHO,C8BlHR,AlDgYG,QaxBN,yBAlG2D,AAmG3D,iBARyB,AsC5SvB,clC1FgB,AkC2FhB,gBAAiB,AACjB,kBAAoB,CnD2Uf,AAFD,uBe7GN,mBAlO+C,AoCoD3C,cAAe,AACf,oDzBjJqB,AyBiJrB,2CzBjJqB,CyB2KtB,ArCuNC,0BdyCE,uBe7GN,kBAlO+C,CoC+E5C,CAAA,AnDgQG,2GmD7QA,sBlC5JO,AkC6JP,YAAc,CACf,AnD2QC,+DmDxQA,yBlC7JY,AkC8JZ,UlClKO,CkCwKR,AnDiQC,2EmDpQE,sBlC7JO,AkC8JP,alCrKU,CkCsKX,ArCyNH,0BdyCE,qCe7GN,kBAlO+C,CoC6H5C,CAAA,AnDkNG,emD1KJ,iBAAmB,CnD4Kd,AAFD,iCmDvKF,YAAc,CAMf,AnDiKG,uCmDpKA,UAAW,AACX,iBAAmB,CACpB,AnDkKC,qBe7GN,QoCjDkC,AvBhOlC,UA9C2B,AuBiRvB,0EzBjRoB,AyBiRpB,kEzBjRoB,AyBqRpB,yB/BvHO,A+BwHP,WAAY,AACZ,YAAa,AACb,kBAAmB,AACnB,WAAY,AACZ,MAAO,AACP,mBAAoB,AACpB,UAAY,CACb,AAIG,iCACE,IACE,UAAW,AACX,kBAAoB,CAAA,AAGtB,GACE,UAAW,AACX,iBAAmB,CAAA,CAAA,AARvB,yBACE,IACE,UAAW,AACX,kBAAoB,CAAA,AAGtB,GACE,UAAW,AACX,iBAAmB,CAAA,CAAA,ArC0FzB,0BsCjYJ,WrC6TA,gBAlO+C,CqC/E9C,CAAA,AtCqXG,wBsCjYJ,WrC6TA,gBAlO+C,CqC/E9C,CAAA,AtCqXG,wBsCjYJ,WrC6TA,0BAlO+C,CqC/E9C,CAAA,AtCqXG,wBsCjYJ,WrC6TA,0BAlO+C,CqC/E9C,CAAA,AtCqXG,wBuCpUJ,kBtCgQA,yCAlO+C,AAkO/C,4BAlO+C,AAkO/C,0BAlO+C,CsCf9C,AAfD,8BtCgQA,sBAlO+C,CsClBxC,CAAA,AvCwTH,wBuCpUJ,kBtCgQA,yCAlO+C,AAkO/C,4BAlO+C,AAkO/C,0BAlO+C,CsCf9C,AAfD,8BtCgQA,sBAlO+C,CsClBxC,CAAA,AvCwTH,wBuCrSJ,mBtCiOA,8BAlO+C,AAkO/C,iBAlO+C,AAkO/C,eAlO+C,CsCc9C,AAbD,+BtCiOA,WAlO+C,CsCWxC,CAAA,AvC2RH,wBuCrSJ,mBtCiOA,yCAlO+C,AAkO/C,4BAlO+C,AAkO/C,0BAlO+C,CsCc9C,AAbD,+BtCiOA,sBAlO+C,CsCWxC,CAAA,AvC2RH,wBuCvQJ,4BAEI,mBAAa,AAAb,oBAAa,AAAb,YAAa,AACb,iBAAmB,CAmBtB,AAtBD,mCtCmMA,YAlO+C,Aa/C/C,WA1C4B,AyBiItB,yBjCyBK,AiCxBL,SAAU,AACV,WAAY,AACZ,YAAa,AACb,kBAAmB,AACnB,MAAO,AACP,SAAW,CACZ,AAhBL,sCAmBM,YAAc,CACf,CAAA,ACtHH,kBAME,cAAgB,CAIjB,ACjDD,QACE,WAAY,AACZ,mBAAoB,AACpB,cAAgB,CACjB,AAGD,gBACE,oBAAW,CACZ,AzCuYC,wBwCzWF,kBAQoC,eAAiB,CAEpD,CAAA,AAwCD,gB1B9BF,UA5C4B,C0B0FzB,AAhBD,oBAcI,mCAAqB,AAArB,+BAAqB,AAArB,0BAAqB,CACtB,AExGH,qC5B2DF,WA5C4B,A4BJtB,oBAAqB,AACrB,kBAAmB,AACnB,WAAY,AACZ,kBAAmB,AACnB,UAAY,CACb,AAhBH,mBAoBI,wDAA2B,AAA3B,mDAA2B,AAC3B,WAAY,AACZ,YAAa,AACb,KAAO,CAKR,A1CoXD,0B0ChZF,mBA0BM,UAAY,CAEf,CAAA,AA5BH,kBAiCI,scCnDK,ADoDL,QAAU,CAKX,A1CyWD,0B0ChZF,kBAqCM,OAAS,CAEZ,CAAA,AAqBH,6B5BDF,SA9C2B,C4ByDxB,AAcD,kBAOE,ezCe2C,CyCX5C,A1CiTC,0B0C5TF,kBASoC,ezCaS,CyCX5C,CAAA,A1CiTC,wB0C5TF,kBAUqC,ezCYQ,CyCX5C,CAAA,AA6ED,yBAQE,iCAAkC,AAClC,2CAA6C,CAS9C,AAlBD,gCAYI,UvCxKO,CuCyKR,AAbH,6BzCgKF,iBAlO+C,CyCmF1C,AAMH,kCAWI,avC1LY,CuC2Lb,AErKH,gBAEE,cAAgB,CASjB,A5C2VC,0B4CtWF,gBAGoC,cAAgB,CAQnD,CAAA,A5C2VC,wB4CtWF,gBAIoC,eAAiB,CAOpD,CAAA,AC9CD,kB5CqUF,O4CpUgC,A5CoUhC,eAlO+C,A4C/F3C,6BAA8B,AAC9B,oBAAc,AAAd,oBAAc,AAAd,iBAAc,AAAd,aAAc,AACd,YAAa,AACb,YAAa,AACb,kBAAmB,AACnB,MAAO,AACP,qDjCHqB,AiCGrB,4CjCHqB,CiCQtB,A7C0XC,wB6CzYF,kB5CqUF,cAlO+C,C4CpF5C,CAAA,AAGD,2BACE,yBAAoB,AAApB,sBAAoB,AAApB,mBAAoB,AACpB,W1CXS,A0CYT,aAAc,AACd,a1CTc,A0CUd,mBAAa,AAAb,oBAAa,AAAb,YAAa,AACb,wBAAwB,AAAxB,qBAAwB,AAAxB,sBAAwB,CAazB,AAnBD,6GAYM,avCsIG,CuCrIJ,AAbL,+B5CmTF,iBAlO+C,C4ChExC,AAIL,0BAGE,yBvC0HO,AuCzHP,c1C9Bc,A0C+Bd,YAAa,AACb,aAAc,AACd,oDjCvCqB,AiCuCrB,2CjCvCqB,CiC+CtB,AAfD,iGAYI,yBvCiHK,AuChHL,avC8IK,CuC7IN,AAGH,yBACE,YAAc,CACf,AAGD,8BACE,yB1CjDc,A0CkDd,eAAgB,AAChB,cAAgB,CAyBjB,AA5BD,wDAMI,yBvCiGK,AuChGL,U1C3DO,C0CkER,AAdH,2LAYM,wBvC2FG,CuC1FJ,AAbL,yDAiBI,oBAAc,AAAd,oBAAc,AAAd,iBAAc,AAAd,YAAc,CACf,AAlBH,sDAqBI,YAAc,CACf,AAtBH,uDAyBI,cAAe,AACf,aAAe,CAChB,AChFH,8C7C6TF,gBAlO+C,C6CnF1C,A9CyXD,2B+C/YF,2CjC0DF,WA3C4B,AiCEpB,WAAY,AACZ,kBAAmB,AACnB,WAAY,AACZ,UAAY,CACb,AArBL,sBAwBM,sB5CTK,A4CUL,YAAa,AACb,KAAO,CACR,AA3BL,qBAgCM,8MJnDG,AIoDH,QAAU,CACX,CAAA,AAsBL,6BAMI,WAAY,AACZ,SAAW,CACZ,AARH,iCjCEF,YA/C6B,AiCgEvB,qDAA2B,AAA3B,gDAA2B,AAC3B,iEnC/DmB,AmC+DnB,wDnC/DmB,CmCwFpB,AA7CH,uCAuBM,SAAU,AACV,icJnGG,AIoGH,UAAW,AACX,oBAAqB,AACrB,kBAAmB,AACnB,kBAAmB,AACnB,mCAAqB,AAArB,+BAAqB,AAArB,2BAAqB,AACrB,wDnCzEiB,AmCyEjB,gDnCzEiB,AmC0EjB,UAAY,CACb,AAhCL,wCAmCM,sB5C5EK,A4C6EL,a5CzEU,C4CiFX,AA5CL,2IAyCQ,yB5C9EQ,A4C+ER,U5CnFG,C4CoFJ,AA0CP,yC9C8LF,YAlO+C,A8CwCzC,qEAA+D,AAA/D,6DAA+D,AAC/D,yBzCwBK,AyCvBL,YAAa,AACb,UAAW,AACX,oBAAqB,AACrB,kBAAmB,AACnB,MAAO,AACP,kBAAmB,AACnB,SAAW,CACZ,AAbH,6BAgBI,YAAc,CACf,AAGH,wCACE,GAAK,SAAW,CAAA,AAEhB,IAAM,SAAW,CAAA,AAEjB,IAAM,SAAW,CAAA,CAAA,AALnB,gCACE,GAAK,SAAW,CAAA,AAEhB,IAAM,SAAW,CAAA,AAEjB,IAAM,SAAW,CAAA,CAAA,AC5InB,iDAKE,0DpClBqB,AoCkBrB,iDpClBqB,CoCavB,AAmBG,4B/C8RL,sCSmWyE,ATnWzE,kCSmWyE,ATnWzE,8BSmWyE,AsC1oBnE,sC1CsIK,A0CrIL,SAAU,AACV,WAAY,AACZ,YAAa,AACb,kBAAmB,AACnB,2BAAgB,AAAhB,uBAAgB,AAAhB,mBAAgB,AAChB,iCAAkB,AAAlB,yBAAkB,AAElB,UAAY,CACb,AAnBH,2BAsBI,wB1C0HK,C0C9GN,AAlCH,6DA0BM,iCpC5CK,AoC4CL,yBpC5CK,AoC6CL,0DpCzCgB,AoCyChB,iDpCzCgB,CoC0CjB,AA5BL,kCA+BM,2BAAgB,AAAhB,uBAAgB,AAAhB,mBAAgB,AAChB,4BAAkB,AAAlB,mBAAkB,CACnB,ACsEL,qCAME,aAAe,CAShB,AAfD,wDASI,YAAc,CACf,AC+EH,YCjIA,WAAY,AACZ,WAAY,AACZ,aAAe,CAChB,AD8HC,gBE3BE,a9CrBO,C8CqDR,AFLD,cE3BE,ajD5Kc,CiD4Mf,AFLD,mBE3BE,UjDhLS,CiDgNV,AFLD,eE3BE,gBZtGkD,CYsInD,AFLD,oBE3BE,qBCpLuD,CDoNxD,AFLD,YE3BE,ajDxIY,CiDwKb,AFLD,iBE3BE,a9CrBO,C8CqDR,AFLD,oBE3BE,a9CSO,C8CuBR,AFLD,gBE3BE,ajD3KgB,CiD2MjB,AFLD,cE3BE,eJ1HqD,CI0JtD,AFLD,kCE3BE,a9CSO,C8CuBR,AFLD,eE3BE,ajD3KgB,CiD2MjB,AFLD,kBE3BE,mBHjJqD,CGiLtD,ApDgLC,2BkDrLF,wBE3BE,a9CpEgB,C8CoGjB,CAAA,AFLD,iBE3BE,2BZ7LoD,CY6NrD,AFLD,WE3BE,qBjDhLS,CiDgNV,AFLD,cE3BE,wBjDxIY,CiDwKb,AFLD,mBE3BE,wBjDvIiB,CiDuKlB,AFLD,gBE3BE,wBjD5Kc,CiD4Mf,AFLD,mCE3BE,wB9CrBO,C8CqDR,AFLD,qBE3BE,wB9CrBO,C8CqDR,AFLD,mBE3BE,wB9CrBO,C8CqDR,AFLD,wBE3BE,wBjD/Kc,CiD+Mf,AFLD,qBE3BE,wB9CpEgB,C8CoGjB,AFLD,qDE3BE,wB9CrBO,C8CqDR,AFLD,mCE3BE,wB9CrBO,C8CqDR,ApDgLC,0BkDrLF,mBE3BE,qBjDhLS,CiDgNV,CAAA,ApDgLC,2BkDrLF,mCE3BE,qBjDhLS,CiDgNV,CAAA,AFLD,SIAF,oBA7CgB,CJ+Cb,AAFD,QIAF,oBAhDO,AAgDP,oBAhDO,AAgDP,iBAhDO,AAgDP,YAhDO,CJkDJ,AAFD,QIAF,aAlDQ,CJoDL,AAFD,QIAF,cA9CS,CJgDN,AlDmLC,0BkDrLF,iBIAF,oBA7CgB,CJ+Cb,CAAA,AlDmLC,2BkDrLF,iBIAF,aAlDQ,CJoDL,CAAA,AAFD,UK8FA,sBA3HU,AA2HV,mBA3HU,AA2HV,oBA3HU,CL+BT,AAFD,SK8FA,yBA5HO,AA4HP,sBA5HO,AA4HP,kBA5HO,CLgCN,AAFD,UKwJA,0BA3KY,AA2KZ,qBA3KY,CLqBX,AAFD,SKkNA,wBAhOO,AAgOP,qBAhOO,AAgOP,sBAhOO,CLgBN,AAFD,UK6TA,mBC1gB6C,AD0gB7C,oBC1gB6C,AD0gB7C,WC1gB6C,CN+M5C,AAFD,UK6TA,mBNrf6C,AMqf7C,oBNrf6C,AMqf7C,WNrf6C,CC0L5C,AAFD,WK0WA,oBb9e8C,Aa8e9C,ab9e8C,CQsI7C,AAFD,UKmcA,4BAncO,AAmcP,6BAncO,AAmcP,0BAncO,AAmcP,qBAncO,CLEN,AAFD,WjDiHF,USxRqD,CwCyKlD,A1CizRH,qBiD10RM,WAAiB,CAClB,AjD20RL,qBiDx0RM,UAAgB,CACjB,AzDuMD,0BkDrLF,mBjDiHF,USxRqD,CwCyKlD,A1CyzRD,6BiDl1RI,WAAiB,CAClB,AjDm1RH,6BiDh1RI,UAAgB,CACjB,CAAA,APkBH,QjDiHF,KAlO+C,CiDmH5C,AAFD,QjDiHF,QAlO+C,CiDmH5C,AlDmLC,0BkDrLF,gBjDiHF,KAlO+C,CiDmH5C,CAAA,AlDmLC,wBkDrLF,gBjDiHF,QAlO+C,CiDmH5C,CAAA,AAFD,QjDiHF,QAlO+C,CiDmH5C,AAFD,UQyDI,UT7JyC,CCsG5C,AAFD,YjDiHF,OAlO+C,CiDmH5C,A1CwlSH,sBPz+RA,MAlO+C,CyD2GxC,AlDkmSP,sBP3+RA,OAlO+C,CyDkHxC,A1DoLH,wBkDrLF,2BjDiHF,aAlO+C,CiDmH5C,A1CsnSD,qCPvgSF,YAlO+C,CyD2GxC,AlDgoSL,qCPzgSF,aAlO+C,CyDkHxC,CAAA,ARDL,UjDiHF,MAlO+C,CiDmH5C,A1CmpSH,oBPpiSA,OAlO+C,CyDgIxC,AlDwoSP,oBPtiSA,MAlO+C,CyDuIxC,ARtBL,UjDiHF,SAlO+C,CiDmH5C,A1CgrSH,oBPjkSA,UAlO+C,CyDgIxC,AlDqqSP,oBPnkSA,SAlO+C,CyDuIxC,ARtBL,SS/BA,aAlCK,CTmEJ,AAFD,SS/BA,eA/BO,CTgEN,AlDmLC,0BkDrLF,iBS/BA,eA/BO,CTgEN,CAAA,AAFD,US/BA,iBA/BO,CTgEN,AAFD,US/BA,sBAhCS,CTiER,AlDmLC,0BkDrLF,kBS/BA,sBAhCS,CTiER,CAAA,AAFD,UU8CA,iBA7GS,CViER,AAFD,UU8CA,iBA3GS,CV+DR,AAFD,UU8CA,cA5GM,CVgEL,AlDmLC,0BkDrLF,kBU8CA,iBA7GS,CViER,CAAA,AlDmLC,wBkDrLF,qBU8CA,wBAzGU,AAyGV,eAzGU,CV6DT,CAAA,AAFD,YWOE,UC5OoC,CZuOrC,AAFD,WWOE,SnB/F2C,CQ0F5C,AAFD,aWOE,WR5M6C,CHuM9C,AAFD,QjDiHF,UAlO+C,CiDmH5C,AAFD,SjDiHF,WAlO+C,CiDmH5C,AAFD,SjDiHF,WAlO+C,CiDmH5C,AlDmLC,wBkDrLF,kBjDiHF,WAlO+C,CiDmH5C,CAAA,AAFD,WjDiHF,eAlO+C,CiDmH5C,AAFD,aWOE,cEzNgD,CboNjD,AAFD,aWOE,cL3J8C,CNsJ/C,AAFD,WjDiHF,eAlO+C,CiDmH5C,AlDmLC,wBkDrLF,mBjDiHF,eAlO+C,CiDmH5C,CAAA,AAFD,YWOE,WrBvI4C,CUkI7C,AAFD,UWOE,UR7M2C,CHwM5C,AlDmLC,0BkDrLF,mBWOE,UrBtI2C,CUiI5C,CAAA,AAFD,aWOE,eL5J8C,CNuJ/C,AlDmLC,wBkDrLF,qBWOE,eZ9N8C,CCyN/C,CAAA,AAFD,oBjDiHF,eAlO+C,C+D+O9C,Ad9HC,oBjDiHF,eAlO+C,C+D+O9C,Ad9HC,oBjDiHF,eAlO+C,C+D+O9C,Ad9HC,oBjDiHF,eAlO+C,C+D+O9C,Ad9HC,oBjDiHF,eAlO+C,C+D+O9C,Ad9HC,oBjDiHF,eAlO+C,C+D+O9C,Ad9HC,yCjDiHF,eAlO+C,C+D6L1C,AhEyGD,0BkDrLF,6EjDiHF,eAlO+C,C+D+O9C,CAAA,AhEuDG,wBkDrLF,4BjDiHF,eAlO+C,C+D+O9C,CAAA,AhEuDG,wBkDrLF,4BjDiHF,eAlO+C,C+D+O9C,CAAA,AhEuDG,wBkDrLF,6EjDiHF,eAlO+C,C+D+O9C,CAAA,AhEuDG,wBkDrLF,4BjDiHF,eAlO+C,C+D+O9C,CAAA,AhEuDG,2BkDrLF,6BjDiHF,eAlO+C,C+D+O9C,CAAA,AhEuDG,2BkDrLF,6BjDiHF,eAlO+C,C+D+O9C,CAAA,AhEuDG,2BkDrLF,6BjDiHF,eAlO+C,C+D+O9C,CAAA,AhEuDG,2BkDrLF,kDjDiHF,eAlO+C,C+D6L1C,CAAA,AhEyGD,2BkDrLF,6BjDiHF,eAlO+C,C+D+O9C,CAAA,AhEuDG,2BkDrLF,6BjDiHF,eAlO+C,C+D+O9C,CAAA,AhEuDG,2BkDrLF,kDjDiHF,eAlO+C,C+D6L1C,CAAA,AhEyGD,2BkDrLF,6BjDiHF,eAlO+C,C+D+O9C,CAAA,AhEuDG,kDkDrLF,yDjDiHF,eAlO+C,C+D6L1C,CAAA,AhEyGD,kDkDrLF,yDjDiHF,eAlO+C,C+D6L1C,CAAA,Ad5EH,QjDiHF,WAlO+C,CiDmH5C,AAFD,SjDiHF,eAlO+C,CiDmH5C,AAFD,SjDiHF,eAlO+C,CiDmH5C,AAFD,SjDiHF,eAlO+C,CiDmH5C,AAFD,ajDiHF,gBAlO+C,CiDmH5C,AAFD,SjDiHF,YAlO+C,CiDmH5C,AAFD,SjDiHF,eAlO+C,CiDmH5C,AAFD,ajDiHF,gBAlO+C,CiDmH5C,AlDmLC,0BkDrLF,iBjDiHF,eAlO+C,CiDmH5C,CAAA,AlDmLC,0BkDrLF,qBjDiHF,gBAlO+C,CiDmH5C,CAAA,AlDmLC,wBkDrLF,iBjDiHF,eAlO+C,CiDmH5C,CAAA,AlDmLC,wBkDrLF,iBjDiHF,eAlO+C,CiDmH5C,CAAA,AlDmLC,2BkDrLF,kBjDiHF,eAlO+C,CiDmH5C,CAAA,AlDmLC,2BkDrLF,kBjDiHF,eAlO+C,CiDmH5C,CAAA,AlDmLC,2BkDrLF,kBjDiHF,eAlO+C,CiDmH5C,CAAA,AlDmLC,2BkDrLF,kBjDiHF,eAlO+C,CiDmH5C,CAAA,AAFD,SjDiHF,gBAlO+C,CiDmH5C,A1CgnWH,mBPjgWA,iBAlO+C,C+DoTtC,AxDi7VT,mBPngWA,gBAlO+C,C+D2TtC,Ad1MP,SjDiHF,gBAlO+C,CiDmH5C,A1C+oWH,mBPhiWA,iBAlO+C,C+DoTtC,AxDg9VT,mBPliWA,gBAlO+C,C+D2TtC,AhErBL,0BkDrLF,iBjDiHF,gBAlO+C,CiDmH5C,A1CupWD,2BPxiWF,iBAlO+C,C+DoTtC,AxDw9VP,2BP1iWF,gBAlO+C,C+D2TtC,CAAA,Ad1MP,SjDiHF,kBAlO+C,CiDmH5C,AAFD,SjDiHF,kBAlO+C,CiDmH5C,AAFD,SjDiHF,kBAlO+C,CiDmH5C,AAFD,SjDiHF,kBAlO+C,CiDmH5C,AlDmLC,0BkDrLF,iBjDiHF,kBAlO+C,CiDmH5C,CAAA,AlDmLC,2BkDrLF,kBjDiHF,kBAlO+C,CiDmH5C,CAAA,AlDmLC,2BkDrLF,kBjDiHF,kBAlO+C,CiDmH5C,CAAA,AAFD,SjDiHF,iBAlO+C,CiDmH5C,A1C8yWH,mBP/rWA,gBAlO+C,C+D+RtC,AxDooWT,mBPjsWA,iBAlO+C,C+DsStC,AhEAL,0BkDrLF,iBjDiHF,iBAlO+C,CiDmH5C,A1C80WD,2BP/tWF,gBAlO+C,C+D+RtC,AxDoqWP,2BPjuWF,iBAlO+C,C+DsStC,CAAA,AdrLP,Yc6OM,iB1BvbqC,A0BubrC,iB1BvbqC,CY4M1C,AAFD,SjDiHF,iBAlO+C,AAkO/C,iBAlO+C,CiDmH5C,AAFD,ajDiHF,kBAlO+C,AAkO/C,kBAlO+C,CiDmH5C,AlDmLC,0BkDrLF,qBjDiHF,kBAlO+C,AAkO/C,kBAlO+C,CiDmH5C,CAAA,AlDmLC,2BkDrLF,kBjDiHF,iBAlO+C,AAkO/C,iBAlO+C,CiDmH5C,CAAA,AAFD,QjDiHF,YAlO+C,CiDmH5C,AAFD,QjDiHF,YAlO+C,CiDmH5C,AAFD,QjDiHF,YAlO+C,CiDmH5C,AlDmLC,0BkDrLF,gBjDiHF,YAlO+C,CiDmH5C,CAAA,AlDmLC,0BkDrLF,gBjDiHF,YAlO+C,CiDmH5C,CAAA,AlDmLC,wBkDrLF,gBjDiHF,YAlO+C,CiDmH5C,CAAA,AAFD,SjDiHF,gBAlO+C,CiDmH5C,AAFD,SjDiHF,gBAlO+C,CiDmH5C,AAFD,SjDiHF,gBAlO+C,CiDmH5C,AlDmLC,0BkDrLF,iBjDiHF,gBAlO+C,CiDmH5C,CAAA,AlDmLC,0BkDrLF,iBjDiHF,gBAlO+C,CiDmH5C,CAAA,AlDmLC,wBkDrLF,iBjDiHF,gBAlO+C,CiDmH5C,CAAA,AlDmLC,2BkDrLF,kBjDiHF,aAlO+C,CiDmH5C,CAAA,AAFD,SjDiHF,iBAlO+C,CiDmH5C,A1CitXH,mBPlmXA,kBAlO+C,C+DoTtC,AxDkhXT,mBPpmXA,iBAlO+C,C+D2TtC,Ad1MP,SjDiHF,iBAlO+C,CiDmH5C,A1CgvXH,mBPjoXA,kBAlO+C,C+DoTtC,AxDijXT,mBPnoXA,iBAlO+C,C+D2TtC,Ad1MP,SjDiHF,iBAlO+C,CiDmH5C,A1C+wXH,mBPhqXA,kBAlO+C,C+DoTtC,AxDglXT,mBPlqXA,iBAlO+C,C+D2TtC,Ad1MP,SjDiHF,iBAlO+C,CiDmH5C,A1C8yXH,mBP/rXA,kBAlO+C,C+DoTtC,AxD+mXT,mBPjsXA,iBAlO+C,C+D2TtC,AhErBL,wBkDrLF,iBjDiHF,iBAlO+C,CiDmH5C,A1CszXD,2BPvsXF,kBAlO+C,C+DoTtC,AxDunXP,2BPzsXF,iBAlO+C,C+D2TtC,CAAA,AhErBL,wBkDrLF,iBjDiHF,iBAlO+C,CiDmH5C,A1C8zXD,2BP/sXF,kBAlO+C,C+DoTtC,AxD+nXP,2BPjtXF,iBAlO+C,C+D2TtC,CAAA,AhErBL,wBkDrLF,kBjDiHF,iBAlO+C,CiDmH5C,A1C81XD,4BP/uXF,kBAlO+C,C+DoTtC,AxD+pXP,4BPjvXF,iBAlO+C,C+D2TtC,CAAA,AhErBL,wBkDrLF,kBjDiHF,iBAlO+C,CiDmH5C,A1C83XD,4BP/wXF,kBAlO+C,C+DoTtC,AxD+rXP,4BPjxXF,iBAlO+C,C+D2TtC,CAAA,AhErBL,gDkDrLF,0BjDiHF,iBAlO+C,CiDmH5C,A1Cs4XD,oCPvxXF,kBAlO+C,C+DoTtC,AxDusXP,oCPzxXF,iBAlO+C,C+D2TtC,CAAA,Ad1MP,SjDiHF,mBAlO+C,CiDmH5C,AAFD,UjDiHF,oBAlO+C,CiDmH5C,AAFD,UjDiHF,oBAlO+C,CiDmH5C,AAFD,SjDiHF,mBAlO+C,CiDmH5C,AlDmLC,0BkDrLF,oBc6OM,kBhBrWwC,CE0H7C,CAAA,AlDmLC,0BkDrLF,wBc6OM,qBhB7T2C,CEkFhD,CAAA,AlDmLC,0BkDrLF,yBc6OM,sBhBlT4C,CEuEjD,CAAA,AlDmLC,0BkDrLF,kBjDiHF,oBAlO+C,CiDmH5C,CAAA,AlDmLC,wBkDrLF,iBjDiHF,mBAlO+C,CiDmH5C,CAAA,AlDmLC,wBkDrLF,oBc6OM,kBhBpWwC,CEyH7C,CAAA,AlDmLC,wBkDrLF,uBc6OM,oBhB5T0C,CEiF/C,CAAA,AlDmLC,wBkDrLF,yBc6OM,sBhBjT4C,CEsEjD,CAAA,AlDmLC,wBkDrLF,uBc6OM,oBhBnW0C,CEwH/C,CAAA,AlDmLC,wBkDrLF,oBc6OM,kBhBxUwC,CE6F7C,CAAA,AlDmLC,wBkDrLF,uBc6OM,oBhB3T0C,CEgF/C,CAAA,AlDmLC,2BkDrLF,kBjDiHF,mBAlO+C,CiDmH5C,CAAA,AlDmLC,2BkDrLF,kBjDiHF,mBAlO+C,CiDmH5C,CAAA,AAFD,SjDiHF,kBAlO+C,CiDmH5C,A1C63YH,mBP9wYA,iBAlO+C,C+D+RtC,AxDmtYT,mBPhxYA,kBAlO+C,C+DsStC,AdrLP,WxCiMM,iB8CzUwC,CN0I7C,A1C45YH,qBwDpsYU,gBRlWsC,CQmWvC,AxDqsYT,qBwDlsYU,iBRtWsC,CQuWvC,AhE1CL,0BkDrLF,iBjDiHF,kBAlO+C,CiDmH5C,A1C47YD,2BP70YF,iBAlO+C,C+D+RtC,AxDkxYP,2BP/0YF,kBAlO+C,C+DsStC,CAAA,AhEAL,0BkDrLF,iBjDiHF,kBAlO+C,CiDmH5C,A1Co8YD,2BPr1YF,iBAlO+C,C+D+RtC,AxD0xYP,2BPv1YF,kBAlO+C,C+DsStC,CAAA,AhEAL,wBkDrLF,iBjDiHF,kBAlO+C,CiDmH5C,A1C48YD,2BP71YF,iBAlO+C,C+D+RtC,AxDkyYP,2BP/1YF,kBAlO+C,C+DsStC,CAAA,AhEAL,wBkDrLF,iBjDiHF,kBAlO+C,CiDmH5C,A1Co9YD,2BPr2YF,iBAlO+C,C+D+RtC,AxD0yYP,2BPv2YF,kBAlO+C,C+DsStC,CAAA,AhEAL,wBkDrLF,kBjDiHF,kBAlO+C,CiDmH5C,A1Co/YD,4BPr4YF,iBAlO+C,C+D+RtC,AxD00YP,4BPv4YF,kBAlO+C,C+DsStC,CAAA,AhEAL,gDkDrLF,0BjDiHF,kBAlO+C,CiDmH5C,A1C4/YD,oCP74YF,iBAlO+C,C+D+RtC,AxDk1YP,oCP/4YF,kBAlO+C,C+DsStC,CAAA,AdrLP,SjDiHF,kBAlO+C,AAkO/C,kBAlO+C,CiDmH5C,AAFD,SjDiHF,kBAlO+C,AAkO/C,kBAlO+C,CiDmH5C,AlDmLC,0BkDrLF,iBjDiHF,kBAlO+C,AAkO/C,kBAlO+C,CiDmH5C,CAAA,AlDmLC,0BkDrLF,iBjDiHF,kBAlO+C,AAkO/C,kBAlO+C,CiDmH5C,CAAA,AlDmLC,wBkDrLF,iBjDiHF,kBAlO+C,AAkO/C,kBAlO+C,CiDmH5C,CAAA,AlDmLC,wBkDrLF,kBjDiHF,mBAlO+C,AAkO/C,mBAlO+C,CiDmH5C,CAAA,AlDmLC,2BkDrLF,kBjDiHF,kBAlO+C,AAkO/C,kBAlO+C,CiDmH5C,CAAA,AlDmLC,gDkDrLF,0BjDiHF,kBAlO+C,AAkO/C,kBAlO+C,CiDmH5C,CAAA,AAFD,SjDiHF,oBAlO+C,AAkO/C,gBAlO+C,CiDmH5C,AAFD,SjDiHF,oBAlO+C,AAkO/C,gBAlO+C,CiDmH5C,AAFD,YjDiHF,qBAlO+C,AAkO/C,iBAlO+C,CiDmH5C,AlDmLC,0BkDrLF,iBjDiHF,oBAlO+C,AAkO/C,gBAlO+C,CiDmH5C,CAAA,AAFD,UjDiHF,kBAlO+C,CiDmH5C,AlDmLC,0BkDrLF,kBjDiHF,kBAlO+C,CiDmH5C,CAAA,AAFD,WjDiHF,eSxRqD,CwCyKlD,A1C27ZH,qByD7+ZI,gBAAkB,CACnB,AzD8+ZH,qByD3+ZI,eAAiB,CAClB,Af2CD,SexCA,iBA7CO,CfuFN,AAFD,ajDiHF,gBSxR+C,CwCyK5C,A1Cq/ZH,uByDljaI,eAAiB,CAClB,AzDmjaH,uByDhjaI,gBAAkB,CACnB,AjE2OC,2BkDrLF,kBexCA,iBA7CO,CfuFN,CAAA,AlDmLC,2BkDrLF,kBexCA,iBA7CO,CfuFN,CAAA,AAFD,SgB7CA,kBAzCI,ChBwFH,AAFD,UgB7CA,uBAtCU,ChBqFT,AAFD,WiBrEF,kBApBU,CjB2FP,AlDmLC,0BkDrLF,mBiBrEF,kBApBU,CjB2FP,CAAA,AAFD,enDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,ApEqHC,wBkDrLF,enDkLF,eEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,AlBhED,iBnDkLF,eEnS+C,AFoS/C,gBEpS+C,CmEiL5C,ApEqHC,wBkDrLF,iBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,AlBhED,enDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,ApEqHC,wBkDrLF,enDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,AlBhED,enDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,ApEqHC,wBkDrLF,enDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,AlBhED,enDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,ApEqHC,wBkDrLF,enDkLF,eEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,AlBhED,enDkLF,iBEnS+C,AFoS/C,gBEpS+C,CmEiL5C,ApEqHC,wBkDrLF,enDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,AlBhED,cnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,ApEqHC,wBkDrLF,cnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,AlBhED,cnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,ApEqHC,wBkDrLF,cnDkLF,eEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,0BkDrLF,yBnDkLF,eEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,yBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,0BkDrLF,uBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,uBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,0BkDrLF,uBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,uBnDkLF,eEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,0BkDrLF,sBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,sBnDkLF,eEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,sBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,sBnDkLF,eEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,uBnDkLF,iBEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,uBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,uBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,uBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,uBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,uBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,wBnDkLF,eEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,wBkDrLF,wBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,ApEqHC,2BkDrLF,wBnDkLF,0BEnS+C,AFoS/C,gBEpS+C,CmEiL5C,CAAA,AlBhED,WkB0IA,eC7U0C,CD8W3C,AlB3KC,WkB0IA,eCtU0C,CDuW3C,AlB3KC,ckB0LF,4B9E3O0B,C4DmDvB,AAFD,qDkB6OA,yBAlRoC,CA8TrC,AlBzRC,aoBuHF,YAAc,CpBrHX,AlDmLC,0BkDrLF,qBoBuHF,YAAc,CpBrHX,CAAA,AlDmLC,wBkDrLF,qBoBuHF,YAAc,CpBrHX,CAAA,AlDmLC,wBkDrLF,qBoBuHF,YAAc,CpBrHX,CAAA,AlDmLC,2BkDrLF,sBoBuHF,YAAc,CpBrHX,CAAA,AlDmLC,2BkDrLF,sBoBuHF,YAAc,CpBrHX,CAAA,AlDmLC,2BkDrLF,sBoBuHF,YAAc,CpBrHX,CAAA,AlDmLC,2BkDrLF,uBoBuHF,YAAc,CpBrHX,CAAA,AAFD,sBoB6JF,SAAU,AACV,mBAAU,AACV,WAAY,AACZ,YAAa,AACb,gBAAiB,AACjB,UAAW,AACX,kBAAmB,AACnB,SAAW,CpBlKR,AAFD,uFoByKA,UAAW,AACX,YAAa,AACb,SAAU,AACV,iBAAkB,AAClB,gBAAiB,AACjB,UAAY,CACb,AtEMG,0BkDrLF,8BoB6JF,SAAU,AACV,mBAAU,AACV,WAAY,AACZ,YAAa,AACb,gBAAiB,AACjB,UAAW,AACX,kBAAmB,AACnB,SAAW,CpBlKR,AAFD,uGoByKA,UAAW,AACX,YAAa,AACb,SAAU,AACV,iBAAkB,AAClB,gBAAiB,AACjB,UAAY,CACb,CAAA,AtEMG,2BkDrLF,+BoB6JF,SAAU,AACV,mBAAU,AACV,WAAY,AACZ,YAAa,AACb,gBAAiB,AACjB,UAAW,AACX,kBAAmB,AACnB,SAAW,CpBlKR,AAFD,yGoByKA,UAAW,AACX,YAAa,AACb,SAAU,AACV,iBAAkB,AAClB,gBAAiB,AACjB,UAAY,CACb,CAAA,ApB/KC,yCnDsMF,wCOtPW,APuPX,2BARyB,CwErCtB,ArB1JD,gCnDsMF,8BI5YoB,AJ6YpB,gBARyB,CwErCtB,ArB1JD,gCnDsMF,8BI3YmB,AJ4YnB,gBARyB,CwErCtB,ArB1JD,0CnDsMF,yCOtPW,APuPX,2BARyB,CwErCtB,A/D28cH,oDT/5cA,0COtPW,APuPX,4BARyB,CwE5GhB,A/DqhdT,oDTl6cA,yCOtPW,APuPX,2BARyB,CwExGhB,ArBvFP,wBnDsMF,mCwEnKwC,AxEoKxC,6BARyB,CwErCtB,ArB1JD,0CnDsMF,2COtPW,APuPX,6BARyB,CwErCtB,ArB1JD,yCnDsMF,2COtPW,APuPX,6BARyB,CwErCtB,ArB1JD,0CnDsMF,iCOtPW,APuPX,mBARyB,CwErCtB,ArB1JD,yCnDsMF,2COtPW,APuPX,8BARyB,CwErCtB,ArB1JD,iBnDsMF,mCwE5GyE,AxE6GzE,6BARyB,CwErCtB,ArB1JD,0CnDsMF,iCOtPW,APuPX,gBARyB,CwErCtB,ArB1JD,kCnDsMF,iCI7YkB,AJ8YlB,gBARyB,CwErCtB,ArB1JD,ajDiHF,uBsEjB2D,CA0DxD,A/DwqdH,uB+D/tdU,sBAA4B,CAC7B,A/DgudT,uB+D7tdU,uBAA6B,CAC9B,ArBxGP,oCnDsMF,iCI7YkB,AJ8YlB,mBARyB,CwErCtB,A/DosdH,8CTxpdA,gCI7YkB,AJ8YlB,kBARyB,CwEzHhB,A/D2xdT,8CT3pdA,iCI7YkB,AJ8YlB,mBARyB,CwErHhB,ArB1EP,oCnDsMF,8BIzYe,AJ0Yf,oBARyB,CwErCtB,A/DkudH,8CTtrdA,6BIzYe,AJ0Yf,mBARyB,CwEzHhB,A/DyzdT,8CTzrdA,8BIzYe,AJ0Yf,oBARyB,CwErHhB","file":"screen.css","sourcesContent":["// ***************************************\n//\n// # Object\n// -> Define and call reusable css objects\n//    without bloat.\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n//\n// ***************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not (global-variable-exists(jigsass-breakpoints) and mixin-exists(jigsass-mq))) {\n  @error '`jigsass-tools-selectors` has a dependency on `jigsass-tools-mq`. Please import it.';\n}\n\n@if (not function-exists(jigsass-strip-unit)) {\n  @error '`jigsass-tools-selectors` has a dependency on `jigsass-tools-typography`. ' +\n    'Please import it before this file.';\n}\n@if (not function-exists(jigsass-deep-merge)) {\n  @error '`jigsass-tools-selectors` has a dependency on `jigsass-tools-maps`. ' +\n    'Please import it before this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n/// Get media query arguments of current context.\n/// For use inside `jigsass-object`.\n///\n/// When called inside the `@contnet` block without arguments,\n/// it will return a map with `from`, `until` and `misc` keys,\n/// holding the arguments passed to the media query in the\n/// current context of `@content`.\n///\n/// When called with an argument of `from`, `until` or `misc`, it\n/// will return the value of of that key from the above map.\n/// ---\n/// @param {String | Boolean} $type [false]\n///   The type of media-query argument to check.\n///   May be `from`, `until` or `misc`.\n///   If false, Will return a map of all of the above.\n/// ---\n/// @return {String | Map}\n///   The value attached to the queried `$type`, or a map of all\n///   three types.\n/// ---\n/// @group Selectors - 04 Define\n/// ---\n@function jigsass-get-obj-mq($type: false) {\n  @if($jigsass-obj-mq-args) {\n    @return if(\n      $type,\n      map-get($jigsass-obj-mq-args, $type),\n      $jigsass-obj-mq-args\n    );\n  }\n\n  @return null;\n}\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// The current `$modifier` argument in the running\n/// context of the `jigsass-classname` mixin to\n/// be used inside its `@content` block.\n/// ---\n/// @type Null | String\n/// ---\n/// @group Selectors - 05 Require\n/// ---\n$jigsass-obj-modifier: null;\n\n/// The current media query arguments in the running\n/// context of the `jigsass-object` mixin to\n/// be used inside its `@content` block.\n/// ---\n/// @prop {Boolean | Number} from [false]\n///   The min-width condition of the current context.\n/// @prop {Boolean | Number} until [false]\n///   The max-width condition of the current context.\n/// @prop {Boolean | String | List} misc [false]\n///   The miscellaneous media-query conditions of the current context.\n/// ---\n/// @type Map\n/// ---\n/// @group Selectors - 05 Require\n/// ---\n$jigsass-obj-mq-args: (from: false, until: false, misc: false);\n\n/// The name of the object in the current running\n/// context of the `jigsass-classname` mixin to\n/// be used inside its `@content` block.\n/// ---\n/// @type Null | String\n/// ---\n/// @group Selectors - 05 Require\n/// ---\n$jigsass-obj-name: null;\n\n/// The cofiguration map of the object in the current\n/// running context of the `jigsass-object` mixin\n//  for be use inside `jigsass-classname` mixin.\n/// ---\n/// @type Null | Map\n/// ---\n/// @group Selectors - 05 Require\n/// ---\n$jigsass-obj-config: null;\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n/// Define a reusable object class and generate it once,\n/// if it is enabled in configuration map.\n///\n/// By default, including the `jigsass-object` mixin will not generate\n/// any css. For any output to be generated, classes must be\n/// explicitly enabled in the associated configuration map (passed\n/// to the mixin as the `$config` param) _BEFORE_ the object is\n/// `@include`d.\n///\n/// The structure of configuration maps is:\n/// ```scss\n/// // _objects.foo.scss\n/// $foo-map: (\n///   no-breakpoint: (\n///     no-modifier: true,  // Enables generation of the `.o-foo`\n///                         // class outside of any media query.\n///     bar: true,          // Enables generation of the `.o-foo--bar`\n///                         // modifier class outside of any media query.\n///   ),\n///   from-<bp-name>: (\n///     no-modifier: true,  // Enables generation of the `.o-foo--from-<bp-name>`\n///                         // class inside a min-width media query\n///                         // defined ins `$jigsass-breakpoints.length`.\n///     bar: true,          // Enables generation of the `.o-foo--bar--from-<bp-name>`\n///                         // class inside a min-width media query\n///                         // defined ins `$jigsass-breakpoints.length`.\n///   ),\n///   until-<bp-name>: (\n///     no-modifier: true,  // Enables generation of the `.o-foo--until-<bp-name>`\n///                         // class inside a max-width media query\n///                         // defined ins `$jigsass-breakpoints.length`.\n///     bar: true,          // Enables generation of the `.o-foo--bar--until-<bp-name>`\n///                         // class inside a max-width media query\n///                         // defined ins `$jigsass-breakpoints.length`.\n///   ),\n///   when-<bp-name>: (\n///     no-modifier: true,  // Enables generation of the `.o-foo--when-<bp-name>`\n///                         // class inside a misc media query\n///                         // defined ins `$jigsass-breakpoints.features`.\n///     bar: true,          // Enables generation of the `.o-foo--bar--when-<bp-name>`\n///                         // class inside a misc media query\n///                         // defined ins `$jigsass-breakpoints.features`.\n///   ),\n///   from-<bp-name>-until-<bp-name>: (...);\n///   from-<bp-name>-when-<bp-name>: (...);\n///   until-<bp-name>-when-<bp-name>: (...);\n///   from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n/// );\n/// ```\n///\n/// Regardless of how many times the `jigsass-object` mixin is\n/// included, each selector will only be generated once.\n///\n/// If `$jigsass-silent` is set to `true` when the mixin\n/// is first included for a certain selector, the selector\n/// will not be generated, even if the mixin is later included\n/// again for that selector when `$jigsass-silent` is set to false.\n///\n///\n/// Use the `jigsass-classname` mixin inside this mixin's\n/// body to define the base object and each of it's modifiers\n/// **(See example below)**.\n///\n/// When calling the `jigsass-get-obj-mq` function without arguments\n/// inside the `@contnet` block, it will return a map with `from`,\n/// `until` and `misc` keys, holding the arguments passed to the\n/// media query in the current context of `@content`.\n///\n/// When called with an argument of `from`, `until` or `misc`, the\n/// `jigsass-get-obj-mq` will return the value of of that key from\n/// the above map.\n/// ---\n/// @param {String} $name\n///   The name of the object class being defined, sans modifiers.\n///   A modifier's name\n/// @param {Map} $conf\n///   The configuration map in which the generation of the object's class\n///   and modifier classes are enabled.\n/// ---\n/// @example\n///   @include jigsass-object(o-box, $box-config) {\n///     // Defines rules for `.o-box`\n///     @include jigsass-classname() {\n///       padding: if(jigsass-get-obj-mq(misc) == landscape, 24px 48px, 24px));\n///     }\n///\n///     // Defines rules for `.box--cramped`\n///     @include jigsass-classname(box, $modifier: cramped) {\n///       padding: 12px;\n///     }\n///   }\n/// ---\n/// @group Selectors - 04 Define\n/// ---\n@mixin jigsass-object($name, $config) {\n  // Reset media query args in global scope\n  $jigsass-obj-mq-args: (from: false, until: false, misc: false) !global;\n\n  // Set object name in global scope, so that it is\n  // available to `@content` blocks.\n  $jigsass-obj-name: $name !global;\n\n  // Set object config map in global scope, so that it is\n  // available to `@content` blocks.\n  $jigsass-obj-config: $config !global;\n\n  $_lengths: jigsass-mq-sort-length-breakpoints();\n  $_features: map-get($jigsass-breakpoints, features);\n\n  @if (\n    not (\n      global-variable-exists(_jigsass-selectors) and\n      map-has-key($_jigsass-selectors, $name)\n    )\n  ) {\n    $_jigsass-selectors: map-merge(\n      $_jigsass-selectors,\n      _jigsass-generate-selector-map($name)\n    );\n  }\n\n\n\n  // Width breakpoints\n  @if($_lengths) {\n    // Min width breakpoints\n    @each $bp-min, $length-min in $_lengths {\n      $_bp-str: _jigsass-bp-string($bp-min, false, false);\n      @if (map-has-key($config, $_bp-str)) {\n        @include jigsass-mq($from: $bp-min) {\n          @if ($length-min != 0) {\n            // Set current mq args in global scope, so that\n            // they are available to `@content` blocks.\n            $jigsass-obj-mq-args: (from: $bp-min, until: false, misc: false) !global;\n          }\n\n          @content;\n        }\n      }\n    }\n\n    // Max width breakpoints\n    @each $bp-max, $length-max in $_lengths {\n      $_bp-str: _jigsass-bp-string(false, $bp-max, false);\n      @if (map-has-key($config, $_bp-str)) {\n        @if (jigsass-strip-unit($length-max) != 0) {\n          @include jigsass-mq($until: $bp-max) {\n            // Set current mq args in global scope, so that\n            // they are available to `@content` blocks.\n            $jigsass-obj-mq-args: (from: false, until: $bp-max, misc: false) !global;\n\n            @content;\n          }\n        }\n      }\n    }\n\n    // Min and max width breakpoints\n    @each $bp-min, $length-min in $_lengths {\n      @each $bp-max, $length-max in $_lengths {\n        $_bp-str: _jigsass-bp-string($bp-min, $bp-max, false);\n        @if (map-has-key($config, $_bp-str)) {\n          @if (\n            jigsass-strip-unit($length-min) != 0 and\n            jigsass-strip-unit($length-max) != 0 and\n            $length-max > $length-min\n          ) {\n            @include jigsass-mq($from: $bp-min, $until: $bp-max) {\n              // Set current mq args in global scope, so that\n              // they are available to `@content` blocks.\n              $jigsass-obj-mq-args: (from: $bp-min, until: $bp-max, misc: false) !global;\n\n              @content;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Misc media query features breakpoints\n  @if ($_features) {\n    @each $misc-bp, $expression in $_features {\n      $_bp-str: _jigsass-bp-string(false, false, $misc-bp);\n      @if (map-has-key($config, $_bp-str)) {\n        @include jigsass-mq($misc: $misc-bp) {\n          // Set current mq args in global scope, so that\n          // they are available to `@content` blocks.\n          $jigsass-obj-mq-args: (from: false, until: false, misc: $misc-bp) !global;\n\n          @content;\n        }\n      }\n    }\n\n    // Width and misc media queries\n    @if($_lengths) {\n      // Min width and feature breakpoints\n      @each $bp-min, $length-min in $_lengths {\n        @if (jigsass-strip-unit($length-min) != 0) {\n          @each $misc-bp, $expression in $_features {\n            $_bp-str: _jigsass-bp-string($bp-min, false, $misc-bp);\n            @if (map-has-key($config, $_bp-str)) {\n              @include jigsass-mq($from: $bp-min, $misc: $misc-bp) {\n                // Set current mq args in global scope, so that\n                // they are available to `@content` blocks.\n                $jigsass-obj-mq-args: (from: $bp-min, until: false, misc: $misc-bp) !global;\n\n                @content;\n              }\n            }\n          }\n        }\n      }\n\n      // Max width and feature breakpoints\n      @each $bp-max, $length-max in $_lengths {\n        @if (jigsass-strip-unit($length-max) != 0) {\n          @each $misc-bp, $expression in $_features {\n            $_bp-str: _jigsass-bp-string(false, $bp-max, $misc-bp);\n            @if (map-has-key($config, $_bp-str)) {\n              @include jigsass-mq($until: $bp-max, $misc: $misc-bp) {\n                // Set current mq args in global scope, so that\n                // they are available to `@content` blocks.\n                $jigsass-obj-mq-args: (from: false, until: $bp-max, misc: $misc-bp) !global;\n\n                @content;\n              }\n            }\n          }\n        }\n      }\n\n      // Min and max width and feature breakpoints\n      @each $bp-min, $length-min in $_lengths {\n        @each $bp-max, $length-max in $_lengths {\n          @if (\n            jigsass-strip-unit($length-min) != 0 and\n            jigsass-strip-unit($length-max) != 0 and\n            $length-max > $length-min\n          ) {\n            @each $misc-bp, $expression in $_features {\n              $_bp-str: _jigsass-bp-string($bp-min, $bp-max, $misc-bp);\n              @if (map-has-key($config, $_bp-str)) {\n                @include jigsass-mq($from: $bp-min, $until: $bp-max, $misc: $misc-bp) {\n                  // Set current mq args in global scope, so that\n                  // they are available to `@content` blocks.\n                  $jigsass-obj-mq-args: (from: $bp-min, until: $bp-max, misc: $misc-bp) !global;\n                  @content;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Reset in global scope\n  $jigsass-obj-mq-args: (from: false, until: false, misc: false) !global;\n  $jigsass-obj-name: null !global;\n  $jigsass-obj-config: null !global;\n}\n\n\n/// Generate an object or object-modifier class name inside\n/// `jigsass-object`\n/// ---\n/// @param {String | Number | false} $modifier [false]\n///   A modifier's name\n/// @param {String} $name [$jigsass-obj-name]\n///   The object's base name. defaults to the name that was\n///   passed in the calling `jigsass-object` mixin\n/// ---\n/// @example\n///   @include jigsass-object(box) {\n///     // Defines rules from `.box`\n///     @include jigsass-classname() {\n///       padding: if(jigsass-get-obj-mq(misc) == landscape, 24px 48px, 24px));\n///     }\n///\n///     // Defines rules for `.box--cramped`\n///     @include jigsass-classname() {\n///     @include jigsass-classname(box, $modifier: cramped) {\n///       padding: 12px;\n///     }\n///   }\n/// ---\n/// @see {mixin} jigsass-object\n/// ---\n/// @group Selectors - 04 Define\n/// ---\n@mixin jigsass-classname($modifier: false, $name: $jigsass-obj-name) {\n  @if (not $name) {\n    @error 'jigsass-classname: A `$name` is required for generating a selector.';\n  }\n  $from: jigsass-get-obj-mq(from);\n  $until: jigsass-get-obj-mq(until);\n  $misc: jigsass-get-obj-mq(misc);\n  $bp-str: _jigsass-bp-string($from, $until, $misc);\n\n  @if (\n    map-get($jigsass-obj-config, $bp-str) and\n    jigsass-get($jigsass-obj-config, $bp-str, $modifier or no-modifier)\n  ) {\n    // Make the current modifier available to `@content`\n    $jigsass-obj-modifier: $modifier !global;\n\n    $name: $jigsass-obj-name;\n    $selector-str: _jigsass-gen-class-name($name, $from, $until, $misc, $modifier);\n\n    // Make sure $modifier is not called `no-modifier`.\n    @if ($modifier == 'no-modifier') {\n      @error 'jigsass-classname: A jigsass class modifier cannot be called ' +\n        '`no-modifier` (from #{$name}).';\n    }\n\n    // Check if selector was already generated\n    $_was-included: _jigsass-class-was-included($name, $from, $until, $misc, $modifier);\n\n    // Generate selector.\n    // Will only generate CSS once, where it was first included,\n    // regardless of how many times `jigsass-object` was called\n    // with the same arguments.\n    @if (not $_was-included) {\n      // Check that we are not in silent mode\n      @if (not $jigsass-silent) {\n        $selector-str: _jigsass-gen-class-name($name, $from, $until, $misc, $modifier);\n\n        .#{$selector-str} {\n          @content;\n        }\n      }\n\n      // Set class as defined in the `$_jigsass-selectors` map.\n      $_selector-map: (\n        $name: (\n          $bp-str: (\n            $modifier or no-modifier: if($jigsass-silent, silent, true)\n          )\n        )\n      );\n\n      @if (not global-variable-exists(_jigsass-selectors)) { $_jigsass-selectors: () !global; }\n      $_jigsass-selectors: jigsass-deep-merge($_jigsass-selectors, $_selector-map) !global;\n    }\n\n\n    // Reset the current modifier globally\n    $jigsass-obj-modifier: null !global;\n  }\n}\n","// *************************************\n//\n// #BUTTON-SETTINGS\n//\n// *************************************\n/* stylelint-disable indentation */\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (\n  not (\n    global-variable-exists(jigsass-colors) and\n    length($jigsass-colors) > 0 and\n    function-exists(jigsass-color)\n  )\n) {\n  @error 'Button settings depend on color definitions. Please import ' +\n    '`jigsass-tools-color` and `_settings.color.scss` before ' +\n    'importing `_settings.buttons.scss`';\n}\n@if (not global-variable-exists(animation)) {\n  @error 'Button settings depend on `_settings.animation.scss`. Please import it before ' +\n    'importing `_settings.buttons.scss`';\n}\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// Button padding modifiers\n//\n// A map of button padding modifiers, each key should contain a list of two\n// unitless numbers, representing the number of rhythm units used as padding\n// on the horizontal and vertical axes, respectively.\n// ---\n// @prop {List} default\n//   Sets the padding of default button object.\n// ---\n// @type Map\n// ---\n$jigsass-btn-padding: (\n  default: 2 1,\n  small: 1 0.5,\n  large: 3 3,\n);\n\n\n// The border width and style (and optionally color) of\n// outlined buttons\n// ---\n// @type {List}\n$jigsass-btn-outline: 1px solid;\n\n\n// Style declarations to add to the `.o-btn` class.\n// ---\n// @type Map\n// ---\n$jigsass-btn-style: (\n  min-width: 0,\n  transition: all get-anim(short, swift-out),\n);\n\n\n// Button modifiers\n//\n// CSS declarations for button modifiers, with each modifier being a nested\n// map at the first level.\n// ---\n// @type Map\n// ---\n$jigsass-btn-modifiers: (\n  primary: (\n    background-color: jigsass-color('primary'),\n    color: jigsass-color('text-inverse'),\n\n    '&:hover:enabled, &:focus:enabled, &:active:enabled': (\n      background-color: jigsass-color('quinary' (jigsass-shade: 4) (saturate: 8)),\n      // background-color: jigsass-color('primary' (jigsass-shade: 4) (saturate: 4)),\n      color: jigsass-color('black'),\n      outline: none,\n    )\n  ),\n  primary-text: (\n    color: jigsass-color('text-pale'),\n\n    '&:hover:enabled, &:focus:enabled, &:active:enabled': (\n      color: jigsass-color('primary'),\n    )\n  ),\n  quinary: (\n    background-color: jigsass-color('quinary'),\n    color: jigsass-color('black'),\n\n    '&:hover:enabled, &:focus:enabled, &:active:enabled': (\n      background-color: jigsass-color('quinary' (jigsass-shade: 4) (saturate: 8)),\n      outline: none,\n    )\n  ),\n  inverse: (\n    background-color: jigsass-color('bg'),\n\n    '&:hover:enabled, &:focus:enabled, &:active:enabled': (\n      color: jigsass-color('primary'),\n    ),\n  ),\n  inverse-b: (\n    color: jigsass-color('text-inverse'),\n\n    '&:hover:enabled, &:focus:enabled, &:active:enabled': (\n      background-color: jigsass-color('bg'),\n      color: jigsass-color('primary'),\n      outline: none,\n    ),\n  ),\n  neutral: (\n    background-color: jigsass-color('neutral' (jigsass-tint: 2)),\n    color: jigsass-color('white'),\n\n    '&:hover:enabled, &:focus:enabled, &:active:enabled': (\n      background-color: jigsass-color('neutral'),\n      outline: none,\n    )\n  ),\n  sales: (\n    background-color: jigsass-color('sales'),\n    color: #fff,\n\n    '&:hover:enabled, &:focus:enabled, &:active:enabled': (\n      background-color: jigsass-color('sales' (jigsass-shade: 6) (saturate: 4)),\n      outline: none,\n    )\n  ),\n  facebook: (\n    color: jigsass-color('facebook'),\n\n    '&:hover:enabled, &:focus:enabled, &:active:enabled': (\n      color: jigsass-color('facebook' (jigsass-shade: 6) (saturate: 8)),\n    )\n  ),\n  twitter: (\n    color: jigsass-color('twitter'),\n\n    '&:hover:enabled, &:focus:enabled, &:active:enabled': (\n      color: jigsass-color('twitter' (jigsass-shade: 6) (saturate: 8)),\n    )\n  ),\n  whatsapp: (\n    color: jigsass-color('whatsapp'),\n    fill: jigsass-color('text-inverse'),\n\n    '&:hover:enabled, &:focus:enabled, &:active:enabled': (\n      color: jigsass-color('whatsapp' (jigsass-shade: 6) (saturate: 8)),\n    )\n  ),\n  gplus: (\n    color: jigsass-color('gplus'),\n\n    '&:hover:enabled, &:focus:enabled, &:active:enabled': (\n      color: jigsass-color('gplus' (jigsass-shade: 6) (saturate: 8)),\n    )\n  ),\n  full: (\n    display: block,\n    max-width: 100%,\n    width: 100%,\n  ),\n  action: (\n    border-bottom-color: currentColor,\n    font-weight: 700,\n    padding-left: 0,\n    padding-right: 0,\n    position: relative,\n\n    '&:after': (\n      background-color: currentColor,\n      bottom: -1 * nth($jigsass-btn-outline, 1),\n      content: '',\n      height: 2px,\n      left: 0,\n      right: 0,\n      position: absolute,\n      transform: scaleX(0),\n      transition: all get-anim(short, swift-out),\n    ),\n\n    '&:hover:enabled, &:focus:enabled, &:active:enabled': (\n      outline: none,\n\n      '&:after': (\n        transform: scaleX(1),\n      ),\n    ),\n  ),\n  action-is-active: (\n    '&:after': (\n      transform: scaleX(1),\n    ),\n  ),\n  busy: (\n    '&, &:hover, &:active, &:focus': (\n      background-color: jigsass-color('bg'),\n      border-color: jigsass-color('primary'),\n      border-radius: 10em,\n      color: jigsass-color('text-inverse'),\n      display: block,\n      min-width: 75%,\n      max-width: 75%,\n      opacity: .999, // Fix border overflow bug\n      outline: none,\n      overflow: hidden,\n      position: relative,\n      transition: all get-anim('mid', 'linear'),\n    ),\n\n    '&:after': (\n      animation: busy get-anim('xlong', 'linear') infinite alternate,\n      background-color: jigsass-color('primary'),\n      border-radius: 10em,\n      content: '',\n      height: 100%,\n      position: absolute,\n      start: 0,\n      top: 0,\n      transform: translateX(120%),\n      width: 100%,\n      will-change: transform,\n      z-index: z-index('below'),\n    ),\n  ),\n\n  click-area-6: (\n   height: jigsass-rhythm(6),\n   line-height: jigsass-rhythm(6),\n   min-width: jigsass-rhythm(6),\n   text-align: center,\n  ),\n  click-area-7: (\n   height: jigsass-rhythm(7),\n   line-height: jigsass-rhythm(7),\n   min-width: jigsass-rhythm(7),\n   text-align: center,\n  ),\n);\n\n// Keyframe animation for busy buttons\n@keyframes busy {\n  0% {\n    opacity: 0;\n    transform: translateX(110%);\n  }\n\n  20% {\n    transform: translateX(110%);\n  }\n\n  50% { opacity: 1; }\n\n  80% { transform: translateX(0); }\n\n  100% { transform: translateX(0); }\n}\n\n// Style declarations for the `.o-btn-is-disabled` class.\n// ---\n// @type Map\n// ---\n$jigsass-btn-disabled: (\n  cursor: default,\n  opacity: .4,\n);\n","// *************************************\n//\n// #LIST-SETTINGS\n// -> Lists related settings\n//\n// *************************************\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (\n  not (\n    global-variable-exists(jigsass-colors) and\n    length($jigsass-colors) > 0 and\n    function-exists(jigsass-color)\n  )\n) {\n  @error 'Lists settings depend on color definitions. Please import ' +\n    '`jigsass-tools-color` and `_settings.color.scss` before ' +\n    'importing `_settings.lists.scss`';\n}\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// Determines if flexbox should be enables, where relevant\n// ---\n// @type Boolean\n// ---\n$jigsass-lists-flexbox: true;\n\n// Determines if flexbox fallback should be included and the qualifier class\n// to use if so (e.g, `.no-flexbox` when using Modernizr defaults)\n//\n// Set to `false` to disable fallback altogether, and to a class-name\n// (sans the leading `.`) used as the qualifier class if fallback is\n// desirable.\n// ---\n// @type String | Boolean\n// ---\n$jigsass-lists-flexbox-fallback: 'no-flexbox';\n\n// The default delimiter to use with `.o-inline-list--delimited`.\n// ---\n// @type String\n// ---\n$jigsass-lists-inline-delimiter: '\\2002|\\2002';\n\n// Sets the default border and padding above `devided-list`s' list items.\n//\n// A list of arguments for the `[jigsass-border-top](http://tinyurl.com/js-border-top)`\n// mixin in the following order:\n//\n//   - A number in pixels. The border's width.\n//   - A unitless number. The number of\n//     [typographic lines](https://txhawks.github.io/jigsass-tools-typography/) occupied\n//     by the border and padding added together.\n//   - A string. The border's style (e.g., `solid`, `dotted`, etc.).\n// ---\n// @type {List}\n// ---\n$jigsass-lists-divided-border: 1px 2 (solid jigsass-color(border-neutral));\n\n// Border modifiers for divided lists.\n//\n// A map where each key is a modifier's name and its value is a\n// list in the same format used in `$jigsass-lists-divided-border`.\n// ---\n// @type Map\n// ---\n$jigsass-lists-divided-border-modifiers: (\n  tight: 1px 1 (solid jigsass-color(border-neutral)),\n  loose: 1px 4 (solid jigsass-color(border-neutral)),\n  xloose: 1px 8 (solid jigsass-color(border-neutral)),\n);\n","// *************************************\n//\n// # Normalize Root\n// -> Root elements\n//\n////\n/// @group Normalize - 02 - Root\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-block)) {\n  @error '`jigsass-generic-normalize` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n// For internal framework use. Never use directly\n%_jigsass-normalize-root-html {\n  // 1. Change the default font family in all browsers.\n  // 2. Prevent adjustments of font size after orientation changes in IE and iOS.\n  font-family: $jigsass-normalize-default-font-family; // [1]\n  -ms-text-size-adjust: 100%; // [2]\n  -webkit-text-size-adjust: 100%; // [2]\n}\n\n// For internal framework use. Never use directly\n%_jigsass-normalize-root-body {\n  // Remove the margin in all browsers (opinionated).\n  margin: 0;\n}\n\n/// Normalize the body and html elements\n@mixin jigsass-normalize-root {\n  $_was-included: if(\n    not global-variable-exists(_jigsass-selectors),\n    false,\n    jigsass-get($_jigsass-selectors, jigsass-normalize-root) or false\n  );\n\n  @if (not $_was-included) {\n    @if (not global-variable-exists(jigsass-silent) or not $jigsass-silent) {\n      @at-root {\n        html {\n          @extend %_jigsass-normalize-root-html;\n        }\n\n        body {\n          @extend %_jigsass-normalize-root-body;\n        }\n      }\n    }\n\n    // Set class as defined in the `$_jigsass-selectors` map.\n    $_selector-map: (\n      jigsass-normalize-root: if(\n        global-variable-exists(jigsass-silent) and $jigsass-silent,\n        silent,\n        true\n      )\n    );\n\n    @if (not global-variable-exists(_jigsass-selectors)) { $_jigsass-selectors: () !global; }\n    $_jigsass-selectors: jigsass-deep-merge($_jigsass-selectors, $_selector-map) !global;\n  }\n}\n","// *************************************\n//\n// #TYPOGRAPHY-SETTINGS\n// -> Typographic settings\n//\n// *************************************\n/* stylelint-disable indentation */\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not global-variable-exists(jigsass-breakpoints)) {\n  @error 'Typographic settings depend on breakpoint settings. \\a' +\n    'Please import `_settings.mq.scss` before importing `_settings.typography.scss`';\n}\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// The default output unit.\n// ---\n// @type String\n// ---\n$jigsass-default-unit: rem;\n\n// Should px fallback values be outputted when outputting rems.\n// ---\n// @type Boolean\n// ---\n$jigsass-rem-px-fallback: false;\n\n\n\n// User-defined ratios for modular scales.\n//\n// Extends the default ratios:\n//   golden: 1.618,\n//   minor-second: 1.067,\n//   major-second: 1.125,\n//   minor-third: 1.2,\n//   major-third: 1.25,\n//   perfect-fourth: 1.333,\n//   augmented-fourth: 1.414,\n//   perfect-fifth: 1.5,\n//   minor-sixth: 1.6,\n//   major-sixth: 1.667,\n//   minor-seventh: 1.778,\n//   major-seventh: 1.875,\n//   octave: 2,\n//   major-tenth: 2.5,\n//   major-eleventh: 2.667,\n//   major-twelfth: 3,\n//   double-octave: 4,\n//\n// **Define your own values BEFORE importing `jigsass-tools-typography.**\n// ---\n// @type Map\n// ---\n// @link http://www.modularscale.com\n// ---\n$jigsass-ratios: ();\n\n// The default ratio used to construct modular scales.\n// ---\n// @type String\n// ---\n$jigsass-default-ratio: major-third;\n\n\n// Reusable responsive named sizes\n//\n// A per-breakpoint mapping of name to sizes formatted as\n// `name: size` or `name: base multiplier [ratio]`\n// ---\n// @property {Map} size\n//   Values of given size at different breakpoints\n// @property {Number | List | String} size.breakpoint\n//   The assigned size at the given breakpoint.\n//\n//   When a `List`: First item is the base for multiplication,\n//   second item is the multiplier, third, optional, item is the ratio.\n//   If there are only two items in the `name` list, ratio\n//   will resolve to the value of `$jigsass-default-ratio`.\n//\n//   When a `String`: An alias to another size.\n// ---\n// @type Map\n// ---\n$jigsass-sizes: (\n  // Base\n  rhythm-unit: (\n    default: 6px,\n    xl: 7px,\n  ),\n  body: (\n    default: 16px,\n    xl: 18px,\n  ),\n  min-line-padding: (\n    default: 2px,\n  ),\n\n\n  // Small print\n  nano: (\n    default: body -3 major-second,\n    xl: body -3 major-second,\n  ),\n  micro: (\n    default: body -2 major-second,\n    xl: body -2 major-second,\n  ),\n  milli: (\n    default: body -1 major-second,\n    xl: body -1 major-second,\n  ),\n\n  // Headings\n  zeta: (\n    default: body,\n    xl: body,\n  ),\n  epsilon: (\n    default: body 1 major-second,\n    xl: body 1 major-second,\n  ),\n  delta: (\n    default: body 1,\n    xl: body 1,\n  ),\n  gamma: (\n    default: body 2,\n    xl: body 2,\n  ),\n  beta: (\n    default: body 3,\n    xl: body 3,\n  ),\n  alpha: (\n    default: body 4,\n    xl: body 4,\n  ),\n\n  // Hero sizes\n  kilo: (\n    default: body 5,\n    xl: body 5,\n  ),\n  mega: (\n    default: body 6,\n    xl: body 6,\n  ),\n  giga: (\n    default: body 7,\n    xl: body 7,\n  ),\n  tera: (\n    default: body 8,\n    xl: body 8,\n  ),\n\n  // Layout Width\n  // 1. Deduct scrollbar width\n  // ---\n  l-width: (\n    s: map-get(map-get($jigsass-breakpoints, lengths), s),\n    m: map-get(map-get($jigsass-breakpoints, lengths), m),\n    l: map-get(map-get($jigsass-breakpoints, lengths), l) - 17px, // [1]\n    xl: map-get(map-get($jigsass-breakpoints, lengths), xl) - 17px, // [1]\n  ),\n\n  // Sidebar width in two column layouts\n  // 1. The width of an ad, plus gutters.\n  // ---\n  l-sidebar: (\n    l: 348px,   // [1]\n    xl: 356px,  // [1]\n  )\n);\n\n// A map holding named lists of font-family stacks.\n// ---\n// @type Map\n// ---\n$jigsass-font-stacks: (\n  default: ('Open Sans Hebrew' arial, sans-serif),\n  alt: (arial, sans-serif),\n  advert: (arial, sans-serif),\n);\n\n// Set the font family of the html element.\n// stylelint-disable font-family-name-quotes\n$jigsass-normalize-default-font-family: map-get($jigsass-font-stacks, default);\n// stylelint-enable font-family-name-quotes\n","// ***************************************\n//\n// # Block\n// -> Define and call custom CSS\n//    blocks without bloat.\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n//\n// ***************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n/// Define a custom css block that can be later enabled\n/// and generated _once_ where it was defined.\n/// ---\n/// @param {String} $name\n///   The name of the CSS block being defined, e.g. `normalize-forms`\n/// ---\n/// @example\n///   @include jigsass-define-block(normalize-forms) {\n///     form { margin: 0; }\n///\n///     button,\n///     input,\n///     optgroup,\n///     select,\n///     textarea {\n///       color: inherit;\n///       font: inherit;\n///       margin: 0;\n///     }\n///   }\n///   // ...\n/// ---\n/// @group Selectors - 04 Define\n/// ---\n@mixin jigsass-define-block($name) {\n  %__jigsass-block-#{$name} {\n    @content;\n  }\n}\n\n\n/// Generate CSS of a defined block\n///\n/// Regardless of how many times the mixin is called with a\n/// certain set of argument, the rules defined in the block\n/// will only be generated once.\n///\n/// **The generated styles will be created where they was defined**,\n/// not where it was included.\n///\n/// If `$jigsass-silent` is set to `true` when a block is first\n/// included with a certain set of argument, no CSS will be generated\n/// for that argument set.\n/// ---\n/// @param {String} $name\n///   The name of the block to generate, as previously\n///   defined by calling jigsass-define-block\n/// @param {String | Boolean} $scope [false]\n///   A selector to use for scoping the defined styles,\n///   Must be quoted\n/// ---\n/// @group Selectors - 05 Require\n/// ---\n@mixin jigsass-block($name, $scope: false) {\n  // Check if selector was already generated\n  $_was-included: if(\n    not global-variable-exists(_jigsass-selectors),\n    false,\n    jigsass-get($_jigsass-selectors, $name, $scope or universal) or false\n  );\n\n  // Generate block\n  // Will only generate a block once, where it was defined,\n  // regardless of how many times `jigsass-block` was called\n  // with the same argument.\n  @if (not $_was-included) {\n    // Check that we are not in silent mode\n    @if (not global-variable-exists(jigsass-silent) or not $jigsass-silent) {\n      // Create the selectors and styles defined in the `$name`\n      // stylelint-disable\n      #{$scope or '*'} { // stylelint-enable\n        @extend %__jigsass-block-#{$name};\n      }\n    }\n\n    // Set class as defined in the `$_jigsass-selectors` map.\n    $_selector-map: (\n      $name: (\n        $scope or universal: if(\n          global-variable-exists(jigsass-silent) and $jigsass-silent,\n          silent,\n          true\n        )\n      )\n    );\n\n    @if (not global-variable-exists(_jigsass-selectors)) { $_jigsass-selectors: () !global; }\n    $_jigsass-selectors: jigsass-deep-merge($_jigsass-selectors, $_selector-map) !global;\n  }\n}\n","// *************************************\n//\n// # Normalize HTML5\n// -> HTML 5 display definitions\n//\n////\n/// @group Normalize - 03 - HTML5\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-block)) {\n  @error '`jigsass-generic-normalize` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-block(normalize-html5) {\n  // Add the correct display in IE 9-.\n  // 1. Add the correct display in Edge, IE, and Firefox.\n  // 2. Add the correct display in IE.\n  article,\n  aside,\n  details, // [1]\n  figcaption,\n  figure,\n  footer,\n  header,\n  main, // [2]\n  menu,\n  nav,\n  section,\n  summary { // [1]\n    display: block;\n  }\n\n  // Add the correct display in IE 9-.\n  audio,\n  canvas,\n  progress,\n  video {\n    display: inline-block;\n  }\n\n  // Add the correct display in iOS 4-7.\n  audio:not([controls]) {\n    display: none;\n    height: 0;\n  }\n\n  // Add the correct vertical alignment in Chrome, Firefox, and Opera.\n  progress {\n    vertical-align: baseline;\n  }\n\n  // Add the correct display in IE 10-.\n  // 1. Add the correct display in IE.\n  template, // [1]\n  [hidden] {\n    display: none;\n  }\n}\n","// *************************************\n//\n// # Normalize Links\n// -> Normalize links styles\n//\n////\n/// @group Normalize -04 - Links\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-block)) {\n  @error '`jigsass-generic-normalize` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-block(normalize-links) {\n  // Remove the gray background on active links in IE 10.\n  a {\n    background-color: transparent;\n  }\n\n  // Remove the outline on focused links when they are also\n  // active or hovered in all browsers (opinionated).\n  a:active,\n  a:hover {\n    outline-width: 0;\n  }\n}\n","// *************************************\n//\n// # Normalize Text\n// -> Text level semantics\n//\n////\n/// @group Normalizea - 05 - Text\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-block)) {\n  @error '`jigsass-generic-normalize` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-block(normalize-text) {\n  // 1. Remove the bottom border in Firefox 39-.\n  // 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n  abbr[title] {\n    border-bottom: none; // [1]\n    text-decoration: underline; // [2]\n    text-decoration: underline dotted; // [2]\n  }\n\n  // Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n  b,\n  strong {\n    // stylelint-disable\n    font-weight: inherit;\n    // stylelint-enable\n  }\n\n  // Add the correct font weight in Chrome, Edge, and Safari.\n  b,\n  strong {\n    // stylelint-disable\n    font-weight: bolder;\n    // stylelint-enable\n  }\n\n  // Add the correct font style in Android 4.3-.\n  dfn {\n    font-style: italic;\n  }\n\n  @if ($jigsass-normalize-h1) {\n    // Correct the font size and margin on `h1` elements within `section` and\n    // `article` contexts in Chrome, Firefox, and Safari.\n    h1 {\n      font-size: 2em;\n      margin: 0.67em 0;\n    }\n  }\n\n  // Add the correct background and color in IE 9-.\n  mark {\n    background-color: #ff0;\n    color: #000;\n  }\n\n  // Add the correct font size in all browsers.\n  small {\n    font-size: 80%;\n  }\n\n  // Prevent `sub` and `sup` elements from affecting the\n  // line height in all browsers.\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n\n  sub {\n    bottom: -0.25em;\n  }\n\n  sup {\n    top: -0.5em;\n  }\n}\n","// *************************************\n//\n// # Normalize Embedded\n// -> Embedded content\n//\n////\n/// @group Normalize - 06 - Embedded\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-block)) {\n  @error '`jigsass-generic-normalize` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-block(normalize-embedded) {\n  // Remove the border on images inside links in IE 10-.\n  img {\n    border-style: none;\n  }\n\n  // Hide the overflow in IE.\n  svg:not(:root) {\n    overflow: hidden;\n  }\n}\n","// *************************************\n//\n// # Normalize Grouping\n// -> Grouping content\n//\n////\n/// @group Normalize - 07 - Grouping\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-block)) {\n  @error '`jigsass-generic-normalize` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-block(normalize-grouping) {\n  // 1. Correct the inheritance and scaling of font size in all browsers.\n  // 2. Correct the odd `em` font sizing in all browsers.\n  code,\n  kbd,\n  pre,\n  samp {\n    font-family: monospace, monospace; // [1]\n    font-size: 1em; // [2]\n  }\n\n  @if ($jigsass-normalize-fig-margins) {\n    // Add the correct margin in IE 8.\n    figure {\n      margin: 1em 40px;\n    }\n  }\n\n  // 1. Add the correct box sizing in Firefox.\n  // 2. Show the overflow in Edge and IE.\n  hr {\n    box-sizing: content-box; // [1]\n    height: 0; // [1]\n    overflow: visible; // [2]\n  }\n}\n","// *************************************\n//\n// # Normalize Forms\n// -> Form elements\n//\n////\n/// @group Normalize - 08 - Forms\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-block)) {\n  @error '`jigsass-generic-normalize` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-block(normalize-forms) {\n  // 1. Change font properties to `inherit` in all browsers (opinionated).\n  // 2. Remove the margin in Firefox and Safari.\n  button,\n  input,\n  select,\n  textarea {\n    font: inherit; // [1]\n    margin: 0; // [2]\n  }\n\n  // Restore the font weight unset by the previous rule.\n  optgroup {\n    // stylelint-disable\n    font-weight: bold;\n    // stylelint-enalble\n  }\n\n  // Show the overflow in IE.\n  // 1. Show the overflow in Edge.\n  // 2. Show the overflow in Edge, Firefox, and IE.\n  button,\n  input, // [1]\n  select { // [2]\n    overflow: visible;\n  }\n\n  // Remove the inheritance of text transform in Edge, Firefox, and IE.\n  // 1. Remove the inheritance of text transform in Firefox.\n  button,\n  select { // [1]\n    text-transform: none;\n  }\n\n  // Change the cursor in all browsers (opinionated).\n  button,\n  [type='button'],\n  [type='reset'],\n  [type='submit'] {\n    cursor: pointer;\n  }\n\n  // Restore the default cursor to disabled elements unset by the previous rule.\n  [disabled] {\n    cursor: default;\n  }\n\n  // 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n  //    controls in Android 4.\n  // 2. Correct the inability to style clickable types in iOS.\n  button,\n  body [type='button'], // [1]\n  [type='reset'],\n  [type='submit'] {\n    -webkit-appearance: button; // [2]\n  }\n\n  // Remove the inner border and padding in Firefox.\n  button::-moz-focus-inner,\n  input::-moz-focus-inner {\n    border: 0;\n    padding: 0;\n  }\n\n  // Restore the focus styles unset by the previous rule.\n  button:-moz-focusring,\n  input:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n\n  // Change the border, margin, and padding in all browsers (opinionated).\n  @if ($jigsass-normalize-fieldset) {\n    fieldset {\n      border: 1px solid #c0c0c0;\n      margin: 0 2px;\n      padding: 0.35em 0.625em 0.75em;\n    }\n  }\n  @else {\n    fieldset {\n      border: 0;\n      margin: 0;\n      padding: 0;\n    }\n  }\n\n  // 1. Correct the text wrapping in Edge and IE.\n  // 2. Correct the color inheritance from `fieldset` elements in IE.\n  // 3. Remove the padding so developers are not caught out when they zero out\n  //    `fieldset` elements in all browsers.\n\n  legend {\n    box-sizing: border-box; // [1]\n    color: inherit; // [2]\n    display: table; // [1]\n    max-width: 100%; // [1]\n    padding: 0; // [3]\n    white-space: normal; // [1]\n  }\n\n  // Remove the default vertical scrollbar in IE.\n  textarea {\n    overflow: auto;\n  }\n\n  // 1. Add the correct box sizing in IE 10-.\n  // 2. Remove the padding in IE 10-.\n  [type='checkbox'],\n  [type='radio'] {\n    box-sizing: border-box; // [1]\n    padding: 0; // [2]\n  }\n\n  // Correct the cursor style of increment and decrement buttons in Chrome.\n  [type='number']::-webkit-inner-spin-button,\n  [type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n\n  // Correct the odd appearance of search inputs in Chrome and Safari.\n  [type='search'] {\n    -webkit-appearance: textfield;\n  }\n\n  // Remove the inner padding and cancel buttons in Chrome on OS X and\n  // Safari on OS X.\n  [type='search']::-webkit-search-cancel-button,\n  [type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n}\n","// *************************************\n//\n// # jigsass-generic-reset\n// -> A minimal and considered CSS reset\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n//\n////\n/// @group Reset\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-block)) {\n  @error '`jigsass-generic-reset` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it.';\n}\n@if (not function-exists(jigsass-get)) {\n  @error '`jigsass-generic-reset` has a dependency on `jigsass-tools-maps`. ' +\n    'Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n$jigsass-border-box: false !default;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n// For internal framework use. Never use directly.\n%_jigsass-box-sizing-reset-html-el {\n  box-sizing: border-box;\n}\n\n// For internal framework use. Never use directly.\n%_jigsass-box-sizing-reset-universal-el {\n  box-sizing: inherit;\n}\n\n// Reset default padding and margins\n@include jigsass-define-block(reset-box-model) {\n  body,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  dl,\n  dd,\n  ol,\n  ul,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  th,\n  td,\n  figure,\n  hr {\n    margin: 0;\n    padding: 0;\n  }\n}\n\n// Reset default headline font-sizes\n@include jigsass-define-block(reset-headlines) {\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-size: 100%;\n  }\n}\n\n// A better starting point for tables\n@include jigsass-define-block(reset-tables) {\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n}\n/// Sane defaults for form elements\n@include jigsass-define-block(reset-forms) {\n  // Indicate clicability\n  label,\n  input,\n  button,\n  select,\n  option{\n    cursor: pointer;\n  }\n\n  // Indicate editablity\n  textarea:active,\n  textarea:focus,\n  input[type='email'],\n  input[type='email']:active,\n  input[type='password'],\n  input[type='password']:focus,\n  input[type='password']:active,\n  input[type='search'],\n  input[type='search']:focus,\n  input[type='search']:active,\n  input[type='text'],\n  input[type='text']:focus,\n  input[type='text']:active{\n    cursor: text;\n    outline: none;\n  }\n\n  //\n  // 1. Remove buttons' default styling.\n  // 2. Remove letter-spacing normal in some browsers.\n  button,\n  input[type='button'],\n  input[type='reset'],\n  input[type='submit'] {\n    background-color: transparent; // [1]\n    border: 0; // [1]\n    color: inherit; // [1]\n    letter-spacing: inherit; // [2]\n    padding: 0; // [1]\n  }\n}\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n/// Set the HTML elemnt's `box-sizing` to `border-box`\n/// and inherit in all child elements\n///\n/// Sets the global `$jigsass-border-box` variable to true, to let other modules\n/// know that global box-sizing has been set to `border-box`.\n/// ---\n/// @link http://paulirish.com/2012/box-sizing-border-box-ftw\n/// @link http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice\n/// ---\n@mixin jigsass-reset-box-sizing() {\n  $_was-included: if(\n    not global-variable-exists(_jigsass-selectors),\n    false,\n    jigsass-get($_jigsass-selectors, jigsass-reset-box-sizing) or false\n  );\n\n  // Notify other modules that the default `box-sizing` is `border-box`\n  $jigsass-border-box: true !global;\n\n  @if (not $_was-included) {\n    @if (not global-variable-exists(jigsass-silent) or not $jigsass-silent) {\n      html {\n        @extend %_jigsass-box-sizing-reset-html-el;\n      }\n\n      * {\n        @extend %_jigsass-box-sizing-reset-universal-el;\n      }\n\n      *:before {\n        @extend %_jigsass-box-sizing-reset-universal-el;\n      }\n\n      *:after {\n        @extend %_jigsass-box-sizing-reset-universal-el;\n      }\n    }\n\n    // Set class as defined in the `$_jigsass-selectors` map.\n    $_selector-map: (\n      jigsass-reset-box-sizing: if(\n        global-variable-exists(jigsass-silent) and $jigsass-silent,\n        silent,\n        true\n      )\n    );\n\n    @if (not global-variable-exists(_jigsass-selectors)) { $_jigsass-selectors: () !global; }\n    $_jigsass-selectors: jigsass-deep-merge($_jigsass-selectors, $_selector-map) !global;\n  }\n}\n\n/// Remove default margins padding-and borders from elements\n/// ---\n@mixin jigsass-reset-box-model() {\n  @include jigsass-block(reset-box-model);\n}\n\n/// Remove default headline styling\n/// ---\n@mixin jigsass-reset-headlines() {\n  @include jigsass-block(reset-headlines);\n}\n\n/// Better starting point for tables\n/// ---\n@mixin jigsass-reset-tables() {\n  @include jigsass-block(reset-tables);\n}\n\n/// Sane defaults for form elements\n/// ---\n@mixin jigsass-reset-forms() {\n  @include jigsass-block(reset-forms);\n}\n\n/// Include all resets\n/// ---\n@mixin jigsass-reset() {\n  @include jigsass-reset-box-sizing;\n  @include jigsass-block(reset-box-model);\n  @include jigsass-block(reset-headlines);\n  @include jigsass-block(reset-tables);\n  @include jigsass-block(reset-forms);\n}\n","//*************************************\n//\n// # Vertical Rhythm\n//\n////\n/// @group Typography - Vertical Rhythm\n////\n//\n// *************************************\n\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-mq)) {\n  @error '`jigsass-tools-typography/scss/lib/rhythm` has a dependency ' +\n    'on `jigsass-tools-mq`. Please import it before importing this file.';\n}\n\n@if (not function-exists(jigsass-get-rhythm-unit)) {\n  @error '`jigsass-tools-typography/scss/lib/rhythm` has a dependency ' +\n    'on `jigsass-tools-typography/scss/lib/config`. Please import it ' +\n    'before importing this file.';\n}\n\n@if (not function-exists(jigsass-get-body-font-size)) {\n  @error '`jigsass-tools-typography/scss/lib/rhythm` has a dependency ' +\n    'on `jigsass-tools-typography/scss/lib/config`. Please import it ' +\n    'before importing this file.';\n}\n\n@if (not function-exists(jigsass-get-size)) {\n  @error '`jigsass-tools-typography/scss/lib/rhythm` has a dependency ' +\n    'on `jigsass-tools-typography/scss/lib/config`. Please import it ' +\n    'before importing this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Constants\n// -------------------------------------\n\n/// The default font size in most (all?) browsers.\n/// ---\n/// @type Number\n/// ---\n$_jigsass-browser-default-font-size: 16px;\n\n\n\n\n\n// -------------------------------------\n//   Functions\n// -------------------------------------\n\n/// Get the number of Typographic lines\n/// required for a given font-size\n/// ---\n/// @param {Number | String | List} $size\n///   When a `Number`: A font-size.\n///\n///   When a `String`: A named size from the `jigsass-sizes` palette.\n///\n///   When a `List`: First item is the base for multiplication (named size or number),\n///   second item is the multiplier, third, optional, item is the ratio.\n///   If there are only two items in the `name` list, ratio\n///   will resolve to the value of `$jigsass-default-ratio`.\n/// @param {Number | String | List} $rhythm [jigsass-get-rhythm-unit()]\n///   The length of a single typographic line.\n///\n///   When a `Number`: A length.\n///\n///   When a `String`: A named size from the `jigsass-sizes` palette.\n///\n///   When a `List`: First item is the base for multiplication (named size or number),\n///   second item is the multiplier, third, optional, item is the ratio.\n///   If there are only two items in the `name` list, ratio\n///   will resolve to the value of `$jigsass-default-ratio`.\n/// ---\n/// @returns {Number}\n/// ---\n@function jigsass-lines-for-size($size, $rhythm: jigsass-get-rhythm-unit()) {\n  $font-size: jigsass-get-size($size, $unit: px);\n  $rhythm: jigsass-get-size($rhythm, $unit: px);\n  $lines: ceil($font-size / $rhythm);\n\n  // Check if lines are too crampped.\n  $needs-extra-padding: $lines * $rhythm - $font-size < (jigsass-get-min-line-padding() * 2);\n\n  @return if($needs-extra-padding, $lines + 1, $lines);\n}\n\n\n/// Get the length of x typographic lines.\n/// ---\n/// @param {Number} $lines\n///   The number of Typographic lines to get the length of.\n/// @param {Number | String | List} $context [jigsass-get-body-font-size()]\n///   When converting to or from relative units, the absolute length (in px)\n///   which is the basis of conversion (e.g. for $lengths in em units,\n///   would normally be the font-size of the current element).\n/// @param {String} $unit\n///   The unit to convert to.\n/// ---\n/// @return {Number}\n/// ---\n@function jigsass-rhythm(\n  $lines,\n  $context: jigsass-get-body-font-size(),\n  $unit: $jigsass-default-unit\n) {\n  $context: jigsass-get-size($context, $unit: px);\n  $rhythm: jigsass-convert-length($lines * jigsass-get-rhythm-unit(), $unit, $context);\n\n  @return if(unit($rhythm) == px, floor($rhythm), $rhythm);\n}\n\n\n\n\n\n// -------------------------------------\n//   Mixins\n// -------------------------------------\n\n// ----- Establish baseline ----- //\n/// Establish a responsive typographic baseline.\n///\n/// Sets the font-size of the `html` element to a single rhythm unit\n/// in every breakpoint defined in `$jigsass-sizes.rhythm-unit`.\n///\n/// Additionally sets a line-height of `4rem` on the `body` element,\n/// and a font-size in each breakpoint defined in `$jigsass-get-body-font-size`;\n/// ---\n/// @param {Boolean} percentage [true] - Set the html element's font-size in % instead of px\n/// ---\n@mixin jigsass-set-baseline($percentage: true) {\n  @at-root html {\n    $bps: map-get(jigsass-merge-sizes(), rhythm-unit);\n    @each $bp, $value in $bps {\n      @include jigsass-mq($bp) {\n        @if ($percentage) {\n          font-size: jigsass-get-rhythm-unit() / $_jigsass-browser-default-font-size * 100%;\n        }\n        @else {\n          font-size: jigsass-get-rhythm-unit();\n        }\n      }\n    }\n  }\n  @at-root body {\n    $bps: map-get(jigsass-merge-sizes(), body);\n    @each $bp, $value in $bps {\n      @include jigsass-mq($bp) {\n        font-size: jigsass-convert-length(\n          jigsass-get-body-font-size(),\n          em,\n          jigsass-get-rhythm-unit()\n        );\n      }\n    }\n\n    @if ($jigsass-rem-px-fallback) {\n      @if (not global-variable-exists(jigsass-mq-static-breakpoint)) {\n        @error 'Generating pixel fallback to rem values depends on the ' +\n          '`$jigsass-mq-static-breakpoint` variable from `jigsass-tools-mq`. ' +\n          'Please import it before trying to generate pixel fallbacks.';\n      }\n\n      // Cache the active breakpoint.\n      $_was-active-bp: $jigsass-mq-active-breakpoint;\n\n      // Set the active breakpoint to the static one\n      $jigsass-mq-active-breakpoint: $jigsass-mq-static-breakpoint !global;\n\n      line-height: jigsass-convert-length(4rem, px);\n\n      // Restore the active breakpoint.\n      $jigsass-mq-active-breakpoint: $_was-active-bp !global;\n\n    }\n    line-height: 4rem;\n  }\n}\n\n// ----- Set font Size ----- //\n/// Set font-size and line-height properties based on\n/// size and vertical rhythm configurations.\n/// ---\n/// @param {String | Number | List} $size\n///   When a `String`: A named-size from the `$jigsass-sizes` palette.\n///\n///   When a `Number`: A length to be converted into the unit defined in `$unit`.\n///\n///   When a `List`: First item is the base for multiplication,\n///   second item is the multiplier, third, optional, item is the ratio.\n///   If there are only two items in the `name` list, ratio\n///   will resolve to the value of `$jigsass-default-ratio`.\n/// @param {String | List | Boolean} $bps [false]\n///   A list of breakpoints to generate font-size in.\n///   `all` will generate a font-size definition for each rhythm-unit\n///   breakpoint and each breakpoint defined for `$size` in the\n///   `$jigsass-sizes` map.\n/// @param {Number | Boolean} $lines [false]\n///   Override the default number of typographic lines occupied by the element.\n/// @param {Number | Boolean} $context [false]\n///   When converting to or from relative units, the absolute length (in px)\n///   which is the basis of conversion (e.g. for $lengths in em units, would\n///   normally be the font-size of the current element).\n/// @param {String} $unit [$jigsass-default-unit]\n///   The output unit to convert `$size` to.\n/// ---\n@mixin jigsass-font-size(\n  $size,\n  $bps: false,\n  $lines: false,\n  $context: false,\n  $unit: $jigsass-default-unit\n) {\n  @if ($bps and mixin-exists(jigsass-mq)) {\n    @if ($bps == all) {\n      $rhythm-bps: map-get(jigsass-merge-sizes(), rhythm-unit);\n      $size-bps: map-get(jigsass-merge-sizes(), $size) or ();\n\n      $bps: map-keys(map-merge($rhythm-bps, $size-bps));\n    }\n\n    @each $bp in  $bps {\n      @include jigsass-mq($from: $bp) {\n        @include _jigsass-font-size($size, $lines, $context, $unit);\n      }\n    }\n  }\n\n  // Generate in current active breakpoint\n  @else {\n    @if ($bps and not mixin-exists(jigsass-mq)) {\n      @warn 'jigsass-font-size: Can\\'t generate media queries - the `jigsass-mq` mixin does not ' +\n        'exist. Generating output outside a media query';\n    }\n    @include _jigsass-font-size($size, $lines, $context or jigsass-get-body-font-size(), $unit);\n  }\n}\n\n\n// ----- Borders ----- //\n/// Apply a border to an element without\n/// throwing off the vertical rhythm.\n/// ---\n/// @param {String} $side\n/// The side of the element to apply the border to.\n/// Can be one of { all | top | right | bottom | left }\n/// @param {String | Number | List} $width\n///   When a `String`: A named-size from the `$jigsass-sizes` palette.\n///\n///   When a `Number`: A length to be converted into the unit defined in `$unit`.\n///\n///   When a `List`: First item is the base for multiplication,\n///   second item is the multiplier, third, optional, item is the ratio.\n///   If there are only two items in the `name` list, ratio\n///   will resolve to the value of `$jigsass-default-ratio`.\n/// @param {Number} $lines [1]\n///   The number of typographic lines occupied by the border and padding add together.\n/// @param {String | List} $style [solid]\n///   The border style (and, oprionally, color).\n///\n///   Can take a string containing the border style, e.g `dotted` or\n///   a list containing the border style and color, e.g. `solid rebeccapurple`.\n/// ---\n@mixin jigsass-border($side, $width, $lines: 1, $style: solid, $bps: false) {\n  @if ($bps and mixin-exists(jigsass-mq)) {\n    @if ($bps == all) {\n      $_sizes: jigsass-merge-sizes();\n      $bps: map-keys(map-get($_sizes, rhythm-unit));\n    }\n    @each $bp, $spacing in  $bps {\n      @include jigsass-mq($from: $bp) {\n        @include _jigsass-border($side, $width, $lines, $style);\n      }\n    }\n  }\n\n  // Generate in current active breakpoint\n  @else {\n    @if ($bps and not mixin-exists(jigsass-mq)) {\n      @warn 'jigsass-border: Can\\'t generate media queries - the `jigsass-mq` mixin does not ' +\n        'exist. Generating output outside a media query';\n    }\n    @include _jigsass-border($side, $width, $lines, $style);\n  }\n}\n\n\n/// Apply a border-top without messing up the vertical rhythm.\n/// ---\n/// @param {String | Number | List} $width\n///   When a `String`: A named-size from the `$jigsass-sizes` palette.\n///\n///   When a `Number`: A length to be converted into the unit defined in `$unit`.\n///\n///   When a `List`: First item is the base for multiplication,\n///   second item is the multiplier, third, optional, item is the ratio.\n///   If there are only two items in the `name` list, ratio\n///   will resolve to the value of `$jigsass-default-ratio`.\n/// @param {Number} $lines [1]\n///   The number of typographic lines occupied by the border and padding add together.\n/// @param {String | List} $style [solid]\n///   The border style (and, oprionally, color).\n///\n///   Can take a string containing the border style, e.g `dotted` or\n///   a list containing the border style and color, e.g. `solid rebeccapurple`.\n/// ---\n@mixin jigsass-border-top($width, $lines: 1, $style: solid, $bps: false) {\n  @include jigsass-border(top, $width, $lines, $style, $bps);\n}\n\n\n/// Apply a border-bottom without messing up the vertical rhythm.\n/// ---\n/// @param {String | Number | List} $width\n///   When a `String`: A named-size from the `$jigsass-sizes` palette.\n///\n///   When a `Number`: A length to be converted into the unit defined in `$unit`.\n///\n///   When a `List`: First item is the base for multiplication,\n///   second item is the multiplier, third, optional, item is the ratio.\n///   If there are only two items in the `name` list, ratio\n///   will resolve to the value of `$jigsass-default-ratio`.\n/// @param {Number} $lines [1]\n///   The number of typographic lines occupied by the border and padding add together.\n/// @param {String | List} $style [solid]\n///   The border style (and, oprionally, color).\n///\n///   Can take a string containing the border style, e.g `dotted` or\n///   a list containing the border style and color, e.g. `solid rebeccapurple`.\n/// ---\n@mixin jigsass-border-bottom($width, $lines: 1, $style: solid, $bps: false) {\n  @include jigsass-border(bottom, $width, $lines, $style, $bps);\n}\n\n\n/// Apply a border to the top and bottom of an element\n/// without messing up the vertical rhythm.\n/// ---\n/// @param {String | Number | List} $width\n///   When a `String`: A named-size from the `$jigsass-sizes` palette.\n///\n///   When a `Number`: A length to be converted into the unit defined in `$unit`.\n///\n///   When a `List`: First item is the base for multiplication,\n///   second item is the multiplier, third, optional, item is the ratio.\n///   If there are only two items in the `name` list, ratio\n///   will resolve to the value of `$jigsass-default-ratio`.\n/// @param {Number} $lines [1]\n///   The number of typographic lines occupied by the border and padding add together.\n/// @param {String | List} $style [solid]\n///   The border style (and, oprionally, color).\n///\n///   Can take a string containing the border style, e.g `dotted` or\n///   a list containing the border style and color, e.g. `solid rebeccapurple`.\n/// ---\n@mixin jigsass-border-horizontal($width, $lines: 1, $style: solid, $bps: false) {\n  @include jigsass-border(top, $width, $lines, $style, $bps);\n  @include jigsass-border(bottom, $width, $lines, $style, $bps);\n}\n\n\n/// Apply a border to all sides of an element\n/// without messing up the vertical rhythm.\n/// ---\n/// @param {String | Number | List} $width\n///   When a `String`: A named-size from the `$jigsass-sizes` palette.\n///\n///   When a `Number`: A length to be converted into the unit defined in `$unit`.\n///\n///   When a `List`: First item is the base for multiplication,\n///   second item is the multiplier, third, optional, item is the ratio.\n///   If there are only two items in the `name` list, ratio\n///   will resolve to the value of `$jigsass-default-ratio`.\n/// @param {Number} $lines [1]\n///   The number of typographic lines occupied by the border and padding add together.\n/// @param {String | List} $style [solid]\n///   The border style (and, oprionally, color).\n///\n///   Can take a string containing the border style, e.g `dotted` or\n///   a list containing the border style and color, e.g. `solid rebeccapurple`.\n/// ---\n@mixin jigsass-borders($width, $lines: 1, $style: solid, $bps: false) {\n  @include jigsass-border(all, $width, $lines, $style, $bps);\n}\n\n\n// --- Private helper mixins --- //\n/// A private helper for use when setting font-size and line-height\n/// properties based on size and vertical rhythm configurations.\n/// ---\n/// @access private\n/// ---\n@mixin _jigsass-font-size($size, $lines, $context, $unit) {\n  $_rhythm: jigsass-get-rhythm-unit();\n  $size: jigsass-get-size($size, $context, $unit);\n  $height: jigsass-convert-length(\n    (($lines or jigsass-lines-for-size($size)) * $_rhythm),\n    rem\n  );\n\n  // Pixel fallback\n  @if ($jigsass-rem-px-fallback) {\n    @if (unit($size) == rem) {\n      font-size: jigsass-convert-length($size, px);\n    }\n    line-height: jigsass-convert-length($height, px);\n  }\n\n  font-size: $size;\n  line-height: $height;\n}\n\n\n/// A private helper for use when setting borders\n/// that don't mess up the vertical rhythm.\n/// ---\n/// @access private\n/// ---\n@mixin _jigsass-border($side, $width, $lines, $style) {\n  $_prop-suffix: if($side == all, '', '-#{$side}');\n  $_width: jigsass-get-size($width, $unit: rem);\n  $_padding: jigsass-rhythm($lines, $unit: rem) - $_width;\n\n  @if ($jigsass-rem-px-fallback) {\n    border#{$_prop-suffix}: jigsass-convert-length($_width, px) $style;\n    padding#{$_prop-suffix}: jigsass-convert-length($_padding, px);\n  }\n\n  border#{$_prop-suffix}: $_width $style;\n  padding#{$_prop-suffix}: $_padding;\n}\n","// *************************************\n//\n// # jigsass-tools-mq\n// -> Easy peasy media queries.\n//    Heavily based on Kaelig's Sass-Mq,\n//    with a few minor adjustments\n//    for JigSass\n//\n////\n/// @group media queries\n////\n//\n// *************************************\n\n@charset  'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not function-exists(jigsass-set)) {\n  @error '`jigsass-tools-mq` has a dependancy on `jigsass-tools-maps`. Please `@import` it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Config\n// -------------------------------------\n\n/// Named breakpoints\n///\n/// Breakpoint names and values can and should be redefined to fit a\n/// project design and the language used be the team working on it.\n/// However, please keep in mind that **the JigSass framework depends\n/// on a 0-sized length breakpoint called `default` being defined**,\n/// as it is internally used to set up default values in several places.\n///\n/// The `jigsass-mq` mixin will try and resolve values from the `lengths` sub-map\n/// when evaluating the `$from` and `$until` arguments. When evaluating the `$misc`\n/// argument, it will try and resolve values from the `features` sub-map.\n/// ---\n/// @type Map\n/// @prop {map} lengths\n///   A map of `name: width` key-value pairs, defining widths for\n///   commonly used media queries. Used when evaluating the `$from` and `$until` arguments.\n/// @prop {map} features\n///   A map of `name: rule` key-value pairs, defining commonly\n///   used miscellaneous media-query features.\n///   Used when evaluating the `$from` and `$until` arguments.\n$jigsass-breakpoints: (\n  lengths: (\n    default: 0,\n    tiny: 320px,\n    small: 480px,\n    medium: 600px,\n    large: 1024px,\n    x-large: 1280px,\n  ),\n\n  features: (\n    landscape: '(orientation: landscape)',\n    partrait: '(orientation: portrait)',\n    hidpi: '(-webkit-min-device-pixel-ratio: 1.3),\n            (min-resolution: 120dpi),\n            (min-resolution: 1.3dppx)',\n  ),\n) !default;\n\n\n/// Get the name of the zero-sized breakpoint\n/// ---\n/// @param {Map} $breakpoints [$jigsass-breakpoints]\n///   The map of breakpoints to iterate over.\n/// ---\n/// @return {String} - The name of the default breakpoint\n/// ---\n@function jigsass-get-default-breakpoint($breakpoints: $jigsass-breakpoints) {\n  $default-bp: null;\n\n  @each $bp-name, $bp in map-get($breakpoints, lengths) {\n    @if (($bp / ($bp * 0 + 1)) == 0 and not $default-bp) {\n      $default-bp: $bp-name;\n    }\n  }\n\n  @return $default-bp;\n}\n\n// For deprecation\n@function _get-default-breakpoint($breakpoints: $jigsass-breakpoints) {\n  @warn 'DEPRECATION WARNING: The `_get-default-breakpoint` function will be depracated in the ' +\n    'next major release of `jigsass-tools-mq`. Use `jigsass-get-default-breakpoint` instead.';\n\n  @return jigsass-get-default-breakpoint($breakpoints);\n}\n\n\n/// The name of the currently active min-width breakpoint\n/// ---\n/// @type String\n$jigsass-mq-active-breakpoint: jigsass-get-default-breakpoint();\n\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n/// ---\n/// @example scss\n///  // old-ie.scss\n///  $jigsass-mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be\n///                  // rasterized up to $jigsass-mq-static-breakpoint\n///                  // larger breakpoints will be ignored\n/// ---\n/// @type Boolean\n/// @link https://github.com/TxHawks/jigsass-tools-mq#responsive-mode-off\n///   - Disabled responsive mode documentation\n$jigsass-mq-responsive: true !default;\n\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $jigsass-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $jigsass-mq-responsive is set to 'false') in an old-ie.scss\n/// ---\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above `tablet` breakpoint,\n///  // and fix the styles (e.g. layout) at `tablet` width\n///  $jigsass-mq-responsive: false;\n///  $jigsass-mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n/// ---\n/// @type String\n$jigsass-mq-static-breakpoint: large !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$jigsass-mq-show-breakpoints: () !default;\n\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default jigsass-mq does not restrict the media type (`@media …`)\n/// ---\n/// @type String\n/// @link https://github.com/TxHawks/tools-jigsass-mq#changing-media-type\n///   Full documentation and examples\n$jigsass-mq-media-type: all !default;\n\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n/// Get a breakpoint's width\n/// ---\n/// @access private\n/// ---\n/// @param {string} $name\n///   Breakpoint to get the width of\n/// @param {map} $breakpoints [$jigsass-breakpoints]\n///   The map to search for the breakpoint in.\n/// ---\n/// @example scss\n///   $tablet-width: jigsass-mq-get-breakpoint-width(tablet);\n///   @media (min-width: jigsass-mq-get-breakpoint-width(desktop)) {}\n/// ---\n/// @returns {Number} Value in pixels\n@function jigsass-mq-get-breakpoint-width($name, $breakpoints: $jigsass-breakpoints) {\n  @if jigsass-deep-has-key($breakpoints, lengths, $name) {\n    @return jigsass-get($breakpoints, lengths, $name);\n  }\n  @else {\n    @warn 'jigsass-mq-get-breakpoint-width: Breakpoint #{$name} wasn\\'t found in $breakpoints.';\n    @return $name;\n  }\n}\n\n\n/// Sort length breakpoints by size from small to large.\n/// ---\n/// @param {Map} $bps [$jigsass-breakpoints.lengths]\n///   The breakpoints to sort\n/// ---\n/// @return {Map}\n///   The sorted breakpoints\n/// ---\n@function jigsass-mq-sort-length-breakpoints($bps: map-get($jigsass-breakpoints, lengths)) {\n  $bp-names: map-keys($bps);\n  $bp-values: map-values($bps);\n  $temp-bp-values: $bp-values;  // Used for sorting\n  $sorted-bp-values: ();\n\n  @each $bp-name, $bp-value in $bps {\n    @if (type-of($bp-value) != number) {\n      @error 'jigsass-mq-sort-length-breakpoints: Length breakpoints must resolve to numbers, ' +\n        'but `#{$bp-name}` is `#{inspect($bp-value)}`, which is a `#{type-of($bp-value)}`';\n    }\n  }\n\n  // Sort breakpoint widths from small to large\n  @while length($temp-bp-values) > 0 {\n    $smallest: nth($temp-bp-values, 1);\n\n    @each $bp-value in $temp-bp-values {\n      $smallest: if($bp-value < $smallest, $bp-value, $smallest);\n    }\n\n    // Append smallest value to sorted list\n    $sorted-bp-values: append($sorted-bp-values, $smallest);\n\n    // Remove smallest value from list and continue iterating.\n    $values: ();\n    @each $i in $temp-bp-values {\n      @if ($i != $smallest) {\n        $values: append($values, $i);\n      }\n    }\n    $temp-bp-values: $values;\n  }\n\n  $breakpoints: ();\n  @each $bp-value in $sorted-bp-values {\n    $original-position: index($bp-values, $bp-value);\n\n    $breakpoints: map-merge(\n      $breakpoints,\n      (nth($bp-names, $original-position) : $bp-value)\n    );\n  }\n\n  @return $breakpoints;\n}\n\n\n/// Check if a breakpoint is defined as a named breakpoint\n/// ---\n/// @param {String} $breakpoint\n///   The breakpoint name to check for.\n/// @param {Map} $breakpoints [$jigsass-breakpoints]\n///   The map to check for `$breakpoint` in.\n/// ---\n/// @return {Boolean} Is the breakpoint defined.\n/// ---\n@function jigsass-mq-breakpoint-defined($breakpoint, $breakpoints: $jigsass-breakpoints) {\n  @return jigsass-deep-has-key($breakpoints, lengths, $breakpoint) or\n    jigsass-deep-has-key($breakpoints, features, $breakpoint);\n}\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n/// Generate media queries\n/// ---\n/// @param {String | Number | Boolean} $from [false]\n///   Min-width (inclusive) in pixels, or one of `$jigsass-breakpoints.lengths`\n/// @param {String | number | Boolean} $until [false]\n///   Max-width (exclusive) in pixels, or one of `$jigsass-breakpoints.lengths`\n/// @param {String | List | Boolean} $misc [false]\n///   Miscellaneous media query parameters. One of `$jigsass-breakpoints.features`\n///   or a free-form string. Can also be a list of multiple media-query features.\n/// @param {String} $media-type [$jigsass-mq-media-type]\n///   Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {String} $static-breakpoint [$jigsass-mq-static-breakpoint]\n///   A custom static breakpoint, scoped for the current run of the mixin.\n/// ---\n/// @content styling rules, wrapped into a @media query when responsive mode in turned on.\n/// ---\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $misc: landscape hidpi) {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    @include mq(x-large:, $static-breakpoint: x-large) {\n///      color: hotpink;\n///    }\n///  }\n/// ---\n@mixin jigsass-mq(\n  $from: false,\n  $until: false,\n  $misc: false,\n  $media-type: $jigsass-mq-media-type,\n  $static-breakpoint: $jigsass-mq-static-breakpoint\n) {\n  $min-width: 0;\n  $max-width: 0;\n  $misc-features: false;\n  $media-query: '';\n  $breakpoints: $jigsass-breakpoints;\n  $responsive: $jigsass-mq-responsive;\n\n  // Save the default breakpoint\n  $_default-bp: $jigsass-mq-active-breakpoint;\n  $_active-bp: $_default-bp;\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if type-of($from) == number {\n      $min-width: _jigsass-mq-px2em($from);\n    }\n    @else {\n      @if type-of(jigsass-mq-get-breakpoint-width($from, $breakpoints)) == 'string' {\n        @error 'jigsass-mq: #{$from} is not a length breakpoint in `$jigsass-breakpoints`.';\n      }\n      // Set the active min-width breakpoint\n      $_active-bp: $from;\n      $min-width: _jigsass-mq-px2em(jigsass-mq-get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if type-of($until) == number {\n      $max-width: _jigsass-mq-px2em($until);\n    }\n    @else {\n      @if type-of(jigsass-mq-get-breakpoint-width($until, $breakpoints)) == 'string' {\n        @error 'jigsass-mq: #{$until} is not a length breakpoint in `$jigsass-breakpoints`.';\n      }\n\n      $_max-value: jigsass-mq-get-breakpoint-width($until, $breakpoints);\n      $max-width: _jigsass-mq-px2em($_max-value) - if($_max-value == 0, 0, .01em);\n    }\n  }\n\n  // Misc: non-widths features\n  @if $misc {\n    $misc-features: '';\n\n    @each $feature in $misc {\n      @if (jigsass-deep-has-key($jigsass-breakpoints, features, $feature)) {\n        $feature: jigsass-get($jigsass-breakpoints, features, $feature);\n      }\n\n      @if (type-of($feature) == string) {\n        $feature: if(str-slice($feature, 1, 1) == '(', $feature, '(' + $feature);\n        $feature: if(str-slice($feature, -1) == ')', $feature, $feature + ')');\n\n        $misc-features: '#{$misc-features} and #{$feature}';\n      }\n      @else {\n        @warn 'jigsass-mq: `#{inspect($misc)}` will be ignored, since it is a ' +\n          '#{type-of($misc)}, not a string.';\n      }\n    }\n\n    // Remove unnecessary ' and ' at beginning of `$misc-features`\n    $misc-features: str-slice(unquote($misc-features), 6);\n  }\n\n  // Responsive support is disabled, rasterize the output outside @media blocks\n  // The browser will rely on the cascade itself.\n  @if $responsive == false {\n    $static-breakpoint-width: jigsass-mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n    $target-width: _jigsass-mq-px2em($static-breakpoint-width);\n\n    // Output only rules that start at or span our target width\n    @if (\n      $misc == false and\n      $min-width <= $target-width and\n      ($until == false or $max-width >= $target-width)\n    ) {\n      @content;\n    }\n  }\n\n  // Responsive support is enabled, output rules inside @media queries\n  @else {\n    @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n    @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n    @if $misc-features  { $media-query: '#{$media-query} and #{$misc-features}'; }\n\n    // Remove unnecessary media query prefix 'all and '\n    @if ($media-type == 'all' and $media-query != '') {\n      $media-type: '';\n      $media-query: str-slice(unquote($media-query), 6);\n    }\n\n    // Don't create meaningless media-queries\n    @if ($media-query != '' or ($media-type != '' and $media-type != all)) {\n      // Set the active min-width breakpoint\n      $jigsass-mq-active-breakpoint: $_active-bp !global;\n\n      @media #{$media-type + $media-query} { @content; }\n\n      // Restore the default breakpoint as the default one.\n      $jigsass-mq-active-breakpoint: $_default-bp !global;\n    }\n    @else { @content; }\n  }\n}\n\n/// Tweak the list of defined breakpoints within the scope of the mixin's `@content`\n/// ---\n/// @param {Map} $tweakpoints [()]\n///   A map of named breakpoints to add to (or be used to overwrite)\n///   the existing breakpoints in $jigsass-breakpoints.\n/// @param {Map} $length-tweakpoints [()]\n///   A map of named lengths to add to (or be used to overwrite)\n///   the existing length-breakpoints.\n/// @param {Map} $length-tweakpoints [()]\n///   A map of named miscellaneous media-query features to add to\n///   (or be used to overwrite) the existing feature-breakpoints.\n/// @param {Boolean} $overwrite [false]\n///   Determines whether the tweakpoints should overwrite the\n///   existing breakpoints, or be merged into them.\n/// ---\n/// @example scss - Add a custom length breakpoint\n///   @include jigsass-tweakpoints(('masthead-collapse': 550px)) {\n///     @include jigsass-mq(masthead-collapse) {\n///       .masthead {\n///         // ...\n///       }\n///     }\n///   }\n///\n/// @example scss - Add a custom feature breakpoint\n///   @include jigsass-tweakpoints($feature-tweakpoints: ('8bit': ('min-color': 8))) {\n///     @include jigsass-mq($misc: 8bit) {\n///       .page--has-color {\n///         // ...\n///       }\n///     }\n///   }\n///\n/// @example scss - Temporarily overwrite existing length breakpoints\n///   $masthead-bps: (small: 350px, medium: 500px, large: 800px);\n///\n///   @include jigsass-tweakpoints($masthead-bps, $overwrite: false) {\n///     $lengths: map-get($jigsass-breakpoints, lengths);\n///     @each $length in $lengths {\n///       @include jigsass-mq($length) {\n///         // ...\n///       }\n///     }\n///   }\n/// ---\n@mixin jigsass-mq-tweakpoints(\n  $tweakpoints: (),\n  $length-tweakpoints: (),\n  $feature-tweakpoints: (),\n  $overwrite: false\n) {\n  // Save original state of breakpoints configuration.\n  $_original-breakpoints: $jigsass-breakpoints;\n\n  @if ($overwrite) {\n    @if (length($tweakpoints) != 0) {\n      $jigsass-breakpoints: $tweakpoints !global;\n    }\n    // Overwrite breakpoints configuration\n    @if (length($length-tweakpoints) != 0) {\n      $jigsass-breakpoints: jigsass-set(\n        $jigsass-breakpoints,\n        lengths,\n        $length-tweakpoints\n      ) !global;\n    }\n    @if (length($feature-tweakpoints) != 0) {\n      $jigsass-breakpoints: jigsass-set(\n        $jigsass-breakpoints,\n        features,\n        $feature-tweakpoints\n      ) !global;\n    }\n  }\n  @else {\n    // Extend breakpoints configuration\n    $new-breakpoints: if(length($tweakpoints) != 0, $tweakpoints, ());\n\n    @if (length($length-tweakpoints) != 0) {\n      $new-breakpoints: jigsass-deep-merge($new-breakpoints, (lengths: $length-tweakpoints));\n    }\n    @if (length($feature-tweakpoints) != 0) {\n      $new-breakpoints: jigsass-deep-merge($new-breakpoints, (features: $feature-tweakpoints));\n    }\n\n    $jigsass-breakpoints: jigsass-deep-merge($jigsass-breakpoints, $new-breakpoints) !global;\n  }\n\n  @content;\n\n  // Restore original state of breakpoints configuration.\n  $jigsass-breakpoints: $_original-breakpoints !global;\n}\n\n\n/// Export a JSON-like representation of defined breakpoints,\n/// and indicate if given breakpoint is active at given viewport\n/// conditions.\n///\n/// The exported JSON will have to following keys:\n///   - **values:** an object with `<name>: <length>` pairs for\n///     each defined length breakpoint.\n///   - **from:** an object with a key for each defined breakpoint, containing\n///     a nested object with `from: <value>` and `active: <boolean>` keys.\n///   - **until:** an object with a key for each defined breakpoint, containing\n///     a nested object with `until: <value>` and `active: <boolean>` keys.\n///   - **from-until:** an object with a key for each defined breakpoint, containing\n///     a nested object with `from: <value>`, `until: <value>` and `active: <boolean>` keys.\n///\n/// The mixin produces pretty heavy CSS (8.4k in default settings), but one\n/// that gets gzipped very well (8.4k -> 452b).\n/// ---\n/// @param {String} $element [body]\n///   The element to attach JSON data to.\n///\n///   The JSON string will be attached to the `content` property of the\n///   `::after` psudo-element of the specified element.\n/// ---\n@mixin jigsass-mq-export-length-bps($element: body) {\n  $_bps: jigsass-mq-sort-length-breakpoints();\n\n  @each $name, $value in $_bps {\n    @include jigsass-mq($name) {\n      #{$element}:after {\n        content: _jigsass-mq-bps-to-json($name);\n        display: none;\n      }\n    }\n  }\n}\n\n\n\n\n\n// -------------------------------------\n// Private helpers\n// -------------------------------------\n\n/// Convert Pixel values to ems\n/// based on the browser's default\n/// font-size.\n/// ---\n/// @access private\n/// ---\n/// @param {Number} $px\n///   value to convert\n/// @param {boolean} $supress-warnings [false]\n///   Suppress warnings about converting unitless numbers into pixels.\n/// ---\n/// @returns {Number} - The converted number in ems\n@function _jigsass-mq-px2em($px, $supress-warnings: false) {\n  $_browser-default-font-size: 16px;\n\n  // Ensure `$px` is a number\n  @if (type-of($px) != 'number') {\n    @error '_jigsass-mq-px2em: Only numbers can be converted in into ems. ' +\n      '#{$px} is a #{type-of($px)}.';\n  }\n\n  // Return a unitless number if `$px` is 0\n  @if ($px / ($px * 0 + 1) == 0) {\n    @return 0;\n  }\n\n  // Convert unitless number to pixels\n  @if (unitless($px)) {\n    @if (not $supress-warnings) {\n      @warn '_jigsass-mq-px2em: Assuming #{$px} is in pixels';\n    }\n\n    @return _jigsass-mq-px2em($px * 1px);\n  }\n\n  // Return em values as is.\n  @if (unit($px) == em) {\n    @return $px;\n  }\n\n  // Error out on all other non-pixel units.\n  @if (unit($px) != px) {\n    @error '_jigsass-mq-px2em: Only px values can be safely converted into ems.';\n  }\n\n  $_result: ($px / $_browser-default-font-size) * 1em;\n\n  // stylelint-disable\n  @return if($_result == 0em, 0, $_result);\n  // stylelint-enable\n}\n\n\n/// A helper function which generates a JSON-like\n/// string with information about length breakpoint\n/// values and which breakpoints are currently active.\n///\n/// ---\n/// @param {String} $active-bp\n///   The name of the length breakpoint to evaluate active breakpoints for.\n/// ---\n/// @return {String} - A JSON-like string\n/// ---\n@function _jigsass-mq-bps-to-json($active-bp) {\n  $_values: ();\n  $_from: ();\n  $_until: ();\n  $_from-until: ();\n\n  $_bps: jigsass-mq-sort-length-breakpoints();\n  $_active-value: map-get($_bps, $active-bp);\n\n  @each $name, $value in $_bps {\n    $_values: append($_values, '\"' + $name + '\": \"' + $value + '\"', comma);\n    $_from: append(\n      $_from,\n      '\"#{$name}\": {\"from\": \"#{$value}\", \"active\": #{$_active-value >= $value}}',\n      comma\n    );\n    $_until: append(\n      $_until,\n      '\"#{$name}\": {\"until\": \"#{$value}\", \"active\": #{$_active-value < $value}}',\n      comma\n    );\n\n    @each $max-name, $max-value in $_bps {\n      @if ($max-value != 0) {\n        $min-value: $value;\n        $min-name: $name;\n\n        @if ($max-value > $min-value) {\n          // stylelint-disable max-line-length\n          $_from-until: append(\n            $_from-until,\n            '\"#{$min-name}-until-#{$max-name}\": {\"from\": \"#{$min-value}\", \"until\": \"#{$max-value}\", \"active\": #{$_active-value >= $min-value and $_active-value < $max-value}}',\n            comma\n          );\n          // stylelint-enable max-line-length\n        }\n      }\n    }\n  }\n\n  $_values: '{\"values\": {' + $_values + '}';\n  $_from: '\"from\": {#{$_from}}';\n  $_until: '\"until\": {#{$_until}}';\n  $_from-until: '\"from-until\": {#{$_from-until}}}';\n\n  @return '#{$_values}, #{$_from}, #{$_until}, #{$_from-until}';\n}\n","//*************************************\n//\n// #Units\n// -> Unit conversion utils\n//\n////\n/// @group Typography - unit conversion\n////\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// The font-size of the html element.\n/// _**Only re define this to fit your design if using\n/// `_units.scss` as a standalone module.** Otherwise,\n/// define the default size of the html element in\n/// the `rhythm-unit` key of the `$jigsass-sizes` map._\n/// ---\n/// @type Number\n/// ---\n$jigsass-units-root-font-size: 16px !default;\n\n\n\n\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n/// Convert any CSS `length` or `percentage` value to any another.\n///\n/// Based on [accoutrement-scale/units](https://github.com/oddbird/accoutrement-scale)\n/// ---\n/// @param {number} $length\n///   The `length` or `percentage` to convert\n/// ---\n/// @param {string} $to-unit [$jigsass-default-unit]\n///   String matching a css unit keyword, e.g. `em`, `%`, etc.\n/// ---\n/// @param {number} $from-context [jigsass-get-body-font-size()]\n///   When converting from relative units, the absolute length (in px) to\n///   which $length refers (e.g. for $lengths in em units, would normally be the\n///   font-size of the current element).\n/// ---\n/// @param {number} $to-context\n///   For converting to relative units, the absolute length in px to which the\n///   output value will refer. Defaults to the same as `$from-context`, since it is\n///   rarely needed.\n/// ---\n/// @return {number}\n/// ---\n@function jigsass-convert-length(\n  $length,\n  $to-unit: if(global-variable-exists(jigsass-default-unit), $jigsass-default-unit, em),\n  $from-context: if(\n    function-exists(jigsass-get-body-font-size),\n    jigsass-get-body-font-size(),\n    $jigsass-units-root-font-size\n  ),\n  $to-context: $from-context\n) {\n  $_convertable: ('in', 'mm', 'cm', 'pt', 'pc', 'px', 'em', 'rem', '%', 'ex');\n  $from-unit: unit($length);\n  $root-size: null;\n\n  // Do nothing when `from` and `to` units are the same.\n  @if ($from-unit == $to-unit) { @return $length; }\n\n  // Warn and escape when units are not convertible\n  @each $unit in ($from-unit, $to-unit) {\n    @if not index($_convertable, $unit) {\n      @warn '#{$unit} units can’t be reliably converted; Returning original value.';\n\n      @return $length;\n    }\n  }\n\n  // Optimize comparable (non-relative) units\n  $absolute-output: _jigsass-type-get-number($to-unit);\n\n  @if $absolute-output and comparable($length, $absolute-output)  {\n    @return $absolute-output + $length;\n  }\n\n  // Establish relative context\n  @if (\n    function-exists(jigsass-get-rhythm-unit) and\n    global-variable-exists(jigsass-mq-active-breakpoint)\n  ) {\n    $root-size: jigsass-get-rhythm-unit();\n  }\n  @else {\n    $root-size: $jigsass-units-root-font-size;\n  }\n\n  @if (not $from-context) {\n    $from-context: if(\n      function-exists(jigsass-get-body-font-size),\n      jigsass-get-body-font-size(),\n      $jigsass-units-root-font-size\n    );\n    $to-context: $to-context or $from-context;\n  }\n  $from-context: _jigsass-type-get-px($from-context);\n  $to-context: _jigsass-type-get-px($to-context);\n\n  // Context values must be in px\n  @if (not $from-context) or (not $to-context) {\n    @error 'jigsass-convert-length: Context paremeters must resolve to a value in pixel units.';\n  }\n\n  // Convert relative length to pixels\n  $px-length: _jigsass-type-get-px($length) or $length;\n  $from-unit: unit($px-length);\n\n  // Convert relative units using the from-context parameter.\n  @if $from-unit == 'em' { $px-length: $length * $from-context / 1em; }\n  @else if $from-unit == 'rem' { $px-length: $length * $root-size / 1rem; }\n  @else if $from-unit == '%' { $px-length: $length * $from-context / 100%; }\n  @else if $from-unit == 'ex'  { $px-length: $length * $from-context / 2ex; }\n\n  // Convert length in pixels to the output unit\n  @if $absolute-output { @return $absolute-output + $px-length; }\n  @else if $to-unit == 'em' { @return $px-length * 1em / $to-context; }\n  @else if $to-unit == 'rem' { @return $px-length * 1rem / $root-size; }\n  @else if $to-unit == '%' { @return $px-length * 100% / $to-context; }\n  @else if $to-unit == 'ex' { @return $px-length * 2ex / $to-context; }\n\n  @error 'Failed to convert #{$length} into #{$to-units}.';\n}\n\n/// Convert a length to a unitless number\n/// ---\n/// @param {Number} $num - The number to strip the unit from\n/// ---\n/// @return {Number}\n/// ---\n/// @access private\n/// ---\n@function jigsass-strip-unit($num) {\n  @if (type-of($num) != number) {\n    @error 'jigsass-strip-unit: `#{$num}` is a #{type-of($num)}, not a number.';\n  }\n\n  @if (not unitless($num)) {\n    $num: $num / ($num * 0 + 1);\n  }\n\n  @return $num;\n}\n\n\n\n// ----- Private util functions ----- //\n\n/// Converted a value to px ig possible.\n/// ---\n/// @access private\n/// ---\n/// @param {Number} $length -\n///   The number to be converted to px if comparable.\n/// ---\n/// @return {Number | false} -\n///   Either the `px` value of the converted `$length` or `false`.\n/// ---\n@function _jigsass-type-get-px($length) {\n  // stylelint-disable\n  @return if(comparable($length, 1px), 0px + $length, false);\n  // stylelint-enable\n}\n\n\n/// Get a `0` value for any absolute unit.\n/// ---\n/// @access private\n/// ---\n/// @param {String} $unit -\n///   The unit to return as a number.\n/// ---\n/// @return {Number | false} -\n///   Either the `0` value of a unit or `false`.\n/// ---\n@function _jigsass-type-get-number($unit) {\n  // stylelint-disable\n  $_absolute: (\n    'in': 0in,\n    'mm': 0mm,\n    'cm': 0cm,\n    'pt': 0pt,\n    'pc': 0pc,\n    'px': 0px,\n  );\n  // stylelint-enable\n\n  @return map-get($_absolute, $unit) or false;\n}\n\n\n\n/// Get the px/rem versions of a value.\n/// ---\n/// @param {Number} $value - The value to convert\n/// ---\n/// @return {Map} A map of px corresponding rem values\n/// ---\n/// @access private\n/// ---\n@function _jigsass-rem-fallback-values($value) {\n  $_return: (\n    px: $value,\n    rem: $value,\n  );\n\n  @if type-of($value) == number and not unitless($value) {\n    @if unit($value) == rem {\n      // Since support for `rem` units and for media-queries is identical (ie > 8),\n      // when converting FROM rem, output pixel fallback at values converted to fit\n      // the settings of the static breakpoint (defined in `$jigsass-mq-static-breakpoint`)\n\n      // Cache the active breakpoint.\n      $_was-active-bp: $jigsass-mq-active-breakpoint;\n\n      // Set the active breakpoint to the static one\n      $jigsass-mq-active-breakpoint: $jigsass-mq-static-breakpoint !global;\n\n      $_return: map-merge($_return, (px: round(jigsass-convert-length($value, px))));\n\n      // Restore the active breakpoint.\n      $jigsass-mq-active-breakpoint: $_was-active-bp !global;\n    }\n    @else if unit($value) == px {\n      $_return: map-merge($_return, (\n        px: round($value),\n        rem: jigsass-convert-length($value, rem),\n      ));\n    }\n  }\n\n  @return $_return;\n}\n\n/// Get the px/rem versions of a list (or nested lists).\n/// ---\n/// @access private\n/// ---\n@function _jigsass-list-convert-rems($value) {\n  $_empty: (\n    px: (),\n    rem: (),\n  );\n  $_return: $_empty;\n  $_sep: null;\n\n  @if type-of($value) == list {\n    $_sep: list-separator($value);\n    @each $sub in $value {\n      $_this: _jigsass-list-convert-rems($sub);\n      $_return: (\n        px: append(map-get($_return, px), map-get($_this, px), $_sep),\n        rem: append(map-get($_return, rem), map-get($_this, rem), $_sep),\n      );\n    }\n  }\n  @else {\n    $_this: _jigsass-rem-fallback-values($value);\n    $_return: map-merge($_return, $_this);\n  }\n\n  @return $_return;\n}\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n/// Convert the values of a given property from\n/// px to rem at specified breakpoints.\n///\n/// Optionally include fallback in pixel values.\n/// -----\n/// @param {stirng} $property\n///   The css property name.\n/// @param {number | list | string} $values\n///   The value or list of values for the property.\n/// @param {String | List | Boolean} $bps (false)\n///    list of breakpoints to output the converted values in.\n///   `all` iterates over the breakpoints defined in\n///   the `rhythm-unit` key of the sizes palette.\n/// @param {Boolean} $px-fallback [$jigsass-rem-px-fallback]\n///   Determines if pixel fallback will be generated\n/// -----\n@mixin jigsass-rem(\n  $property,\n  $values,\n  $bps: false,\n  $px-fallback: $jigsass-rem-px-fallback\n) {\n  // iterate over the breakpoints defined in the `rhythm` key of the sizes palette.\n  @if ($bps and mixin-exists(jigsass-mq)) {\n    @if ($bps == all) {\n      $_sizes: jigsass-merge-sizes();\n      $bps: map-keys(map-get($_sizes, rhythm-unit));\n    }\n    @each $bp, $spacing-unit in  $bps {\n      @include jigsass-mq($from: $bp) {\n        @include _jigsass-px2rem($property, $values, $px-fallback);\n      }\n    }\n  }\n\n  // Generate in current active breakpoint\n  @else {\n    @if ($bps and not mixin-exists(jigsass-mq)) {\n      @warn 'jigsass-rem: Can\\'t generate media queries - the `jigsass-mq` mixin does not exist.' +\n        ' Generating output outside a media query';\n    }\n    @include _jigsass-px2rem($property, $values, $px-fallback);\n  }\n}\n\n\n/// Private helper function to convert the values\n/// of a given property from px to rem.\n/// Optionally include fallback in pixel values\n/// ---\n/// @param {String} $property\n///   The css property name.\n/// @param {Number | List | String} $values\n///   The value or list of values for the property.\n/// @param {Boolean} $px-fallback\n///   Determines if pixel fallback will be generated\n/// ---\n/// @access private\n/// ---\n@mixin _jigsass-px2rem($property, $values, $px-fallback) {\n  // Convert values.\n  $values: _jigsass-list-convert-rems($values);\n  $px-values: map-get($values, px);\n  $values: map-get($values, rem);\n\n  // Generate pixel fallback for browsers that don't understand rem units.\n  @if $px-fallback and $px-values != $values {\n    #{$property}: $px-values;\n  }\n\n  // Use rem values for everyone else (overrides pixel values).\n  #{$property}: $values;\n}\n","// *************************************\n//\n// #BASE.PAGE\n// -> Basic page styling\n//\n// *************************************\n\n// Only output styles once and if not in silent mode\n@include jigsass-component(base-page) {\n  // 1. Set the default color.\n  // 2. Ensure the page fills at least the full\n  //    height of the viewport.\n  // 3. Force vertical scrollbar, for a consistent\n  //    UX between pages that are long enough to\n  //    scroll, and ones that aren't.\n  //    *** BREAKS `position: sticky` ***\n  //\n  // 4. Better font rendering on OSX\n  html {\n    color: jigsass-color(text);\n    fill: jigsass-color(text);\n    min-height: 100%; // [2]\n    // overflow-y: scroll; // [3]\n    // stylelint-disable declaration-block-properties-order\n    -moz-osx-font-smoothing: grayscale; // [4]\n    -webkit-font-smoothing: antialiased;  // [4]\n    // stylelint-enable declaration-block-properties-order\n  }\n\n  body {\n    overflow-x: hidden;\n  }\n\n\n  // Export media-query info as a JSON-like\n  // string in the `content` property of `body::after`\n  @include jigsass-mq-export-length-bps;\n}\n","// *************************************\n//\n// #COLOR-SETTINGS\n// -> Color related settings\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// Color palette definitions.\n// ---\n// @prop {List} color\n// @prop {Color | String} color.value\n//   Can be either an explicit color value or a string\n//   referencing another color defined in the palette.\n// @prop {List} color.adjustments\n//   A list of color functions to apply. Each item can\n//   either be a map with `function-name: args` pairs,\n//   or a string for color functions that do not take\n//   adjustment arguments (e.g., compliment).\n//\n//   Adjustment functions will be executed in the\n//   order they are defined, in the following format:\n//   `function-name(color.value, args...)`.\n//\n//   When a adjustment argument is a unitless number,\n//   It will resolve to the corresponding step in\n//   `$jigsass-adjustment-steps`.\n// ---\n// @see {vriable} $jigsass-adjustment-steps\n// ---\n// @type Map\n// ---\n$jigsass-colors: (\n  // Brand colors\n  'black': #000,\n  'white': #fff,\n  'neutral': #2d2d2d,\n  'current-color': currentColor,\n\n  'primary': #00829e,\n  'secondary': #ed143d,\n  'tertiary': #f9b41a,\n  'quaternary': #00a064,\n  'quinary': #0cc,\n\n\n  // Use cases\n  'text': 'neutral',\n  'text-inverse': 'white',\n  'text-pale': 'neutral' (jigsass-tint: 6),\n  'text-muted': 'neutral' (jigsass-tint: 13),\n  'text-promoted': 'tertiary' (jigsass-shade: 8, saturate: 10),\n\n  'border-neutral': 'neutral' (jigsass-tint: 15),\n  'border-neutral-b': 'neutral' (jigsass-tint: 12),\n  'border-accented': 'primary' (jigsass-tint: 15),\n  'border-inverse': 'white',\n  'link': 'primary',\n  'sales':  #e63d00,\n\n  'bg': 'white',\n  'bg-accented': 'primary' (jigsass-tint: 15),\n  'bg-dialog-overlay': rgba(#2d2d2d, .95),\n  'bg-form': 'primary' (jigsass-tint: 17),\n  'bg-neutral': 'neutral' (jigsass-tint: 19),\n  'bg-neutral-b': 'neutral' (jigsass-tint: 15),\n  'bg-neutral-c': 'primary' (jigsass-tint: 17) (desaturate: 7),\n  'bg-neutral-dark': neutral,\n  'has-card': 'primary' (jigsass-tint: 17) (desaturate: 7),\n  'card-bg': 'white',\n\n  'event': 'secondary',\n  'venue': 'tertiary',\n  'article': 'quaternary',\n\n  'bezeq': #2b2e8f,\n  'bezeq-pale': #c1d8f2,\n\n  // States\n  'disabled': 'neutral' (jigsass-tint: 15),\n  'negative': 'secondary',\n  'positive':   'quaternary',\n  'warning': 'tertiary',\n\n  // Social\n  'facebook': #3b5998,\n  'twitter': #55acee,\n  'gplus': #d34836,\n  'whatsapp': #25d366,\n);\n\n// Predefined adjustment steps for color functions\n// in the format of 'function-name: steps'.\n//\n// If the map has a `default` key, if will be used as the default\n// for color functions which don't have explicitly defined steps\n//\n// A key associated a `Number` value, for incremental steps,\n// or with a list of numbers for explicitly defining steps\n// (see example).\n// ---\n// @prop {Percentage | List} default [5%]\n//   The default steps used for color functions with no\n//   explicitly defined steps.\n// ---\n$jigsass-adjustment-steps: (\n  default: 5%,\n);\n\n\n\n\n\n// -------------------------------------\n// Styleguide\n// -------------------------------------\n\n@mixin sg-color-swatches($colors: $jigsass-colors) {\n  $brand-swatches: '';\n  $use-case-swatches: '';\n  $state-swatches: '';\n  $social-swatches: '';\n\n  $brand-colors: (\n    'black',\n    'white',\n    'neutral',\n    'primary',\n    'secondary',\n    'tertiary',\n    'quaternary',\n    'quinary',\n  );\n\n  $state-colors: (\n    'disabled',\n    'negative',\n    'positive',\n    'warning',\n  );\n\n  $social-colors: (\n    'facebook',\n    'twitter',\n    'gplus',\n    'whatsapp'\n  );\n\n  // Brand colors\n  @each $color in $brand-colors {\n    $brand-swatches: $brand-swatches + '@color: #{jigsass-color($color)} @name: #{$color}\n';\n  }\n\n  // States\n  @each $color in $state-colors {\n    $state-swatches: $state-swatches + '@color: #{jigsass-color($color)} @name: #{$color}\n';\n  }\n\n  // Social\n  @each $color in $social-colors {\n    $social-swatches: $social-swatches + '@color: #{jigsass-color($color)} @name: #{$color}\n';\n  }\n\n  // Use cases\n  $_all: join($brand-colors, $state-colors, comma);\n  $_all: join($_all, $social-colors, comma);\n  @each $name, $value in $colors {\n    @if (not index($_all, $name)) {\n      $use-case-swatches: $use-case-swatches + '@color: #{jigsass-color($name)} @name: #{$name}\n';\n    }\n  }\n\n  // stylelint-disable\n/* ---\nsection: Color Palette\norder: -100\n---\nUse the following colors for creating consistent UIs\n*/\n/* ---\nsection: Color Palette\ntitle: Brand Colors\norder: 1\n---\n\nThe basic brand identity colors\n\n```example:color\n#{$brand-swatches}\n```\n*/\n/* ---\nsection: Color Palette\ntitle: Color Use Cases\norder: 2\n---\n\nSpecific color use cases.\n\n```example:color\n#{$use-case-swatches}\n```\n*/\n/* ---\nsection: Color Palette\ntitle: State\norder: 3\n---\n\nState-indicating colors\n\n```example:color\n#{$state-swatches}\n```\n*/\n/* ---\nsection: Color Palette\ntitle: Social\norder: 4\n---\n\nSocial media brand colors\n\n```example:color\n#{$social-swatches}\n```\n*/\n  // stylelint-enable\n}\n","// *************************************\n//\n// #BASE.LINKS\n// -> Basic link styling\n//\n// *************************************\n\n// Only output styles once and if not in silent mode\n@include jigsass-component(base-link) {\n  // Reset link styling.\n  // 1. Inherit color from parent\n  // 2. Don't automatically decorate text\n  a {\n    color: inherit; // [1]\n    cursor: pointer;\n    text-decoration: none; // [2]\n  }\n}\n","// *************************************\n//\n// #BASE.TYPOGRAPHY\n// -> Basic typographic styling\n//\n// *************************************\n\n// Only output styles once and if not in silent mode\n@include jigsass-component(base-typography) {\n  // Body text\n  //\n  // 1. Set good measure.\n  // 2. Larger type in tiny viewports\n  // ---\n  .b-entry > *,\n  .b-paragraph {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 92rem;\n\n    @include jigsass-mq($until: s) {\n      @include jigsass-font-size(epsilon, $lines: 5); // [2]\n    }\n  }\n\n  // Textual links\n  //\n  // 1. A more elegant underline for link interaction\n  // ---\n  .b-entry > * > a,\n  .b-paragraph > a,\n  .b-txt-link {\n    &,\n    &:visited {\n      box-shadow: inset 0 -1px 0 0 jigsass-color('link' (jigsass-tint: 15));  // [1]\n      color: jigsass-color('link');\n    }\n\n    &:hover,\n    &:focus,\n    &:active  {\n      box-shadow: inset 0 -3px 0 0 jigsass-color('link' (jigsass-tint: 15));  // [1]\n    }\n  }\n}\n","// *************************************\n//\n// # jigsass-tools-color\n// -> Helpers for using and managing color palettes\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhawks.github.io/jigsass-tools-color/\n//\n////\n/// @group Color\n////\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// Color palette definitions.\n/// ---\n/// @prop {List} color\n/// @prop {Color | String} color.value\n///   Can be either an explicit color value or a string\n///   referencing another color defined in the palette.\n/// @prop {List} color.adjustments\n///   A list of color functions to apply. Each item can\n///   either be a map with `function-name: args` pairs,\n///   or a string for color functions that do not take\n///   adjustment arguments (e.g., compliment).\n///\n///   Adjustment functions will be executed in the\n///   order they are defined, in the following format:\n///   `function-name(color.value, args...)`.\n///\n///   When a adjustment argument is a unitless number,\n///   It will resolve to the corresponding step in\n///   `$jigsass-adjustment-steps`.\n/// ---\n/// @example scss\n///   $jigsass-color: (\n///     // Explicit colors\n///     primary: #09a5d9,\n///     secondary: #046380,\n///     tertiary: #9f1626,\n///     neutral: #2d2d2d,\n///\n///     // Reference adjustments\n///     light-tertiary: #9f1626 (tint: 2),\n///\n///     // Refrences\n///     text-link: secondary,\n///\n///     // Reference adjustments\n///     gutter-rule: secondary (tint: 3),\n///\n///     // Multiple adjustments\n///     headline: primary (shade: 1) complement,\n///   )\n/// ---\n/// @see {vriable} $jigsass-adjustment-steps\n/// ---\n/// @type Map\n/// ---\n$jigsass-colors: () !default;\n\n/// Predefined adjustment steps for color functions\n/// in the format of 'function-name: steps'.\n///\n/// If the map has a `default` key, if will be used as the default\n/// for color functions which don't have explicitly defined steps\n///\n/// A key associated a `Number` value, for incremental steps,\n/// or with a list of numbers for explicitly defining steps\n/// (see example).\n/// ---\n/// @prop {Percentage | List} default [5%]\n///   The default steps used for color functions with no\n///   explicitly defined steps.\n/// ---\n/// @example scss\n///   $jigsass-adjustment-steps: (\n///     // Incremental: adjustment increased by 5%\n///     // at every step (i.e., step 1 = 5%, step 4 = 20%).\n///     default: 5%,\n///\n///     // Explicit: step 1 = 25%, step 3 = 75%.\n///     darken: 25% 50% 75%\n///   );\n/// ---\n/// @type map\n/// ---\n$jigsass-adjustment-steps: (\n  default: 5%\n) !default;\n\n\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n/// Get a color from the color palette defined in `$jigsass-color` using the\n/// format described in [_`$jigsass-colors`_](#variable-jigsass-colors).\n/// ---\n/// @param {Color | String | List} $color\n///   A CSS color or a name of a color from the colors palette, with\n///   optional adjustments using the format described in\n///   [_`$jigsass-colors`_](#variable-jigsass-colors).\n/// ---\n/// @return {Color}\n/// ---\n@function jigsass-color($color) {\n  // Check if `$color` is a named color in the color palette\n  $color: map-get($jigsass-colors, $color) or $color;\n\n  // Split color and adjustments\n  $adjustments: ();\n  @if (length($color) > 1) {\n    @for $i from 2 through length($color) {\n      $adjustments: append($adjustments, nth($color, $i));\n    }\n  }\n\n  $color: nth($color, 1);\n\n  // Check again if `$color` is a named color in the color palette\n  $named-colors: ();\n  // Coerce all color names into strings, to prevent an infinite loop\n  // (#000 == black is true in Sass)\n  @each $color-name, $value in $jigsass-colors {\n    $named-colors: append($named-colors, quote($color-name));\n  }\n  $color: if(index($named-colors, quote($color)), jigsass-color($color), $color);\n\n  @if (length($adjustments) > 0) {\n    // Apply adjustments\n    @each $adjustment in $adjustments {\n      @if (type-of($adjustment) == map) {\n        $fn: nth(nth($adjustment, 1), 1);\n        $values: _jigsass-get-adjustment-level($fn, nth(nth($adjustment, 1), 2));\n        $_args: join(($fn, $color), $values);\n\n        @if (function-exists($fn)) {\n          // Hack to fix libsass 3.3.5 bug\n          // https://github.com/sass/libsass/issues/2034\n          $color: call($fn, $color, $values...);\n          // Go back to this when bug is fixed\n          // $color: call($_args...);\n        }\n        @else {\n          @error 'jigsass-color: Cannot use `#{$fn}` to adjust color. No such ' +\n            'function exists.';\n        }\n      }\n\n      @else {\n\n        $color: call($adjustment, $color);\n      }\n    }\n  }\n\n  @return $color;\n}\n\n\n/// Mix a color with `white` by amount.\n/// ---\n/// @param {Color | String | List} $color\n///   A list with the first item being either an explicit color\n///   or a name of a color from the `$jigsass-color` palette.<br />\n///   The following, optional, items are adjustments to apply on\n///   the color before tinting it, in the format described in\n///   [_`$jigsass-colors`_](#variable-jigsass-colors)\n/// @param {Precentage} $amount\n///   The amount of `white` to add to `$color`.\n/// ---\n/// @return {Color}\n/// ---\n/// @example scss\n///   $tinted: jigsass-tint(primary (saturate: 2), 20%);\n/// ---\n@function jigsass-tint($color, $amount) {\n  @if (not type-of($amount) == number) {\n    @error 'jigsass-tint: `$amount` must be a number in `%`s, but it is a `#{type-of($amount)}`.';\n  }\n  @if (not unit($amount) == '%') {\n    @error 'jigsass-tint: `$amount` must be in `%`s, but it is in `#{unit($amount)}`.';\n  }\n\n  $color: jigsass-color($color);\n\n  @return mix(#fff, $color, $amount);\n}\n\n\n/// Mix a color with `black` by amount.\n/// ---\n/// @param {Color | String | List} $color\n///   A list with the first item being either an explicit color\n///   or a name of a color from the `$jigsass-color` palette.<br />\n///   The following, optional, items are adjustments to apply on\n///   the color before shading it, in the format described in\n///   [_`$jigsass-colors`_](#variable-jigsass-colors)\n/// @param {Precentage} $amount\n///   The amount of `black` to add to `$color`.\n/// ---\n/// @return {Color}\n/// ---\n/// @example scss\n///   $shaded: jigsass-shade(primary (desaturate: 2), 20%);\n/// ---\n@function jigsass-shade($color, $amount) {\n  @if (not type-of($amount) == number) {\n    @error 'jigsass-shade: `$amount` must be a number in `%`s, but it is a `#{type-of($amount)}`.';\n  }\n  @if (not unit($amount) == '%') {\n    @error 'jigsass-shade: `$amount` must be in `%`s, but it is in `#{unit($amount)}`.';\n  }\n\n  $color: jigsass-color($color);\n\n  @return mix(#000, $color, $amount);\n}\n\n\n\n\n\n// -------------------------------------\n// Private functions\n// -------------------------------------\n\n/// A helper to get color adjustment levels based on\n/// steps defined in `$jigsass-adjustment-steps`\n/// ---\n/// @param {String} $function\n///   A color function to resolve adjustment steps for\n/// @param {Number | List} $adjustments\n///   A unitless number for the number of steps to resolve, a percentage, or a list of those.\n/// ---\n/// @return {Number | List}\n///   An adjustment level in percentage, or a list of them.\n/// ---\n@function _jigsass-get-adjustment-level($function, $adjustments) {\n  $steps: map-get($jigsass-adjustment-steps, $function) or\n    map-get($jigsass-adjustment-steps, default);\n  $ret: ();\n\n  @each $adjustment in $adjustments {\n    @if (type-of($adjustment) == number and unitless($adjustment)) {\n      @if (not $steps) {\n        @error '_jigsass-get-adjustment-steps: No adjustment steps could be found ' +\n          'for `#{$function}` function and no default steps are defines.';\n      }\n\n      @if (length($steps) > 1) {\n        $adjustment: if(\n          $adjustment > length($steps),\n          nth($steps, length($steps)),\n          nth($steps, $adjustment)\n        );\n      }\n\n      @else {\n        $adjustment: $adjustment * $steps;\n      }\n    }\n\n    $ret: append($ret, $adjustment);\n  }\n\n  @return $ret;\n}\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n/// Add or overwrite a color in the color palette\n/// ---\n/// @param {String} $name\n///   The name of the new color\n/// @param {String | Color | List} $values\n///   color values in the format described in\n///   [_`$jigsass-colors`_](#variable-jigsass-colors).\n/// ---\n/// @example scss\n///   // Explicit\n///   @include jigsass-set-color(quaternary, #f0f);\n///\n///   // Reference an existing color\n///   @include jigsass-set-color(quaternary, primary);\n///\n///   // Adjust an existing color\n///   @include jigsass-set-color(quaternary, primary compliment (tint: 1));\n/// ---\n@mixin jigsass-set-color($name, $values) {\n  $jigsass-colors: map-merge($jigsass-colors, ($name: $values)) !global;\n}\n","// *************************************\n//\n// #BASE.MEDIA\n// -> Basic embedded media styling\n//\n// *************************************\n\n// Only output styles once and if not in silent mode\n@include jigsass-component(base-media) {\n  // Fluid embedded media\n  // 1. Set apart alt text for images that failed to load\n  // 2. Fluid embedded media\n  // 3. Lose unwanted whitespace beneath embedded media\n  // ---\n  img,\n  video {\n    font-style: italic; // [1]\n    max-width: 100%; // [2]\n    vertical-align: middle; // [3]\n  }\n\n  // Respect dimensions explicitly set in the markup\n  // ---\n  [width],\n  [height] {\n    max-width: none;\n  }\n\n  // Some images should be allowed to scale up\n  // ---\n  // stylelint-disable string-quotes\n  [data-srcset],\n  [srcset],\n  [width=\"100%\"],\n  picture > * {\n    // stylelint-enable string-quotes\n    width: 100%;\n  }\n}\n","@charset \"UTF-8\";\n/* ---\nsection: Animation\ntitle: get-anim()\n---\nUse the `get-anim` function to get normalized animation\ntiming and timing functions:\n\n```scss\nget-anim(\n  $duration: <duration-name|time>,\n  $easing: <timing-function>,\n  $delay: <duration-name|time>\n)\n```\n\nNamed durations are:\n`long`: 1s\n`mid`: 0.5s\n`short`: 0.25s\n`brief`: 0.15s\n\nNamed timing functions are:\n`swift-out`: cubic-bezier(0.55, 0, 0.1, 1)\n`swift-in`: cubic-bezier(0, 0, 0.2, 0)\n`in`: ease-in\n`out`: ease-out\n`in-out`: ease-in-out\n*/\n/* stylelint-disable indentation */\n@keyframes busy {\n  0% {\n    opacity: 0;\n    transform: translateX(110%); }\n  20% {\n    transform: translateX(110%); }\n  50% {\n    opacity: 1; }\n  80% {\n    transform: translateX(0); }\n  100% {\n    transform: translateX(0); } }\n\n/* stylelint-disable indentation */\n/* stylelint-disable indentation */\n/* stylelint-disable indentation */\n/* stylelint-disable indentation */\n/* stylelint-disable indentation */\n/* stylelint-disable indentation */\n/* stylelint-disable indentation */\n/* stylelint-disable indentation */\n/* stylelint-disable indentation */\n/* stylelint-disable indentation */\n/* stylelint-disable indentation */\n/* stylelint-disable indentation */\nhtml {\n  font-family: \"Open Sans Hebrew\" arial, sans-serif;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%; }\n\nbody {\n  margin: 0; }\n\n* article, * aside, * details, * figcaption, * figure, * footer, * header, * main, * menu, * nav, * section, * summary {\n  display: block; }\n\n* audio, * canvas, * progress, * video {\n  display: inline-block; }\n\n* audio:not([controls]) {\n  display: none;\n  height: 0; }\n\n* progress {\n  vertical-align: baseline; }\n\n* template, * [hidden] {\n  display: none; }\n\n* a {\n  background-color: transparent; }\n\n* a:active, * a:hover {\n  outline-width: 0; }\n\n* abbr[title] {\n  border-bottom: none;\n  text-decoration: underline;\n  text-decoration: underline dotted; }\n\n* b, * strong {\n  font-weight: inherit; }\n\n* b, * strong {\n  font-weight: bolder; }\n\n* dfn {\n  font-style: italic; }\n\n* mark {\n  background-color: #ff0;\n  color: #000; }\n\n* small {\n  font-size: 80%; }\n\n* sub, * sup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\n* sub {\n  bottom: -0.25em; }\n\n* sup {\n  top: -0.5em; }\n\n* img {\n  border-style: none; }\n\n* svg:not(:root) {\n  overflow: hidden; }\n\n* code, * kbd, * pre, * samp {\n  font-family: monospace, monospace;\n  font-size: 1em; }\n\n* hr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible; }\n\n* button, * input, * select, * textarea {\n  font: inherit;\n  margin: 0; }\n\n* optgroup {\n  font-weight: bold; }\n\n* button, * input, * select {\n  overflow: visible; }\n\n* button, * select {\n  text-transform: none; }\n\n* button, * [type='button'], * [type='reset'], * [type='submit'] {\n  cursor: pointer; }\n\n* [disabled] {\n  cursor: default; }\n\n* button, * body [type='button'], * [type='reset'], * [type='submit'] {\n  -webkit-appearance: button; }\n\n* button::-moz-focus-inner, * input::-moz-focus-inner {\n  border: 0;\n  padding: 0; }\n\n* button:-moz-focusring, * input:-moz-focusring {\n  outline: 1px dotted ButtonText; }\n\n* fieldset {\n  border: 0;\n  margin: 0;\n  padding: 0; }\n\n* legend {\n  box-sizing: border-box;\n  color: inherit;\n  display: table;\n  max-width: 100%;\n  padding: 0;\n  white-space: normal; }\n\n* textarea {\n  overflow: auto; }\n\n* [type='checkbox'], * [type='radio'] {\n  box-sizing: border-box;\n  padding: 0; }\n\n* [type='number']::-webkit-inner-spin-button, * [type='number']::-webkit-outer-spin-button {\n  height: auto; }\n\n* [type='search'] {\n  -webkit-appearance: textfield; }\n\n* [type='search']::-webkit-search-cancel-button, * [type='search']::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\nhtml {\n  box-sizing: border-box; }\n\n*, *:before, *:after {\n  box-sizing: inherit; }\n\n* body, * iframe, * h1, * h2, * h3, * h4, * h5, * h6, * p, * blockquote, * pre, * dl, * dd, * ol, * ul, * fieldset, * form, * label, * legend, * table, * caption, * th, * td, * figure, * hr {\n  margin: 0;\n  padding: 0; }\n\n* h1, * h2, * h3, * h4, * h5, * h6 {\n  font-size: 100%; }\n\n* table {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\n* label, * input, * button, * select, * option {\n  cursor: pointer; }\n\n* textarea:active, * textarea:focus, * input[type='email'], * input[type='email']:active, * input[type='password'], * input[type='password']:focus, * input[type='password']:active, * input[type='search'], * input[type='search']:focus, * input[type='search']:active, * input[type='text'], * input[type='text']:focus, * input[type='text']:active {\n  cursor: text;\n  outline: none; }\n\n* button, * input[type='button'], * input[type='reset'], * input[type='submit'] {\n  background-color: transparent;\n  border: 0;\n  color: inherit;\n  letter-spacing: inherit;\n  padding: 0; }\n\nhtml {\n  font-size: 6px; }\n  @media (min-width: 80em) {\n    html {\n      font-size: 7px; } }\n\nbody {\n  font-size: 2.6666666667em;\n  line-height: 4rem; }\n  @media (min-width: 80em) {\n    body {\n      font-size: 2.5714285714em; } }\n\nhtml {\n  color: #2d2d2d;\n  fill: #2d2d2d;\n  min-height: 100%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased; }\n\nbody {\n  overflow-x: hidden; }\n\nbody:after {\n  content: '{\"values\": {\"default\": \"0\", \"s\": \"600px\", \"m\": \"768px\", \"l\": \"1024px\", \"xl\": \"1280px\"}, \"from\": {\"default\": {\"from\": \"0\", \"active\": true}, \"s\": {\"from\": \"600px\", \"active\": false}, \"m\": {\"from\": \"768px\", \"active\": false}, \"l\": {\"from\": \"1024px\", \"active\": false}, \"xl\": {\"from\": \"1280px\", \"active\": false}}, \"until\": {\"default\": {\"until\": \"0\", \"active\": false}, \"s\": {\"until\": \"600px\", \"active\": true}, \"m\": {\"until\": \"768px\", \"active\": true}, \"l\": {\"until\": \"1024px\", \"active\": true}, \"xl\": {\"until\": \"1280px\", \"active\": true}}, \"from-until\": {\"default-until-s\": {\"from\": \"0\", \"until\": \"600px\", \"active\": true}, \"default-until-m\": {\"from\": \"0\", \"until\": \"768px\", \"active\": true}, \"default-until-l\": {\"from\": \"0\", \"until\": \"1024px\", \"active\": true}, \"default-until-xl\": {\"from\": \"0\", \"until\": \"1280px\", \"active\": true}, \"s-until-m\": {\"from\": \"600px\", \"until\": \"768px\", \"active\": false}, \"s-until-l\": {\"from\": \"600px\", \"until\": \"1024px\", \"active\": false}, \"s-until-xl\": {\"from\": \"600px\", \"until\": \"1280px\", \"active\": false}, \"m-until-l\": {\"from\": \"768px\", \"until\": \"1024px\", \"active\": false}, \"m-until-xl\": {\"from\": \"768px\", \"until\": \"1280px\", \"active\": false}, \"l-until-xl\": {\"from\": \"1024px\", \"until\": \"1280px\", \"active\": false}}}';\n  display: none; }\n\n@media (min-width: 37.5em) {\n  body:after {\n    content: '{\"values\": {\"default\": \"0\", \"s\": \"600px\", \"m\": \"768px\", \"l\": \"1024px\", \"xl\": \"1280px\"}, \"from\": {\"default\": {\"from\": \"0\", \"active\": true}, \"s\": {\"from\": \"600px\", \"active\": true}, \"m\": {\"from\": \"768px\", \"active\": false}, \"l\": {\"from\": \"1024px\", \"active\": false}, \"xl\": {\"from\": \"1280px\", \"active\": false}}, \"until\": {\"default\": {\"until\": \"0\", \"active\": false}, \"s\": {\"until\": \"600px\", \"active\": false}, \"m\": {\"until\": \"768px\", \"active\": true}, \"l\": {\"until\": \"1024px\", \"active\": true}, \"xl\": {\"until\": \"1280px\", \"active\": true}}, \"from-until\": {\"default-until-s\": {\"from\": \"0\", \"until\": \"600px\", \"active\": false}, \"default-until-m\": {\"from\": \"0\", \"until\": \"768px\", \"active\": true}, \"default-until-l\": {\"from\": \"0\", \"until\": \"1024px\", \"active\": true}, \"default-until-xl\": {\"from\": \"0\", \"until\": \"1280px\", \"active\": true}, \"s-until-m\": {\"from\": \"600px\", \"until\": \"768px\", \"active\": true}, \"s-until-l\": {\"from\": \"600px\", \"until\": \"1024px\", \"active\": true}, \"s-until-xl\": {\"from\": \"600px\", \"until\": \"1280px\", \"active\": true}, \"m-until-l\": {\"from\": \"768px\", \"until\": \"1024px\", \"active\": false}, \"m-until-xl\": {\"from\": \"768px\", \"until\": \"1280px\", \"active\": false}, \"l-until-xl\": {\"from\": \"1024px\", \"until\": \"1280px\", \"active\": false}}}';\n    display: none; } }\n\n@media (min-width: 48em) {\n  body:after {\n    content: '{\"values\": {\"default\": \"0\", \"s\": \"600px\", \"m\": \"768px\", \"l\": \"1024px\", \"xl\": \"1280px\"}, \"from\": {\"default\": {\"from\": \"0\", \"active\": true}, \"s\": {\"from\": \"600px\", \"active\": true}, \"m\": {\"from\": \"768px\", \"active\": true}, \"l\": {\"from\": \"1024px\", \"active\": false}, \"xl\": {\"from\": \"1280px\", \"active\": false}}, \"until\": {\"default\": {\"until\": \"0\", \"active\": false}, \"s\": {\"until\": \"600px\", \"active\": false}, \"m\": {\"until\": \"768px\", \"active\": false}, \"l\": {\"until\": \"1024px\", \"active\": true}, \"xl\": {\"until\": \"1280px\", \"active\": true}}, \"from-until\": {\"default-until-s\": {\"from\": \"0\", \"until\": \"600px\", \"active\": false}, \"default-until-m\": {\"from\": \"0\", \"until\": \"768px\", \"active\": false}, \"default-until-l\": {\"from\": \"0\", \"until\": \"1024px\", \"active\": true}, \"default-until-xl\": {\"from\": \"0\", \"until\": \"1280px\", \"active\": true}, \"s-until-m\": {\"from\": \"600px\", \"until\": \"768px\", \"active\": false}, \"s-until-l\": {\"from\": \"600px\", \"until\": \"1024px\", \"active\": true}, \"s-until-xl\": {\"from\": \"600px\", \"until\": \"1280px\", \"active\": true}, \"m-until-l\": {\"from\": \"768px\", \"until\": \"1024px\", \"active\": true}, \"m-until-xl\": {\"from\": \"768px\", \"until\": \"1280px\", \"active\": true}, \"l-until-xl\": {\"from\": \"1024px\", \"until\": \"1280px\", \"active\": false}}}';\n    display: none; } }\n\n@media (min-width: 64em) {\n  body:after {\n    content: '{\"values\": {\"default\": \"0\", \"s\": \"600px\", \"m\": \"768px\", \"l\": \"1024px\", \"xl\": \"1280px\"}, \"from\": {\"default\": {\"from\": \"0\", \"active\": true}, \"s\": {\"from\": \"600px\", \"active\": true}, \"m\": {\"from\": \"768px\", \"active\": true}, \"l\": {\"from\": \"1024px\", \"active\": true}, \"xl\": {\"from\": \"1280px\", \"active\": false}}, \"until\": {\"default\": {\"until\": \"0\", \"active\": false}, \"s\": {\"until\": \"600px\", \"active\": false}, \"m\": {\"until\": \"768px\", \"active\": false}, \"l\": {\"until\": \"1024px\", \"active\": false}, \"xl\": {\"until\": \"1280px\", \"active\": true}}, \"from-until\": {\"default-until-s\": {\"from\": \"0\", \"until\": \"600px\", \"active\": false}, \"default-until-m\": {\"from\": \"0\", \"until\": \"768px\", \"active\": false}, \"default-until-l\": {\"from\": \"0\", \"until\": \"1024px\", \"active\": false}, \"default-until-xl\": {\"from\": \"0\", \"until\": \"1280px\", \"active\": true}, \"s-until-m\": {\"from\": \"600px\", \"until\": \"768px\", \"active\": false}, \"s-until-l\": {\"from\": \"600px\", \"until\": \"1024px\", \"active\": false}, \"s-until-xl\": {\"from\": \"600px\", \"until\": \"1280px\", \"active\": true}, \"m-until-l\": {\"from\": \"768px\", \"until\": \"1024px\", \"active\": false}, \"m-until-xl\": {\"from\": \"768px\", \"until\": \"1280px\", \"active\": true}, \"l-until-xl\": {\"from\": \"1024px\", \"until\": \"1280px\", \"active\": true}}}';\n    display: none; } }\n\n@media (min-width: 80em) {\n  body:after {\n    content: '{\"values\": {\"default\": \"0\", \"s\": \"600px\", \"m\": \"768px\", \"l\": \"1024px\", \"xl\": \"1280px\"}, \"from\": {\"default\": {\"from\": \"0\", \"active\": true}, \"s\": {\"from\": \"600px\", \"active\": true}, \"m\": {\"from\": \"768px\", \"active\": true}, \"l\": {\"from\": \"1024px\", \"active\": true}, \"xl\": {\"from\": \"1280px\", \"active\": true}}, \"until\": {\"default\": {\"until\": \"0\", \"active\": false}, \"s\": {\"until\": \"600px\", \"active\": false}, \"m\": {\"until\": \"768px\", \"active\": false}, \"l\": {\"until\": \"1024px\", \"active\": false}, \"xl\": {\"until\": \"1280px\", \"active\": false}}, \"from-until\": {\"default-until-s\": {\"from\": \"0\", \"until\": \"600px\", \"active\": false}, \"default-until-m\": {\"from\": \"0\", \"until\": \"768px\", \"active\": false}, \"default-until-l\": {\"from\": \"0\", \"until\": \"1024px\", \"active\": false}, \"default-until-xl\": {\"from\": \"0\", \"until\": \"1280px\", \"active\": false}, \"s-until-m\": {\"from\": \"600px\", \"until\": \"768px\", \"active\": false}, \"s-until-l\": {\"from\": \"600px\", \"until\": \"1024px\", \"active\": false}, \"s-until-xl\": {\"from\": \"600px\", \"until\": \"1280px\", \"active\": false}, \"m-until-l\": {\"from\": \"768px\", \"until\": \"1024px\", \"active\": false}, \"m-until-xl\": {\"from\": \"768px\", \"until\": \"1280px\", \"active\": false}, \"l-until-xl\": {\"from\": \"1024px\", \"until\": \"1280px\", \"active\": false}}}';\n    display: none; } }\n\na {\n  color: inherit;\n  cursor: pointer;\n  text-decoration: none; }\n\n.b-entry > *,\n.b-paragraph {\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 92rem; }\n  @media (max-width: 37.49em) {\n    .b-entry > *,\n    .b-paragraph {\n      font-size: 3rem;\n      line-height: 5rem; } }\n\n.b-entry > * > a, .b-entry > * > a:visited,\n.b-paragraph > a,\n.b-paragraph > a:visited,\n.b-txt-link,\n.b-txt-link:visited {\n  box-shadow: inset 0 -1px 0 0 #bfe0e7;\n  color: #00829e; }\n\n.b-entry > * > a:hover, .b-entry > * > a:focus, .b-entry > * > a:active,\n.b-paragraph > a:hover,\n.b-paragraph > a:focus,\n.b-paragraph > a:active,\n.b-txt-link:hover,\n.b-txt-link:focus,\n.b-txt-link:active {\n  box-shadow: inset 0 -3px 0 0 #bfe0e7; }\n\nimg,\nvideo {\n  font-style: italic;\n  max-width: 100%;\n  vertical-align: middle; }\n\n[width],\n[height] {\n  max-width: none; }\n\n[data-srcset],\n[srcset],\n[width=\"100%\"],\npicture > * {\n  width: 100%; }\n\n/* ---\nsection: Media object\ntitle: Introduction\norder: -10\n---\n\nA flexbox enabled version of @Stubbornella's media object\n\n**[GitHub page](https://txhawks.github.io/jigsass-objects-media)**\n\nThe [media object](http://bit.ly/Ku2rqE), introduced by Nichole Sullivan, is a\nlayout abstraction for placing fixed width content and fluid content side by side.\n\nJigSass Media is a flexbox enabled implementation of the original, with optional fallback\n(See [Configuration](#configutation)).\n\n## Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-objects-media\n```\n\n## Usage\nFirst, import JigSass Objects Media to your main stylesheet:\n\n```scss\n@import 'path/to/jigsass-objects-media/scss/index';\n```\n\nAnd optionally [reconfigure](#configuration) the defaults to your liking.\n\nLike all other JigSass modules, JigSass Button does not automatically generate any CSS when imported.\nIn order to use its classes, you would have to first explicitly indicate your intention to use\nthem by enabling their generation in the associated [configurations map](#css-output), leaving\nus only with CSS we need:\n\nAll JigSass Media classes are responsive-enabled, using\n[JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/) and the breakpoints defined in the\n[$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)\nvariable.\n\nBased on enabled selectors in the [configuration map](#css-output), responsive modifiers are\ngenerated according to the following logic:\n\n```scss\n.o-media[--modifier][-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n$jigsass-media-obj-conf: (\n  no-breakpoint: (\n    bottom: true,\n  ),\n  until-medium: (\n    bottom: true,\n  ),\n  from-large-when-landscape: (\n    bottom: true,\n  ),\n)\n```\n\nwill generate the following classes:\n  - `.o-media--bottom`, which is not limited to any media-query.\n  - `.o-media--bottom--until-medium`, which will be in effect at\n    `(max-width: 37.49em)` and will override styles in the default class\n    until that point.\n  - `.o-media-bottom--from-large-when-landscape`, which will go into effect at\n    `(min-width: 64em) and (orientation: landscape)` and will override styles\n    in the default class under these  conditions.\n\n\n-----\n\n\nAt its simplest form, the media object is simply a fixed element next to a fluid element,\nfilling up available space:\n\n```example:html\n<div class='u-cf o-media'>\n  <figure class='o-media__fig'>\n    <div class='[ fpo fpo--b fpo--fig ]'></div>\n  </figure>\n  <div class='o-media__content fpo'>\n    <p style='text-align: center'<strong>.o-media__content</strong></p>\n  </div>\n</div>\n```\n\nLike all JigSass object,  JigSass Media is responsive-enabled, and an instance\nmay be set to stack vertically by using responsive modifier classes on the container\n(resize window to see object stacking and unstacking):\n\n```example:html\n<div class='u-cf [ o-media--from-small-until-medium o-media--from-large ]'>\n  <figure class='o-media__fig'>\n    <div class='[ fpo fpo--b fpo--fig ]'></div>\n  </figure>\n  <div class='o-media__content fpo'>\n    <p style='text-align: center'>\n      <strong>Media object only from small until medium and  from large on.</strong>\n    </p>\n  </div>\n</div>\n```\n\nOne of the media object's key features, is that it can be endlessly nested:\n\n```example:html\n<! -- First level -->\n<div class='u-cf o-media'>\n  <figure class='o-media__fig'>\n    <div class='[ fpo fpo--b fpo--fig ]'></div>\n  </figure>\n  <div class='o-media__content fpo'>\n    <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</span>\n\n    <! -- Second level -->\n    <div class='u-cf o-media--from-medium'>\n      <figure class='o-media__fig'><div class='[ fpo fpo--b fpo--fig ]'></div></figure>\n      <div class='o-media__content fpo fpo--c'>\n        <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim venia.</span>\n\n        <! -- Third level -->\n        <div class='u-cf o-media--from-medium'>\n          <figure class='o-media__fig'><div class='[ fpo fpo--b fpo--fig ]'></div></figure>\n          <div class='o-media__content fpo'>\n            <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit.</span>\n\n            <! -- fourth level -->\n            <div class='u-cf o-media--from-large'>\n              <figure class='o-media__fig'><div class='[ fpo fpo--b fpo--fig ]'></div></figure>\n              <div class='o-media__content fpo fpo--c'>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </div>\n            </div>\n            <div class='u-cf o-media--from-large o-media--rev--from-large'>\n              <figure class='o-media__fig'><div class='[ fpo fpo--b fpo--fig ]'></div></figure>\n              <div class='o-media__content fpo fpo--d'>\n                <strong>Media objects can also be reversed</strong> Media Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n```\n\nJigSass Media also offers vertical alignment modifiers ([middle](#middle-aligned),\n[bottem](#bottom-aligned)) and a [reverse](#reversed) modifier.\n\n\n**License:** MIT\n\n*/\n/* ---\nsection: Media Object\ntitle: CSS Outpout\norder: -2\n---\nBy default, JigSass Media does not generate any CSS output when imported into\na stylesheet. CSS output must be enabled on a per-selector basis, inside the\ndedicated configuration map:\n\n\n```scss\n$jigsass-media-obj-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nmedia object and modifier classes.\n\n\n**Default:**\n```scss\n$jigsass-media-obj-conf: (\n  no-breakpoint: (\n    no-modifier: false,\n    middle: false,\n    bottom: false,\n    rev: false,\n  ),\n);\n```\n\n\n**Example:**\n```scss\n$jigsass-media-obj-conf: (\n  no-breakpoint: (\n    no-modifier: true,  // Enables generation of the `.o-media`\n                        // class outside of any media query.\n    foo: true,          // Enables generation of the `.o-media--foo`\n                        // modifier class outside of any media query.\n  ),\n  from-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-media--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n    foo: true,          // Enables generation of the `.o-media--foo--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  until-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-media--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  foo: true,          // Enables generation of the `.o-media--foo--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  when-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-media--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n    foo: true,          // Enables generation of the `.o-media--foo--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n*/\n/* ---\nsection: Media Object\ntitle: Configuration\norder: -1\n---\nJigSass Media allows for some modification through tweaking configuration variable.\nTo override the default values, predefine them to your own needs _before_ importing\nthis file.\n\n\n#### Flexbox support\n```scss\n$jigsass-media-flexbox\n```\n**Type:** `Boolean`\n\nDetermines if flexbox should be enabled, where relevant\n\n**Default:** `true`\n\n\n#### Flexbox Fallback\n```scss\n$jigsass-media-flexbox-fallback\n```\n**Type:** `Boolean` or `String`\n\nDetermines if flexbox fallback should be included and the qualifier class\nto use if so (e.g, `.no-flexbox` when using Modernizr defaults)\n\nSet to `false` to disable fallback altogether, and to a class-name\n(sans the leading `.`) used as the qualifier class if fallback is\ndesirable.\n\n**Default:** `'no-flexbox'`\n*/\n.o-media {\n  display: flex;\n  /* ---\n  section: Media Object\n  title: Base\n  order: 1\n  ---\n  A flexbox enabled implementation of Nicole sullivan's\n  [media object](http://bit.ly/Ku2rqE) with optional fallback\n\n  Used to create a container with a fixed-width element at one end, and a fluid\n  width container next to it.\n\n  ```example:html\n  <div class='u-cf o-media'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'<strong>.o-media__content</strong></p>\n    </div>\n  </div>\n  ```\n\n  A media object may be set to stack vertically by using responsive modifier classes\n  on the container (resize window to see object stacking and unstacking):\n\n  ```example:html\n  <div class='u-cf [ o-media--from-small-until-medium o-media--from-large ]'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'>\n        <strong>Media object only from small until medium and  from large on.</strong>\n      </p>\n    </div>\n  </div>\n  ```\n\n\n  #### CSS Output\n\n  ```scss\n  // When flexbox is enabled\n  .o-media {\n    display: flex;\n  }\n  .o-media > .o-media__content {\n    flex: 1 1 auto;\n  }\n\n\n  // When flexbox fallback is enabled\n  .u-clearfix { ... }\n  .no-flexbox .o-media {\n    display: block;\n  }\n\n  .no-flexbox .o-media > .o-media__fig {\n    @include jigsass-bidi(float, start);\n    display: block;\n  }\n\n  .no-flexbox .o-media > .o-media__fig img {\n    vertical-align: top;\n  }\n\n  .no-flexbox .o-media > .o-media__content {\n    display: table-cell;\n    max-width: 100%;\n    width: 100000px;\n  }\n\n\n  // When flexbox is disabled\n  .u-clearfix { ... }\n\n  .o-media {\n    display: block;\n  }\n\n  .o-media > .o-media__fig {\n    @include jigsass-bidi(float, start);\n    display: block;\n  }\n\n  .o-media > .o-media__fig img {\n    vertical-align: top;\n  }\n\n  .o-media > .o-media__content {\n    display: table-cell;\n    max-width: 100%;\n    width: 100000px;\n  }\n  ```\n  */ }\n  .o-media > .o-media__content {\n    flex: 1 1 auto; }\n  .o-media > .o-media__fig {\n    flex-grow: 0;\n    flex-shrink: 0; }\n  .no-flexbox .o-media {\n    display: block; }\n    .no-flexbox .o-media > .o-media__fig {\n      float: right;\n      display: block; }\n      .no-flexbox .o-media > .o-media__fig img {\n        vertical-align: top; }\n    .no-flexbox .o-media > .o-media__content {\n      display: table-cell;\n      max-width: 100%;\n      width: 100000px; }\n\n.o-media--middle {\n  align-items: center;\n  /* ---\n  section: Media Object\n  title: Middle Aligned\n  order: 1\n  ---\n  A media object with items aligned to the vertical middle.\n\n  ```example:html\n  <div class='u-cf [ o-media o-media--middle ]'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'<strong>.o-media__content</strong></p>\n    </div>\n  </div>\n  ```\n\n  Can also be applying responsively:\n\n  ```example:html\n  <div class='u-cf [ o-media o-media--middle--from-small-until-medium o-media--middle--from-large ]'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'>\n        <strong>Middle aligned only from small until medium and  from large on.</strong>\n      </p>\n    </div>\n  </div>\n  ```\n\n\n  #### CSS Output\n\n  ```scss\n  // When flexbox is enabled\n  .o-media--middle { align-items: center; }\n\n  // When flexbox fallback is enabled\n  .no-flexbox .o-media--middle { display: table; }\n\n  .no-flexbox .o-media--middle > .o-media__fig {\n    display: inline-block;\n    float: none;\n  }\n  .no-flexbox .o-media--middle > .o-media__fig,\n  .no-flexbox .o-media--middle > .o-media__content {\n    vertical-align: middle;\n  }\n\n\n  // When flexbox is disabled\n  .o-media--middle { display: table; }\n\n  .o-media--middle > .o-media__fig {\n    display: inline-block;\n    float: none;\n  }\n  .o-media--middle > .o-media__fig,\n  .o-media--middle > .o-media__content {\n    vertical-align: middle;\n  }\n  ```\n  */ }\n  .no-flexbox .o-media--middle {\n    display: table; }\n    .no-flexbox .o-media--middle > .o-media__fig {\n      display: inline-block;\n      float: none; }\n    .no-flexbox .o-media--middle > .o-media__fig,\n    .no-flexbox .o-media--middle > .o-media-content {\n      vertical-align: middle; }\n\n.o-media--rev {\n  flex-direction: row-reverse;\n  /* ---\n  section: Media Object\n  title: Reversed\n  order: 3\n  ---\n  A media object in which elements are displayed opposite of their position in\n  the source order.\n\n  ```example:html\n  <div class='u-cf [ o-media o-media--rev ]'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'<strong>I am actually second in the source order</strong></p>\n    </div>\n  </div>\n  ```\n\n  Can also be applying responsively:\n\n  ```example:html\n  <div class='u-cf [ o-media o-media--rev--from-small-until-medium o-media--rev--from-large ]'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'>\n        <strong>Reversed only from small until medium and  from large on.</strong><br />\n        I am actually second in the dource order...\n      </p>\n    </div>\n  </div>\n  ```\n\n\n  #### CSS Output\n\n  ```scss\n  // When flexbox is enabled\n  .o-media--rev { flex-direction: row-reverse; }\n\n  // When flexbox fallback is enabled\n  .no-flexbox .o-media--rev { direction: (ltr|rtl); }\n  .no-flexbox .o-media--rev > * { direction: (rtl|ltr); }\n\n  // When flexbox is disabled\n  .o-media--rev { direction: (ltr|rtl); }\n  .o-media--rev > * { direction: (rtl|ltr); }\n  ```\n  */ }\n  .no-flexbox .o-media--rev {\n    direction: ltr; }\n    .no-flexbox .o-media--rev > * {\n      direction: rtl; }\n\n/* ---\nsection: Buttons\ntitle: Introduction\norder: -10\n---\n\nUnopinionated and configurable button objects\n\nThe JigSass Button object is built for maximal flexibility, providing only very basic styles\nas default. JigSass Button objects are transparent by default, and are meant to be extended by\ntype-size, color and background-color utils, and by configurable button object modifiers.\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-objects-button\n```\n\n#### Usage\nFirst, you need to import JigSass Button:\n\n```scss\n@import 'path/to/jigsass-objects-button/scss/index';\n```\n\nAnd optionally [reconfigure](#configuration) the defaults to your liking.\n\nLike all other JigSass modules, JigSass Button does not automatically generate any CSS when imported.\nIn order to use its classes, you would have to first explicitly indicate your intention to use\nthem by enabling their generation in the associated [configurations map](#css-output), Leaving\nus only with CSS we need:\n\nAll JigSass Button classes are responsive-enabled, using\n[JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/) and the breakpoints defined in the\n[$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)\nvariable.\n\nBased enabled selectors in the [configuration map](#css-output), responsive modifiers are\ngenerated according to the following logic:\n\n```scss\n.o-btn[--modifier][-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n$jigsass-btn-conf: (\n  no-breakpoint: (\n    outline: true,\n  ),\n  until-medium: (\n    outline: true,\n  ),\n  from-large-when-landscape: (\n    facebook: true,\n  ),\n)\n```\n\nwill generate the following classes:\n  - `.o-btn--outline`, which is not limited to any media-query.\n  - `.o-btn--outline--until-medium`, which will be in effect at\n    `(max-width: 37.49em)` and will override styles in the default class\n    until that point.\n  - `.o-btn--facebook--from-large-when-landscape`, which will go into effect at\n    `(min-width: 64em) and (orientation: landscape)` and will override styles\n    in the default class under these  conditions.\n\n\n**License:** MIT\n*/\n/* ---\nsection: Buttons\ntitle: CSS Outpout\norder: -2\n---\nBy default, JigSass Button does not generate any CSS output when imported into\na stylesheet. CSS output must be enabled on a per-selector basis, inside the\ndedicated configuration maps:\n\n#### Buttons and modifier classes\n```scss\n$jigsass-btn-conf\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nbutton  button modifier classes.\n\n\n**Default:** `()`\n\n\n**Example:**\n```scss\n$jigsass-btn-conf: (\n  no-breakpoint: (\n    no-modifier: true,  // Enables generation of the `.o-btn`\n                        // class outside of any media query.\n    foo: true,          // Enables generation of the `.o-btn--foo`\n                        // modifier class outside of any media query.\n  ),\n  from-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-btn--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n    foo: true,          // Enables generation of the `.o-btn--foo--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  until-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-btn--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  foo: true,          // Enables generation of the `.o-btn--foo--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  when-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-btn--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n    foo: true,          // Enables generation of the `.o-btn--foo--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n\n#### Disabled buttons\n```scss\n$jigsass-btn-disabled-conf\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\ndisabled button classes.\n\n\n**Default:** `()`\n\n\n**Example:**\n```scss\n$jigsass-btn-disabled-conf: (\n  no-breakpoint: (\n    no-modifier: true,  // Enables generation of the `.o-btn-is-disabled`\n                        // class outside of any media query.\n    foo: true,          // Enables generation of the `.o-btn-is-disabled--foo`\n                        // modifier class outside of any media query.\n  ),\n  from-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-btn-is-disabled--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n    foo: true,          // Enables generation of the `.o-btn-is-disabled--foo--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  until-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-btn-is-disabled--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  foo: true,          // Enables generation of the `.o-btn-is-disabled--foo--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  when-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-btn-is-disabled--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n    foo: true,          // Enables generation of the `.o-btn-is-disabled--foo--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n*/\n/* ---\nsection: Buttons\ntitle: Configuration\norder: -1\n---\nJigSass Button allows for some modification through configuration variables.\nRedefine them to your liking _before_ importing JigSass Buttons.\n\n#### Button Padding\n```scss\n$jigsass-btn-padding\n```\n\n**Type:** `Map`\n\nA map of button padding modifiers, each key should contain a list of two\nunitless numbers, representing the number of rhythm units used as padding\non the horizontal and vertical axes, respectively.\n\n**Default:** `(default: 2 1)`\n\n**Properties:**\n\nName | Description | Type | Default Value\n--- | --- | --- | ---\ndefault | Sets the padding of default button object | List | 2 1\n\n<p></p>\n\n**Example:**\n```scss\n$jigsass-btn-padding: (\n  default: 2 1,\n  small: 1 0.5,\n  large: 3 3,\n);\n```\n\n\n#### Button Outline\n```scss\n$jigsass-btn-outline\n```\n\n**Type:** `List`\n\nThe border width and style (and optionally color) of outlined buttons (`.o-btn--outline`)\n\n**Default:** `1px solid`\n\n\n#### Button Style\n```scss\n$jigsass-btn-style\n```\n\n**Type:** `Map`\n\nStyle declarations to add to the `.o-btn` class.\n\n**Default:** `()`\n\n**Example:**\n```scss\n$jigsass-btn-style: (\n  transition: all 0.25s ease-out,\n);\n```\n\n\n#### Button Modifiers\n```scss\n$jigsass-btn-modifiers\n```\n\n**Type:** `Map`\n\nCSS declarations for button modifiers, with each modifier being a nested\nmap at the first level.\n\n**Default:** `()`\n\n**Example:**\n```scss\n$jigsass-btn-modifiers: (\n  primary: (\n    background-color: #09a5d9,\n    color: #fff,\n\n    '&:hover, &:focus, &:active': (\n      background-color: darken(#09a5d9, 5%),\n    )\n  ),\n  facebook: (\n    background-color: #3b5998,\n    color: #fff,\n\n    '&:hover, &:focus, &:active': (\n      background-color: darken(#3b5998, 5%),\n    )\n  ),\n  twitter: (\n    background-color: #55acee,\n    color: #fff,\n\n    '&:hover, &:focus, &:active': (\n      background-color: darken(#55acee, 5%),\n    )\n  ),\n  gplus: (\n    background-color: #dc4e41,\n    color: #fff,\n\n    '&:hover, &:focus, &:active': (\n      background-color: darken(#dc4e41, 5%),\n    )\n  ),\n);\n```\n\n\n#### Disabled Buttons\n```scss\n$jigsass-btn-disabled\n```\n\n**Type:** `Map`\n\nStyle declarations for the `.o-btn-is-disabled` class.\n\n**Default:** `\n```scss\n(\n  opacity: 0.4,\n  cursor: default,\n)\n```\n*/\n.o-btn {\n  border-top: 0.1666666667rem solid transparent;\n  padding-top: 0.8333333333rem;\n  border-bottom: 0.1666666667rem solid transparent;\n  padding-bottom: 0.8333333333rem;\n  border-left: 0.1666666667rem solid transparent;\n  padding-left: 1.8333333333rem;\n  border-right: 0.1666666667rem solid transparent;\n  padding-right: 1.8333333333rem;\n  appearance: none;\n  background-color: transparent;\n  box-sizing: border-box;\n  color: inherit;\n  cursor: pointer;\n  display: inline-block;\n  font: inherit;\n  margin: 0;\n  text-align: center;\n  vertical-align: middle;\n  white-space: nowrap;\n  min-width: 0;\n  transition: all 0.25s cubic-bezier(0.55, 0, 0.1, 1);\n  /* ---\nsection: Buttons\ntitle: Button (base)\norder: 1\n---\n**.o-btn**\n\nAn actionable piece of UI\n\nBy default, `o-btn` elements are transparent and are meant to be extended by\ntype-size, color and background-color utils, and by configurable button object modifiers.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn'>A `button` element</button>\n  <a href=\"#\" class='o-btn'>An `a` element</a>\n  <input type='button' class='o-btn'value='An `input` element' />\n</div>\n```\n*/ }\n  .o-btn, .o-btn:hover, .o-btn:focus, .o-btn:active {\n    text-decoration: none; }\n  .o-btn::moz-focus-inner {\n    border: 0;\n    padding: 0; }\n\n.o-btn--small {\n  border-top: 0.1666666667rem solid transparent;\n  padding-top: 0.3333333333rem;\n  border-bottom: 0.1666666667rem solid transparent;\n  padding-bottom: 0.3333333333rem;\n  border-left: 0.1666666667rem solid transparent;\n  padding-left: 0.8333333333rem;\n  border-right: 0.1666666667rem solid transparent;\n  padding-right: 0.8333333333rem;\n  /* ---\nsection: Buttons\ntitle: Button (small)\norder: 12\n---\n\n**.o-btn--small**\n\nA `small` button.\n\nChanges the padding of the button, text size should be modified using type-size utils.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--small'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--small'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--small' />\n</div>\n```\n*/ }\n\n.o-btn--outline {\n  border-color: currentColor;\n  border-style: solid;\n  /* ---\nsection: Buttons\ntitle: Button (outlined)\norder: 103\n---\n\n**.o-btn--outline**\n\nAn outlined button, extends `.o-btn` in the markup.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--outline demo-crimson'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--outline demo-teal'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--outline  demo-deeppink' />\n</div>\n```\n*/ }\n\n.o-btn--primary {\n  background-color: #00829e;\n  color: #fff;\n  /* ---\nsection: Buttons\ntitle: Button (primary)\norder: 204\n---\n\n**.o-btn--primary**\n\nA `primary` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `primary` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--primary'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--primary'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--primary' />\n</div>\n```\n*/ }\n  .o-btn--primary:hover:enabled, .o-btn--primary:focus:enabled, .o-btn--primary:active:enabled {\n    background-color: #00a3a3;\n    color: #000;\n    outline: none; }\n\n.o-btn--primary-text {\n  color: #6c6c6c;\n  /* ---\nsection: Buttons\ntitle: Button (primary-text)\norder: 205\n---\n\n**.o-btn--primary-text**\n\nA `primary-text` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `primary-text` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--primary-text'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--primary-text'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--primary-text' />\n</div>\n```\n*/ }\n  .o-btn--primary-text:hover:enabled, .o-btn--primary-text:focus:enabled, .o-btn--primary-text:active:enabled {\n    color: #00829e; }\n\n.o-btn--quinary {\n  background-color: #0cc;\n  color: #000;\n  /* ---\nsection: Buttons\ntitle: Button (quinary)\norder: 206\n---\n\n**.o-btn--quinary**\n\nA `quinary` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `quinary` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--quinary'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--quinary'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--quinary' />\n</div>\n```\n*/ }\n  .o-btn--quinary:hover:enabled, .o-btn--quinary:focus:enabled, .o-btn--quinary:active:enabled {\n    background-color: #00a3a3;\n    outline: none; }\n\n.o-btn--inverse {\n  background-color: #fff;\n  /* ---\nsection: Buttons\ntitle: Button (inverse)\norder: 207\n---\n\n**.o-btn--inverse**\n\nA `inverse` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `inverse` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--inverse'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--inverse'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--inverse' />\n</div>\n```\n*/ }\n  .o-btn--inverse:hover:enabled, .o-btn--inverse:focus:enabled, .o-btn--inverse:active:enabled {\n    color: #00829e; }\n\n.o-btn--inverse-b {\n  color: #fff;\n  /* ---\nsection: Buttons\ntitle: Button (inverse-b)\norder: 208\n---\n\n**.o-btn--inverse-b**\n\nA `inverse-b` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `inverse-b` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--inverse-b'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--inverse-b'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--inverse-b' />\n</div>\n```\n*/ }\n  .o-btn--inverse-b:hover:enabled, .o-btn--inverse-b:focus:enabled, .o-btn--inverse-b:active:enabled {\n    background-color: #fff;\n    color: #00829e;\n    outline: none; }\n\n.o-btn--neutral {\n  background-color: #424242;\n  color: #fff;\n  /* ---\nsection: Buttons\ntitle: Button (neutral)\norder: 209\n---\n\n**.o-btn--neutral**\n\nA `neutral` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `neutral` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--neutral'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--neutral'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--neutral' />\n</div>\n```\n*/ }\n  .o-btn--neutral:hover:enabled, .o-btn--neutral:focus:enabled, .o-btn--neutral:active:enabled {\n    background-color: #2d2d2d;\n    outline: none; }\n\n.o-btn--sales {\n  background-color: #e63d00;\n  color: #fff;\n  /* ---\nsection: Buttons\ntitle: Button (sales)\norder: 210\n---\n\n**.o-btn--sales**\n\nA `sales` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `sales` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--sales'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--sales'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--sales' />\n</div>\n```\n*/ }\n  .o-btn--sales:hover:enabled, .o-btn--sales:focus:enabled, .o-btn--sales:active:enabled {\n    background-color: #a12b00;\n    outline: none; }\n\n.o-btn--facebook {\n  color: #3b5998;\n  /* ---\nsection: Buttons\ntitle: Button (facebook)\norder: 211\n---\n\n**.o-btn--facebook**\n\nA `facebook` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `facebook` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--facebook'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--facebook'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--facebook' />\n</div>\n```\n*/ }\n  .o-btn--facebook:hover:enabled, .o-btn--facebook:focus:enabled, .o-btn--facebook:active:enabled {\n    color: #0c3487; }\n\n.o-btn--twitter {\n  color: #55acee;\n  /* ---\nsection: Buttons\ntitle: Button (twitter)\norder: 212\n---\n\n**.o-btn--twitter**\n\nA `twitter` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `twitter` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--twitter'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--twitter'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--twitter' />\n</div>\n```\n*/ }\n  .o-btn--twitter:hover:enabled, .o-btn--twitter:focus:enabled, .o-btn--twitter:active:enabled {\n    color: #0f7ed4; }\n\n.o-btn--whatsapp {\n  color: #25d366;\n  fill: #fff;\n  /* ---\nsection: Buttons\ntitle: Button (whatsapp)\norder: 213\n---\n\n**.o-btn--whatsapp**\n\nA `whatsapp` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `whatsapp` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--whatsapp'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--whatsapp'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--whatsapp' />\n</div>\n```\n*/ }\n  .o-btn--whatsapp:hover:enabled, .o-btn--whatsapp:focus:enabled, .o-btn--whatsapp:active:enabled {\n    color: #00ae40; }\n\n.o-btn--gplus {\n  color: #d34836;\n  /* ---\nsection: Buttons\ntitle: Button (gplus)\norder: 214\n---\n\n**.o-btn--gplus**\n\nA `gplus` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `gplus` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--gplus'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--gplus'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--gplus' />\n</div>\n```\n*/ }\n  .o-btn--gplus:hover:enabled, .o-btn--gplus:focus:enabled, .o-btn--gplus:active:enabled {\n    color: #b91501; }\n\n.o-btn--full {\n  display: block;\n  max-width: 100%;\n  width: 100%;\n  /* ---\nsection: Buttons\ntitle: Button (full)\norder: 215\n---\n\n**.o-btn--full**\n\nA `full` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `full` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--full'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--full'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--full' />\n</div>\n```\n*/ }\n\n.o-btn--action {\n  border-bottom-color: currentColor;\n  font-weight: 700;\n  padding-left: 0;\n  padding-right: 0;\n  position: relative;\n  /* ---\nsection: Buttons\ntitle: Button (action)\norder: 216\n---\n\n**.o-btn--action**\n\nA `action` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `action` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--action'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--action'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--action' />\n</div>\n```\n*/ }\n  .o-btn--action:after {\n    background-color: currentColor;\n    bottom: -0.1666666667rem;\n    content: \"\";\n    height: 0.3333333333rem;\n    left: 0;\n    right: 0;\n    position: absolute;\n    transform: scaleX(0);\n    transition: all 0.25s cubic-bezier(0.55, 0, 0.1, 1); }\n  .o-btn--action:hover:enabled, .o-btn--action:focus:enabled, .o-btn--action:active:enabled {\n    outline: none; }\n    .o-btn--action:hover:enabled:after, .o-btn--action:focus:enabled:after, .o-btn--action:active:enabled:after {\n      transform: scaleX(1); }\n\n.o-btn--action-is-active {\n  /* ---\nsection: Buttons\ntitle: Button (action-is-active)\norder: 217\n---\n\n**.o-btn--action-is-active**\n\nA `action-is-active` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `action-is-active` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--action-is-active'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--action-is-active'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--action-is-active' />\n</div>\n```\n*/ }\n  .o-btn--action-is-active:after {\n    transform: scaleX(1); }\n\n.o-btn--busy {\n  /* ---\nsection: Buttons\ntitle: Button (busy)\norder: 218\n---\n\n**.o-btn--busy**\n\nA `busy` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `busy` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--busy'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--busy'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--busy' />\n</div>\n```\n*/ }\n  .o-btn--busy, .o-btn--busy:hover, .o-btn--busy:active, .o-btn--busy:focus {\n    background-color: #fff;\n    border-color: #00829e;\n    border-radius: 10em;\n    color: #fff;\n    display: block;\n    min-width: 75%;\n    max-width: 75%;\n    opacity: 0.999;\n    outline: none;\n    overflow: hidden;\n    position: relative;\n    transition: all 0.5s linear; }\n  .o-btn--busy:after {\n    animation: busy 1.5s linear infinite alternate;\n    background-color: #00829e;\n    border-radius: 10em;\n    content: \"\";\n    height: 100%;\n    position: absolute;\n    right: 0;\n    top: 0;\n    transform: translateX(-120%);\n    width: 100%;\n    will-change: transform;\n    z-index: -1; }\n\n.o-btn--click-area-6 {\n  height: 6rem;\n  line-height: 6rem;\n  min-width: 6rem;\n  text-align: center;\n  /* ---\nsection: Buttons\ntitle: Button (click-area-6)\norder: 219\n---\n\n**.o-btn--click-area-6**\n\nA `click-area-6` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `click-area-6` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--click-area-6'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--click-area-6'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--click-area-6' />\n</div>\n```\n*/ }\n\n.o-btn--click-area-7 {\n  height: 7rem;\n  line-height: 7rem;\n  min-width: 7rem;\n  text-align: center;\n  /* ---\nsection: Buttons\ntitle: Button (click-area-7)\norder: 220\n---\n\n**.o-btn--click-area-7**\n\nA `click-area-7` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `click-area-7` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--click-area-7'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--click-area-7'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--click-area-7' />\n</div>\n```\n*/ }\n\n@media (min-width: 80em) {\n  .o-btn--click-area-6--from-xl {\n    height: 6rem;\n    line-height: 6rem;\n    min-width: 6rem;\n    text-align: center; } }\n\n@media (max-width: 37.49em) {\n  .o-btn--full--until-s {\n    display: block;\n    max-width: 100%;\n    width: 100%; } }\n\n.o-btn-is-disabled {\n  cursor: default;\n  opacity: 0.4; }\n\n/* ---\nsection: Buttons\ntitle: Disabled Button\norder: 521\n---\n\n**.o-btn-is-disabled**\n\nA disabled button.\n\nStyle is defined in the `$jigsass-btn-disabled` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn-is-disabled'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn-is-disabled  demo-crimson'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn-is-disabled  demo-teal' />\n</div>\n```\n*/\n/* ---\nsection: Card\ntitle: Introduction\norder: -10\n---\n\nAn unopinionated, configurable implementation of the card UI pattern.\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-objects-card\n```\n\n#### Usage\nFirst, you need to import JigSass Card:\n\n```scss\n@import 'path/to/jigsass-objects-card/scss/index';\n```\n\nAnd optionally [reconfigure](#configuration) the defaults to your liking.\n\nLike all other JigSass modules, JigSass Card does not automatically generate any CSS when imported.\nIn order to use its classes, you would have to first explicitly indicate your intention to use\nthem by enabling their generation in the associated [configurations map](#css-output), Leaving\nus only with CSS we need:\n\nAll JigSass Card classes are responsive-enabled, using\n[JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/) and the breakpoints defined in the\n[$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)\nvariable.\n\nBased on enabled selectors in the [configuration map](#css-output), responsive modifiers are\ngenerated according to the following logic:\n\n```scss\n.o-card[--modifier][-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n\n```scss\n$jigsass-card-conf: (\n  no-breakpoint: (\n    raised: true,\n  ),\n  until-medium: (\n    raised: true,\n  ),\n  from-large-when-landscape: (\n    raised: true,\n  ),\n)\n```\n\nwill generate the following classes:\n  - `.o-card--raised`, which is not limited to any media-query.\n  - `.o-card--raised--until-medium`, which will be in effect at\n    `(max-width: 37.49em)` and will override styles in the default class\n    until that point.\n  - `.o-card--raised--from-large-when-landscape`, which will go into effect at\n    `(min-width: 64em) and (orientation: landscape)` and will override styles\n    in the default class under these  conditions.\n\n**License:** MIT\n*/\n/* ---\nsection: Card\ntitle: CSS Outpout\norder: -2\n---\nBy default, JigSass Card does not generate any CSS output when imported into\na stylesheet. CSS output must be enabled on a per-selector basis, inside the\ndedicated configuration maps:\n\n#### Card and modifier classes\n```scss\n$jigsass-card-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\ncard and card modifier classes.\n\n\n**Default:** `()`\n\n\n**Example:**\n```scss\n$jigsass-card-conf: (\n  no-breakpoint: (\n    no-modifier: true,  // Enables generation of the `.o-card`\n                        // class outside of any media query.\n    foo: true,          // Enables generation of the `.o-card--foo`\n                        // modifier class outside of any media query.\n  ),\n  from-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-card--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n    foo: true,          // Enables generation of the `.o-card--foo--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  until-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-card--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  foo: true,          // Enables generation of the `.o-card--foo--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  when-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-card--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n    foo: true,          // Enables generation of the `.o-card--foo--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n\n#### Card Items\n```scss\n$jigsass-card-items-config: (item-name: ());\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\ncard item classes.\n\n\n**Default:** `()`\n\n\n**Example:**\n```scss\n$jigsass-card-items-conf: (\n  section: (\n    no-breakpoint: (\n      // Enables generation of the `.o-card__section`\n      // class outside of any media query.\n      no-modifier: true,\n\n      // Enables generation of the `.o-card__section--foo`\n      // modifier class outside of any media query.\n      foo: true,\n    ),\n    from-<bp-name>: (\n      // Enables generation of the `.o-card__section--from-<bp-name>`\n      // class inside a min-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      no-modifier: true,\n\n      // Enables generation of the `.o-card__section--foo--from-<bp-name>`\n      // class inside a min-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      foo: true,\n    ),\n    until-<bp-name>: (\n      // Enables generation of the `.o-card__section--until-<bp-name>`\n      // class inside a max-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      no-modifier: true,\n\n      // Enables generation of the `.o-card__section--foo--until-<bp-name>`\n      // class inside a max-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      foo: true,\n    ),\n    when-<bp-name>: (\n      // Enables generation of the `.o-card__section--when-<bp-name>`\n      // class inside a misc media query\n      // defined ins `$jigsass-breakpoints.features`.\n      no-modifier: true,\n\n      // Enables generation of the `.o-card__section--foo--when-<bp-name>`\n      // class inside a misc media query\n      // defined ins `$jigsass-breakpoints.features`.\n      foo: true,\n    ),\n    from-<bp-name>-until-<bp-name>: (...);\n    from-<bp-name>-when-<bp-name>: (...);\n    until-<bp-name>-when-<bp-name>: (...);\n    from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n  ),\n);\n```\n\n\n#### Context classes\n```scss\n$jigsass-card-context-config: (item-name: ());\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\ncard context classes.\n\n\n**Default:** `()`\n\n\n**Example:**\n```scss\n$jigsass-card-context-conf: (\n  has-card: (\n    no-breakpoint: (\n      // Enables generation of the `.o-has-card`\n      // class outside of any media query.\n      no-modifier: true,\n\n      // Enables generation of the `.o-has-card--foo`\n      // modifier class outside of any media query.\n      foo: true,\n    ),\n    from-<bp-name>: (\n      // Enables generation of the `.o-has-card--from-<bp-name>`\n      // class inside a min-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      no-modifier: true,\n\n      // Enables generation of the `.o-has-card--foo--from-<bp-name>`\n      // class inside a min-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      foo: true,\n    ),\n    until-<bp-name>: (\n      // Enables generation of the `.o-has-card--until-<bp-name>`\n      // class inside a max-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      no-modifier: true,\n\n      // Enables generation of the `.o-has-card--foo--until-<bp-name>`\n      // class inside a max-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      foo: true,\n    ),\n    when-<bp-name>: (\n      // Enables generation of the `.o-has-card--when-<bp-name>`\n      // class inside a misc media query\n      // defined ins `$jigsass-breakpoints.features`.\n      no-modifier: true,\n\n      // Enables generation of the `.o-has-card--foo--when-<bp-name>`\n      // class inside a misc media query\n      // defined ins `$jigsass-breakpoints.features`.\n      foo: true,\n    ),\n    from-<bp-name>-until-<bp-name>: (...);\n    from-<bp-name>-when-<bp-name>: (...);\n    until-<bp-name>-when-<bp-name>: (...);\n    from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n  ),\n);\n```\n*/\n/* ---\nsection: Card\ntitle: Configuration\norder: -1\n---\nBecause of the many style variations cards could have throughout different designs\nand implementations, JigSass Card allows for complete modification through\nconfiguration variables.\n\n\n#### Container Background\n```scss\n$jigsass-has-card-bgc\n```\n\n**Type:** `Color`\n\nThe background color of elements containing cards.\n\nUsed for setting the background color of\nthe `.o-has-card` contextual modifier.\n\n**Default:** `#ebebeb`\n\n\n#### Card Style\n```scss\n$jigsass-card-defaults\n```\n\n**Type:** `Map`\n\nCSS declarations to apply to cards.\n\nSince cards are such a prevalent UI pattern, yet with so\nmany variations, subtle or otherwise, JigSass Cards come with defaults that\nare configurable to the last value and declaration. Don't like our defaults?\nMake your own.\n\n**Default:** `(background-color: #f0f0f0)`\n\n\n#### Card Modifiers\n```scss\n$jigsass-card-modifiers\n```\n\n **Type:** `Map`\n\nCSS declarations for card modifiers, with each modifier being a nested map at the first level.\n\n**Default:**\n```scss\n(\n  raised: (\n    box-shadow: 0 4px 5px -2px rgba(#333, .5),\n    position: relative,\n    transition: .15s transform linear,\n\n    '&:after': (\n      bottom: 0,\n      box-shadow: 0 8px 6px -3px rgba(#333, .3),\n      content: '',\n      left: 0,\n      opacity: 0,\n      position: absolute,\n      right: 0,\n      top: 0,\n      transition: .15s opacity linear,\n      z-index: -1,\n    ),\n\n    '&:hover': (\n      transform: translatey(-4px) scale(1.01),\n\n      '&:after': (\n        opacity: 1,\n      ),\n    ),\n  )\n)\n```\n\n\n#### Section Border\n\n```scss\n$jigsass-card-section-border\n```\n\n**Type:** List\n\nBorder style of a card section\n\nA list in the format of `length` `style` `color`\n\n**Default:** 1px solid #ccc !default;\n*/\n.o-card {\n  background-color: #fff;\n  /* ---\n  section: Card\n  title: Base\n  order: 1\n  ---\n  An individual piece of distinguished UI\n\n  Cards can be used to set apart pieces of content in an effective\n  yet geeric manner. It can contain an Image, headline, texts and\n  interactive elements.\n\n  ```example:html\n  <article class='o-card u-mb--4 u-pb--4 u-as--4'>\n    <figure>\n      <img src='https://unsplash.it/600/300?random' />\n    </figure>\n\n    <header class='u-ph--4'>\n      <h3>This is a card</h3>\n      <p><strong>A piece of distinguished UI</strong></p>\n    </header>\n\n    <p class='u-ph--4'>\n      Cards can be used to set apart pieces of content in an effective\n      yet geeric manner. It can contain an Image, headline, texts and\n      interactive elements.\n    </p>\n  </article>\n  ```\n  */ }\n\n.o-card--has-hidden-btn {\n  overflow: hidden;\n  position: relative;\n  /* ---\n  section: Card\n  title: Modifier: has-hidden-btn\n  order: 103\n  ---\n  ```example:html\n  <article class='[ o-card o-card--has-hidden-btn ]  u-mb--4 u-pb--4 u-as--4'>\n    <figure>\n      <img src='https://unsplash.it/600/300?random' />\n    </figure>\n\n    <header class='u-ph--4'>\n      <h3>This is a card with a `has-hidden-btn` modifier</h3>\n      <p><strong>A piece of distinguished UI</strong></p>\n    </header>\n\n    <p class='u-ph--4'>\n      Cards can be used to set apart pieces of contenet in an effective\n      yet geeric manner. It can contain an Image, headline, texts and\n      interactive elements.\n    </p>\n  </article>\n  ```\n  */ }\n  .o-card--has-hidden-btn > .o-card__body {\n    background-color: #fff;\n    position: relative;\n    transform: translateY(0);\n    transition: all 0.25s cubic-bezier(0.55, 0, 0.1, 1);\n    z-index: 1; }\n  .o-card--has-hidden-btn > .o-card__hidden-btn {\n    bottom: -5rem;\n    position: absolute;\n    transform: translateY(0);\n    transition: all 0.25s cubic-bezier(0.55, 0, 0.1, 1);\n    width: 100%;\n    z-index: 1; }\n  .o-card--has-hidden-btn:focus > .o-card__body, .o-card--has-hidden-btn:focus > .o-card__hidden-btn, .o-card--has-hidden-btn:hover > .o-card__body, .o-card--has-hidden-btn:hover > .o-card__hidden-btn, .o-card--has-hidden-btn:active > .o-card__body, .o-card--has-hidden-btn:active > .o-card__hidden-btn {\n    transform: translateY(-5rem); }\n\n.o-card--underlined {\n  /* ---\n  section: Card\n  title: Modifier: underlined\n  order: 104\n  ---\n  ```example:html\n  <article class='[ o-card o-card--underlined ]  u-mb--4 u-pb--4 u-as--4'>\n    <figure>\n      <img src='https://unsplash.it/600/300?random' />\n    </figure>\n\n    <header class='u-ph--4'>\n      <h3>This is a card with a `underlined` modifier</h3>\n      <p><strong>A piece of distinguished UI</strong></p>\n    </header>\n\n    <p class='u-ph--4'>\n      Cards can be used to set apart pieces of contenet in an effective\n      yet geeric manner. It can contain an Image, headline, texts and\n      interactive elements.\n    </p>\n  </article>\n  ```\n  */ }\n  .o-card--underlined > .o-card__footer:after {\n    background-color: currentColor;\n    bottom: 0;\n    content: \"\";\n    height: 0.1666666667rem;\n    position: absolute;\n    right: 0;\n    transform: scale3d(0, 1, 1);\n    transform-origin: 50% 0%;\n    transition: all 0.15s 0.25s cubic-bezier(0.55, 0, 0.1, 1);\n    width: 100%; }\n  .o-card--underlined:hover > .o-card__footer:after {\n    transform: scale3d(1, 1, 1);\n    transition-timing-function: cubic-bezier(0, 0, 0.2, 0); }\n\n.o-has-card {\n  background-color: #e2e6e7;\n  /* ---\n  section: Card\n  title: Context: has-card\n  order: 305\n  ---\n  Sets the background color of elements containing cards to the one defined in\n  [$jigsass-has-card-bgc](#container-background).\n\n  Automatically generated when generating any card related class (`o-card`, a modifier or an item).\n  */ }\n\n/* ---\nsection: Grid\ntitle: Configuration\norder: 1\n---\nJigSass Grid can be tweaked using the following built-in configuration variables.\nTo override the default values, set your own _before_ importing JigSass Grid.\n\n\n#### Grid container class name\n```scss\n$jigsass-grid-class\n```\n**Type:** `String`\n\nThe class-name (sans the leading `.`) used for grid containers.\n\n**Default:** `o-string`\n\n\n#### Grid item class name\n```scss\n$jigsass-grid-item-class\n```\n**Type:** `String`\n\nThe class-name (sans the leading `.`) used for grid items\n\n**Default:** $jigsass-grid-class + `__item`\n\n\n#### Flexbox\n```scss\n$jigsass-grid-flexbox\n```\n**Type:** `Boolean`\n\nDetermines if the grid system be based on flexbox.\n\n**Default:** `true`\n\n\n#### Flexbox fallback\n```scss\n$jigsass-grid-flexbox-fallback\n```\n**Type:** `Boolean` or `String`<br />\nDetermines if to include a flexbox fallback and the qualifier class\nto use if so (e.g, `.no-flexwrap` when using Modernizr defaults)\n\nSet to `false` to disable fallback altogether, and to a class-name\n(sans the leading `.`) used as the qualifier class if fallback is\ndesirable.\n\n**Default:** `no-flexwrap`\n\n\n#### Default gutter width\n```scss\n$jigsass-grid-default-gutter\n```\n\n**Type:** `Number`\n\nA unitless number. The default number of base rhythm units\n(as defined in [$jigsass-sizes.rhythm-unit](https://txhawks.github.io/jigsass-tools-typography/#variable-_jigsass-default-sizes)) to use as the default gutter between grid items.\n\n**Default:** `4`\n\n\n#### Gutter width Modifiers\n```scss\n$jigsass-grid-gutter-modifiers\n```\n\n**Type:** `Map`\n\nSpecifies gutter-width modifiers that will be available.\n\nA map where each key is a modifier's name and its value is a\nunitless number, denoting the number of rhythm units to serve\nas gutter-width for each modifier.\n\n**Default:** `(gutter-0: 0, gutter-1: 1, gutter-2: 2, gutter-8: 8)`\n\n\n#### Grid columns\n```scss\n$jigsass-grid-cols\n```\n\n**Type:** `List`\n\nA list of unitless numbers, specifying a number of columns a grid item can be split into.\nSetting `$jigsass-grid-cols` to `7 12`would mean that grid items could be `x-of-7` or\n`x-of-12` in width.\n\n**Default:** `12`\n\n\n#### Gutter rules\n\nSpecifies names and styles of gutter rule modifiers\n\nA map where each key is a modifier's name, and its value is\nthe border style to apply to that modifier's column rule.\n\n**Type:** `Map`\n\n**Default:** `(gutter-rule-1: 1px solid #ccc)`\n*/\n/* ---\nsection: Grid\ntitle: CSS Outpout\norder: -2\n---\nBy default, JigSass Grid does not generate any CSS output when imported into\na stylesheet. CSS output must be enabled on a per-selector basis, inside the\ndedicated configuration maps:\n\n#### Grid container and grid container modifier classes\n```scss\n$jigsass-grid-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of grid container and\ngrid container modifier classes.\n\n\n**Default:**\n```scss\n$jigsass-grid-conf: (\n  no-breakpoint: (\n    no-modifier: false,\n\n    // Horizontal alignment modifiers\n    start: false,\n    center: false,\n    end: false,\n    rev: false,\n\n    // Vertical alignment modifiers\n    equal-height: false,\n    top: false,\n    middle: false,\n    bottom: false,\n\n    // Horizontal distribution modifiers\n    space-between: false,\n    space-around: false,\n\n    // gutter-width modifiers\n    // Enable gutter modifiers defined in\n    // `$jigsass-grid-gutter-modifiers` here.\n  ),\n);\n```\n\n\n**Example:**\n```scss\n$jigsass-grid-conf: (\n  no-breakpoint: (\n    no-modifier: true,  // Enables generation of the `.o-grid`\n                        // class outside of any media query.\n    end: true,          // Enables generation of the `.o-grid--end`\n                        // modifier class outside of any media query.\n  ),\n  from-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-grid--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n    end: true,          // Enables generation of the `.o-grid--end--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  until-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-grid--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n   end: true,           // Enables generation of the `.o-grid--end--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  when-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-grid--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n    end: true,          // Enables generation of the `.o-grid--end--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n\n\n#### Grid item and grid item modifier classes\n```scss\n$jigsass-grid-item-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\ngrid item and grid item modifier classes\n\n\n**Default:**\n```scss\n$jigsass-grid-item-conf: (\n  no-breakpoint: (\n    no-modifier: false,\n    col: false,\n    fixed: false,\n    center: false,\n\n    // Enable item specific gutter width modifiers\n    // defined in `$jigsass-grid-gutter-modifiers`\n    // here.\n\n    // Enable item width modifiers\n    // based on ratios defined in\n    // `$jigsass-grid-cols`here.\n\n    // Enable item offset modifiers\n    // based on ratios defined in\n    // `$jigsass-grid-cols`here.\n\n    // Enable gutter rule modifiers defined\n    // in `$jigsass-grid-gutter-rules` here\n  ),\n);\n```\n\n\n**Example:**\n```scss\n$jigsass-grid-item-conf: (\n  no-breakpoint: (\n    no-modifier: true,  // Enables generation of the `.o-grid__item`\n                        // class outside of any media query.\n    col: true,          // Enables generation of the `.o-grid__item--col`\n                        // modifier class outside of any media query.\n  ),\n  from-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-grid__item--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n    col: true,          // Enables generation of the `.o-grid__item--col--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  until-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-grid__item--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n    col: true,          // Enables generation of the `.o-grid__item--col--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  when-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-grid__item--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n    col: true,          // Enables generation of the `.o-grid__item--col--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n*/\n/* ---\nsection: Grid\ntitle: Introduction\norder: -10\n---\n\n**[GitHub Page](https://www.github.com/TxHawks/jigsass-objects-grid)**\n\nJigSass Grid is a responsive Sass (SCSS) flexbox-based grid\nsystem, with a `display: inline-block` fallback backed in, where possible.\n\nIt is intended to be both flexible (pun intended) and easy to use. As part of the\nJigSass ecosystem, JigSass Grid integrates with its other modules, relying on some of them\nfor consistent [resposive breakpoints](https://github.com/txhawks/jigsass-tools-mq/),\n[sizing](https://github.com/txhawks/jigsass-tools-typography/) and more.\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-objects-grid\n```\n\n\n#### Features\n  - [Responsive](#responsive).\n  - [Infinitly nestable](#nested-grids).\n  - [Fixed fluid](#fixed-fluid) layouts.\n  - Column wrapping.\n  - [Equal height columns](#o-grid--equal-height).\n  - Automatic distribution of widths.\n  - Custom horizontal alignments of items <br />\n    ([start](#o-grid-start),\n    [center](#o-grid-center),\n    [end](#o-grid-end),\n    [reversed](#o-grid-rev),\n    [space-between](#o-grid-space-between),\n    [space-around](#o-grid-space-around)).\n  - Custom vertical alignments of items ([top](#o-grid-top),\n    [middle](#o-grid-middle),\n    [bottom](#o-grid-bottom)).\n  - Fluid by default.\n  - Configureable grid-wide gutters widths.\n  - Overrideable gutter widths on a per-item basis.\n  - Built in gutter rules support.\n  - Offsets.\n\n\n#### Availeable classes\nFor classes and modifiers (including responsive modifiers) to be generated in CSS\noutput, they must be explicitly enabled in the [configuration maps](#css-output)\n(see [usage](#usage) below).\n\n\n** Grid containers:**<br />\n`.o-grid`\n  - `--start`, `--center`, `--end`, `--rev`, `--space-between`, `--space-around`\n  - `--top`, `--middle`, `--bottom`, `--equal-height`\n  - `--gutter-X` (gutter width, See [here](#gutter-width-modifiers)).\n\n\n** Grid items:**<br />\n`.o-grid__item`\n  - `--col`, `--center, `\n  - `--top`, `--middle`, `--bottom`, `--equal-height`\n  - `--gutter-X` (gutter width, See [here](#gutter-width-modifiers)).\n  - `--gutter-gutter-rule-X` (See [here](#gutter-rules)).\n  - `--X-of-Y`\n  - `--offset-X-of-Y`\n\n\n#### Usage\n\nFirst, import JigSass Grid into your main stylesheet:\n\n```scss\n@import 'path/to/jigsass-objects-grid/scss/index'\n```\n\nAnd optionally [reconfigure](#configuration) the defaults to you liking.\n\nTo create a grid context, simply attach the o-grid class to an element, any element,\nwhich will serve as a grid container. You can now add grid items to it (with a class of\no-grid__item). Grid containers' only legitimate children are grid items, and those, in turen,\nmay only reside within a grid container.\n\nLike all other JigSass modules, JigSass Grid does not automatically generate any\nCSS output when imported. In order to use its classes, you would have to first\nexplicitly indicate your intention to use them by enabling their generation in\nthe associated [configurations map](#css-output), Leaving us only with CSS we need.\n\nAll JigSass Grid classes are responsive-enabled, using\n[JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/) and the breakpoints defined in the\n[$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)\nvariable.\n\nBased on enabled selectors in the [configuration map](#css-output), responsive modifiers are\ngenerated according to the following logic:\n\n```scss\n.o-grid[--modifier][-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]]\n.o-grid__item[--modifier][-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n\n```scss\n$jigsass-grid-conf: (\n  no-breakpoint: (\n    no-modifier: true,\n    end: true,\n  ),\n  until-medium: (\n    end: true,\n  ),\n  from-large-when-landscape: (\n    end: true,\n  ),\n)\n```\n\nwill generate the following classes:\n  - `.o-grid`, which is not limited to any media-query.\n  - `.o-grid--end`, which is not limited to any media-query.\n  - `.o-grid--end--until-medium`, which will be in effect at\n    `(max-width: 37.49em)` and will override styles in the default class\n    until that point.\n  - `.o-grid--end--from-large-when-landscape`, which will go into effect at\n    `(min-width: 64em) and (orientation: landscape)` and will override styles\n    in the default class under these  conditions.\n*/\n/* ---\nsection: Grid\ntitle: Responsive\norder: 10\n---\nResize your window to see how item stacking changes.\n\n```example:html\n<!-- In HTML -->\n<section class=\"o-grid\">\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--11-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--1-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--2-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--10-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--9-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--3-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--4-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--8-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--7-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--5-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--6-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--6-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--5-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--7-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--8-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--4-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--3-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--9-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--10-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--2-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--1-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--11-of-12--from-medium\"><div class=\"fpo\"></div></div>\n      <div class=\"o-grid__item o-grid__item--12-of-12 \"><div class=\"fpo\"></div></div>\n</section>\n```\n\nAll JigSass Grid elements (grid cotainer, grid item and all their modifiers) are completly\nresponsive using [JigSass MQ](https://www.github.com/txhawks/jigsass-tools-mq) and the\nbreakpoints defined in [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)`.\n\nBased on the arguments passed to the `jigsass-grid` and `jigsass-grid-item` mixins, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.o-grid--modifier-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]\n.o-grid__item--modifier-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in\n`$jigsass-breakpoints` as `600px`, `1024px` and `(orientation: landscape)` respectively,\n```scss\n@include jigsass-grid-item(1-of-12);\n```\nwill generate the `.item-class--1-of12` class, which is the default, and is not\nlimitted to any media-query.\n\n```scss\n@include jigsass-grid-item(1-of-12, $until: medium);\n```\nwill generate the `.item-class--1-of12--until-medium` class, which will go into effect\nat `(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-grid-item(1-of-12, $from: large, $misc: landscape);\n```\nwill generate the `.item-class--1-of12--from-large-when-landscape` class, which will\ngo into effect at `(min-width: 64em) and (orientation: landscape)` and will override styles in\nthe default class from that point on.\n\nRegardless of how many times a class is included, or where, it will only be generated once, where\n`jigsass-objects-grid` was imported, leaving us with a css file as small as possible,\nand a predictable cascade.\n*/\n/* ---\nsection: Grid\ntitle: Nested Grids\norder: 11\n---\nGrid elements can be endlessly nested inside eachother\n\n\n#### Usage example:\n```example:html\n<!-- In HTML -->\n<section class='o-grid o-grid--equal-height'>\n  <div class='o-grid__item o-grid__item--8-of-12'>\n    <div class='fpo'>\n      <div class='o-grid o-grid--equal-height'>\n        <div class='o-grid__item o-grid__item--6-of-12'>\n          <div class='fpo fpo--b'></div>\n        </div>\n        <div class='o-grid__item o-grid__item--6-of-12'>\n          <div class='fpo fpo--b'>\n            <div class='o-grid'>\n              <div class='o-grid__item o-grid__item--6-of-12'>\n                <div class='fpo fpo--c'></div>\n              </div>\n              <div class='o-grid__item o-grid__item--6-of-12'>\n                <div class='fpo fpo--c'></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class='o-grid__item o-grid__item--4-of-12'>\n    <div class='fpo'></div>\n  </div>\n</section>\n```\n*/\n/* ---\nsection: Grid\ntitle: Fixed-fluid\norder: 12\n---\nThe grid system allows for a mixture of fixed and fluid units, but requires some\ncustomisation. For example, a fixed-width sidebar can be created by using item\nmodifiers and two utility clases:\n\n```example:html\n<!-- In HTML -->\n<section class='o-grid o-grid--equal-height'>\n  <div class='o-grid__item'><div class='fpo'></div></div>\n\n  <div class='o-grid__item'><div class='fpo'></div></div>\n\n  <aside class='\n    o-grid__item\n    o-grid__item--fixed\n    o-grid__item--col\n    u-mw--200px u-fxb--200px\n  '>\n    <div class='fpo'>This sidebar is fixed at 200px width</div>\n\n    <div class='fpo'>\n      <div class='o-grid'>\n        <div class='o-grid__item o-grid__item--6-of-12'>\n          <div class='fpo fpo--b'></div>\n        </div>\n        <div class='o-grid__item o-grid__item--6-of-12'>\n          <div class='fpo fpo--b'></div>\n        </div>\n      </div>\n    </div>\n\n    <div class='fpo'></div>\n  </aside>\n</section>\n```\n*/\n.o-grid {\n  margin-right: -4rem;\n  list-style: none;\n  margin-left: -2rem;\n  margin-right: -2rem;\n  display: flex;\n  flex: 0 1 auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  /* ---\n  section: Grid Container\n  title: o-grid\n  order: 0\n  ---\n  Any HTML element (including lists) may serve as a grid container,\n  however, grid containers may contain no other elements other than\n  grid items.\n\n  A grid element has negative margins the length of half a gutter at its left and right,\n  to compensate of the first and last column's gutter and ease calculations.\n\n  Unless `o-grid__item`s are given a width modifier class,\n  all grid items will be equally distributed along a single row.\n\n\n  #### Related variables:\n\n  - `$jigsass-grid-class` (default: `grid`): Determines the class-name used\n    for grid containers.\n  - `$jigsass-grid-flexbox` (default: `true`): Determines whether to use flexbox or not.\n  - `$jigsass-grid-flexbox-fallback` (default: `no-flaxwrap`): Determines if to include a\n    flexbox fallback and the qualifier class to use if so (e.g, `.no-flexwrap`\n    when using Modernizr defaults). Set to `false` to disable fallback altogether,\n    and to a class-name (sans the leading `.`) used as the qualifier class if fallback\n    is desirable.\n  - `$jigsass-grid-default-gutter` (default: `4`): A unitless number used to determine number of\n    base rhythm units (as defined in `$jigsass-sizes.rhythm-unit`) to use as gutter length\n    between grid items in the default grid container.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='o-grid'>\n    <!-- first row -->\n    <div class='o-grid__item o-grid__item--4-of-12'>\n      <div class='fpo'> 1 of 3 </div>\n    </div>\n    <div class='o-grid__item o-grid__item--4-of-12'>\n      <div class='fpo'> 1 of 3 </div>\n    </div>\n    <div class='o-grid__item o-grid__item--4-of-12'>\n      <div class='fpo'> 1 of 3 </div>\n    </div>\n    <!-- second row -->\n    <div class='o-grid__item'>\n      <div class='fpo'>auto-sized</div>\n    </div>\n    <div class='o-grid__item'>\n      <div class='fpo'>auto-sized</div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .o-grid {\n    display: flexbox;\n    flex: 0 1 auto;\n    flex-direction: row;\n    flex-wrap: wrap;\n    list-style: none;\n    margin-left: -2rem;\n    margin-right: -2rem;\n  }\n\n  // Targets direct descendants using the universal selector\n  // instead of actual grid items in order to keep\n  // specificity low. This works, as only grid items are\n  // legitimate children of grid containers.\n  .o-grid > * {\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n\n  // When `$jigsass-grid-flexbox-fallback` is set to `no-flexwrap`\n  .no-flexwrap .o-grid {\n    display: block;\n    letter-spacing: -.043em;\n    text-align: (left|right);\n  }\n\n  // When `$jigsass-grid-flexbox` is disabled\n  .o-grid {\n    display: block;\n    letter-spacing: -.043em;\n    list-style: none;\n    margin-left: -2rem;\n    margin-right: -2rem;\n    text-align: (left|right);\n  }\n  .o-grid > * {\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n\n  ```\n  */ }\n  .o-grid > * {\n    padding-left: 2rem;\n    padding-right: 2rem;\n    vertical-align: top; }\n  .no-flexwrap .o-grid {\n    text-align: right;\n    display: block;\n    letter-spacing: -0.31em;\n    text-rendering: optimizespeed; }\n    opera:-o-prefocus .no-flexwrap .o-grid, .no-flexwrap .o-grid {\n      word-spacing: -.043em; }\n\n.o-grid--rev {\n  flex-direction: row-reverse;\n  /* ---\n  section: Grid Container\n  title: o-grid--rev\n  order: 4\n  ---\n  Reversed grid.\n\n  items 1, 2, 3, 4 in the markup will be visually displayed in 4, 3, 2, 1 order.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='o-grid o-grid--rev'>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 1</div>\n    </div>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 2</div>\n    </div>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 3</div>\n    </div>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 4</div>\n    </div>\n  </section>\n  ```\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .o-grid--rev {\n    flex-direction: row-reverse;\n  }\n\n  // When `$jigsass-grid-flexbox-fallback` is set to `no-flexwrap`\n  .no-flexwrap .o-grid--start {\n    direction: (rtl|ltr);\n  }\n\n  .no-flexwrap .o-grid--rev > .o-grid__item {\n    direction: (rtl|ltr); // Opposite of the above\n  }\n\n  // When `$jigsass-grid-flexbox` is disabled\n  .o-grid--start {\n    direction: (rtl|ltr);\n  }\n\n  .o-grid--rev > .o-grid__item {\n    direction: (rtl|ltr); // Opposite of the above\n  }\n\n  ```\n  */ }\n  .no-flexwrap .o-grid--rev {\n    direction: ltr; }\n    .no-flexwrap .o-grid--rev > .o-grid__item {\n      direction: rtl; }\n\n.o-grid--gutter-0 {\n  margin-left: 0rem;\n  margin-right: 0rem;\n  /* ---\n  section: Grid Container\n  title: o-grid--gutter-0\n  order: 11\n  ---\n  Modify the width of column gutters to that of 0 base rhythm units\n\n\n  #### Related Variables:\n  - `$jigsass-grid-gutter-modifiers`: Specifies the gutter-width modifiers that can be generated.\n    A map of modifiers, where each key is a modifier's name and value is a unitless numbers\n    denoting amounts of rhythm units to serve as gutter-width in each modifier.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='o-grid o-grid--gutter-0'>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 1</div>\n    </div>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 2</div>\n    </div>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 3</div>\n    </div>\n  </section>\n  ```\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .o-grid--gutter-0 {\n    margin-left: 0rem;\n    margin-right: 0rem;\n  }\n\n  // Targets direct descendants using the universal selector\n  // instead of o-grid__item in order to keep\n  // specificity low. This works, as only grid items are\n  // legitimate children of o-grid.\n  .o-grid--gutter-0 > * {\n    padding-left: 0rem;\n    padding-right: 0rem;\n  }\n  ```\n  */ }\n  .o-grid--gutter-0 > * {\n    padding-left: 0rem;\n    padding-right: 0rem; }\n\n.o-grid--gutter-1 {\n  margin-left: -0.5rem;\n  margin-right: -0.5rem;\n  /* ---\n  section: Grid Container\n  title: o-grid--gutter-1\n  order: 11\n  ---\n  Modify the width of column gutters to that of 1 base rhythm units\n\n\n  #### Related Variables:\n  - `$jigsass-grid-gutter-modifiers`: Specifies the gutter-width modifiers that can be generated.\n    A map of modifiers, where each key is a modifier's name and value is a unitless numbers\n    denoting amounts of rhythm units to serve as gutter-width in each modifier.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='o-grid o-grid--gutter-1'>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 1</div>\n    </div>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 2</div>\n    </div>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 3</div>\n    </div>\n  </section>\n  ```\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .o-grid--gutter-1 {\n    margin-left: -0.5rem;\n    margin-right: -0.5rem;\n  }\n\n  // Targets direct descendants using the universal selector\n  // instead of o-grid__item in order to keep\n  // specificity low. This works, as only grid items are\n  // legitimate children of o-grid.\n  .o-grid--gutter-1 > * {\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n  }\n  ```\n  */ }\n  .o-grid--gutter-1 > * {\n    padding-left: 0.5rem;\n    padding-right: 0.5rem; }\n\n.o-grid--gutter-2 {\n  margin-left: -1rem;\n  margin-right: -1rem;\n  /* ---\n  section: Grid Container\n  title: o-grid--gutter-2\n  order: 11\n  ---\n  Modify the width of column gutters to that of 2 base rhythm units\n\n\n  #### Related Variables:\n  - `$jigsass-grid-gutter-modifiers`: Specifies the gutter-width modifiers that can be generated.\n    A map of modifiers, where each key is a modifier's name and value is a unitless numbers\n    denoting amounts of rhythm units to serve as gutter-width in each modifier.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='o-grid o-grid--gutter-2'>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 1</div>\n    </div>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 2</div>\n    </div>\n    <div class='o-grid__item'>\n      <div class='fpo'>Item 3</div>\n    </div>\n  </section>\n  ```\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .o-grid--gutter-2 {\n    margin-left: -1rem;\n    margin-right: -1rem;\n  }\n\n  // Targets direct descendants using the universal selector\n  // instead of o-grid__item in order to keep\n  // specificity low. This works, as only grid items are\n  // legitimate children of o-grid.\n  .o-grid--gutter-2 > * {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n  ```\n  */ }\n  .o-grid--gutter-2 > * {\n    padding-left: 1rem;\n    padding-right: 1rem; }\n\n.o-grid__item {\n  box-sizing: border-box;\n  list-style: none;\n  flex-basis: auto;\n  flex-grow: 1;\n  flex-shrink: 1;\n  /* ---\n  section: Grid Item\n  title: o-grid__item\n  order: 1\n  ---\n  Any HTML element (including lists) may serve as a grid item, however, grid items\n  must only be placed as the *direct* descendants of a grid container.\n\n  Each grid item has padding the length of half a single gutter at its left and right edges,\n  creating a gap between the different items. The gutter's width can de modified at the\n  grid level, or overriden on a per-grid item basis.\n\n  Grid items are set to `box-sizing: border-box`, so that the padding used to form gutters\n  is taken into consideration when setting item widths.\n\n  Unless grid items are given a width modifier class, and as long as flexbox is available,\n  all grid items will be equally distributed along a single row.\n\n\n  #### Flexbox fallback caveat:\n  When flexbox isn't available, JigSass Grid can be set to fall back to using a\n  `display: inline-block` based grid system. Using a `display: inline-block` based\n  gird system has many advantages over traditional, `float` based grid systems,\n  but also one notable drawback: whitespace between grid items, which are inline elements,\n  is rendered, and can break your grid.\n  JigSass Grid tries to take care of that for you by setting the gird container's\n  `letter-spacing` to `-0.31em`, which eliminates white-space between grid cells\n  with all non-monospaced fonts. When using a monospace font-face as your base font,\n  set the grid container's font-family to `sans-serif` and re-apply your default\n  font to grid items.\n\n  The safest option is to comment out the whitespace between grid items:\n\n  ```html\n  <section class='o-grid'>\n    <div class='o-grid__item'>\n      ...\n    </div><!--\n    --><div class='o-grid__item'>\n      ...\n    </div>\n  </section>\n  ```\n\n\n  #### Related variables:\n  - `$jigsass-grid-item-class` (default: `o-grid__item`): Determines the\n    class-name used for grid containers.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='o-grid'>\n    <!-- First row -->\n    <div class='o-grid__item'>\n      <div class='fpo'>auto-sized</div>\n    </div>\n    <div class='o-grid__item'>\n      <div class='fpo'>auto-sized</div>\n    </div>\n    <!-- Second row -->\n    <div class='o-grid__item o-grid__item--12-of-12'>\n      <div class='fpo'> 1 of 1 </div>\n    </div>\n    <!-- Third row -->\n    <div class='o-grid__item o-grid__item--4-of-12'>\n      <div class='fpo'> 1 of 3 </div>\n    </div>\n    <div class='o-grid__item o-grid__item--4-of-12'>\n      <div class='fpo'> 1 of 3 </div>\n    </div>\n    <div class='o-grid__item o-grid__item--4-of-12'>\n      <div class='fpo'> 1 of 3 </div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .o-grid__item {\n    box-sizing: border-box;\n    list-style: none;\n    flex-basis: auto;\n    flex-grow: 1;\n    flex-shrink: 1;\n  }\n\n  // When `$jigsass-grid-flexbox-fallback` is set to `no-flexwrap`\n  .no-flexwrap .o-grid {\n    display: inline-block;\n    letter-spacing: normal;\n    text-align: (left|right);\n    text-rendering: auto;\n    word-spacing: normal;\n  }\n\n  // When `$jigsass-grid-flexbox` is disabled\n  .o-grid {\n    box-sizing: border-box;\n    display: inline-block;\n    letter-spacing: normal;\n    list-style: none;\n    text-align: (left|right);\n    text-rendering: auto;\n    word-spacing: normal;\n  }\n\n  ```\n  */ }\n  .no-flexwrap .o-grid__item {\n    text-align: right;\n    display: inline-block;\n    letter-spacing: normal;\n    text-rendering: auto;\n    word-spacing: normal; }\n\n.o-grid__item--col {\n  flex-direction: column;\n  /* ---\n  section: Grid Item\n  title: o-grid__item--col\n  order: 2\n  ---\n  Sets a grid item's main flex axis to vertical. Often useful when used in conjuction with the\n  `--equal-height` grid container modifier.\n\n  Only available when flexbox is supported.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='o-grid o-grid--equal-height'>\n    <!-- first row -->\n    <div class='o-grid__item\n                o-grid__item--col\n                o-grid__item--6-of-12'\n    >\n      <div class='fpo'></div>\n      <div class='fpo'>These boxes are in a column</div>\n      <div class='fpo'></div>\n    </div>\n    <div class='o-grid__item o-grid__item--6-of-12'>\n      <div class='fpo'></div>\n      <div class='fpo'></div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .o-grid__item--col {\n    flex-direction: row;\n  }\n\n  ```\n  */ }\n\n.o-grid__item--2-of-12 {\n  flex-basis: 16.6666666667%;\n  max-width: 16.6666666667%; }\n  .no-flexwrap .o-grid__item--2-of-12 {\n    width: 16.6666666667%; }\n\n.o-grid__item--3-of-12 {\n  flex-basis: 25%;\n  max-width: 25%; }\n  .no-flexwrap .o-grid__item--3-of-12 {\n    width: 25%; }\n\n.o-grid__item--4-of-12 {\n  flex-basis: 33.3333333333%;\n  max-width: 33.3333333333%; }\n  .no-flexwrap .o-grid__item--4-of-12 {\n    width: 33.3333333333%; }\n\n.o-grid__item--6-of-12 {\n  flex-basis: 50%;\n  max-width: 50%; }\n  .no-flexwrap .o-grid__item--6-of-12 {\n    width: 50%; }\n\n.o-grid__item--9-of-12 {\n  flex-basis: 75%;\n  max-width: 75%; }\n  .no-flexwrap .o-grid__item--9-of-12 {\n    width: 75%; }\n\n.o-grid__item--12-of-12 {\n  flex-basis: 100%;\n  max-width: 100%; }\n  .no-flexwrap .o-grid__item--12-of-12 {\n    width: 100%; }\n\n/* ---\n  section: Grid Item\n  title: o-grid__item--X-of-12\n  order: 6\n  ---\n  Set the width of a grid item as a ratio of `X` parts of 12 columns.\n\n  All JigSass Grid elements (grid cotainer, grid item and all their modifiers) are completly\n  responsive using [JigSass MQ](https://www.github.com/txhawks/jigsass-tools-mq) and the\n  breakpoints defined in [$jigsass-breakpoints]\n  (https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)`, though the most\n  common use case is with item-width modifiers.\n\n  Based on the arguments passed to the `jigsass-grid-item` mixin, responsive modifiers are\n  generated according to the following logic:\n  .o-grid__item--modifier-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]\n\n  So, assuming the `medium`, `large` and `landscape` breakpoints are defined in\n  `$jigsass-breakpoints` as `600px`, `1024px` and `(orientation: landscape)` respectively,\n  `@include jigsass-grid-item(1-of-12)` will generate the `.item-class--1-of12`\n  class, which is the default, and is not limitted to any media-query.\n\n  `@include jigsass-grid-item(1-of-12, $until: medium)` will generate the\n  `.item-class--1-of12--until-medium` class, which will go into effect at\n  `(max-width: 37.49em)` and will override styles in the default class until that point.\n\n  `@include jigsass-grid-item(1-of-12, $from: large, $misc: landscape)` will\n  generate the `.item-class--1-of12--from-large-when-landscape` class, which will\n  go into effect at `(min-width: 64em) and (orientation: landscape)` and will override styles in\n  the default class from that point on.\n\n  Regardless of how many times a class is included, or where, it will only be generated once, where\n  `jigsass-objects-grid` was imported, leaving us with a css file as small as possible,\n  and a predictable cascade.\n\n\n  #### Related Variables:\n  - `$jigsass-grid-cols` (defalut: `12`): Holds a list of unitless numbers, each number is an\n    available column count. E.g., if `$jigsass-grid-cols: 10 12;`, you will be able to create\n    `x`-of-10 and `x`-of-12 classes.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class=\"o-grid\">\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--11-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--1-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--2-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--10-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--9-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--3-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--4-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--8-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--7-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--5-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--6-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--6-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--5-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--7-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--8-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--4-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--3-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--9-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--10-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--2-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--1-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 o-grid__item--11-of-12--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--12-of-12 \"><div class=\"fpo\"></div></div>\n    </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .o-grid__item--6-of-12 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  // When `$jigsass-grid-flexbox-fallback` is set to `no-flexwrap`\n  .no-flexwrap .o-grid__item--6-of-12 {\n    width: 50%;\n  }\n\n  // When `$jigsass-grid-flexbox` is disabled\n  .o-grid__item--6-of-12 {\n    width: 50%;\n  }\n  ```\n  */\n/* ---\n  section: Grid Item\n  title: o-grid__item--X-of-10\n  order: 6\n  ---\n  Set the width of a grid item as a ratio of `X` parts of 10 columns.\n\n  All JigSass Grid elements (grid cotainer, grid item and all their modifiers) are completly\n  responsive using [JigSass MQ](https://www.github.com/txhawks/jigsass-tools-mq) and the\n  breakpoints defined in [$jigsass-breakpoints]\n  (https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)`, though the most\n  common use case is with item-width modifiers.\n\n  Based on the arguments passed to the `jigsass-grid-item` mixin, responsive modifiers are\n  generated according to the following logic:\n  .o-grid__item--modifier-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]\n\n  So, assuming the `medium`, `large` and `landscape` breakpoints are defined in\n  `$jigsass-breakpoints` as `600px`, `1024px` and `(orientation: landscape)` respectively,\n  `@include jigsass-grid-item(1-of-10)` will generate the `.item-class--1-of10`\n  class, which is the default, and is not limitted to any media-query.\n\n  `@include jigsass-grid-item(1-of-10, $until: medium)` will generate the\n  `.item-class--1-of10--until-medium` class, which will go into effect at\n  `(max-width: 37.49em)` and will override styles in the default class until that point.\n\n  `@include jigsass-grid-item(1-of-10, $from: large, $misc: landscape)` will\n  generate the `.item-class--1-of10--from-large-when-landscape` class, which will\n  go into effect at `(min-width: 64em) and (orientation: landscape)` and will override styles in\n  the default class from that point on.\n\n  Regardless of how many times a class is included, or where, it will only be generated once, where\n  `jigsass-objects-grid` was imported, leaving us with a css file as small as possible,\n  and a predictable cascade.\n\n\n  #### Related Variables:\n  - `$jigsass-grid-cols` (defalut: `12`): Holds a list of unitless numbers, each number is an\n    available column count. E.g., if `$jigsass-grid-cols: 10 12;`, you will be able to create\n    `x`-of-10 and `x`-of-12 classes.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class=\"o-grid\">\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--9-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--1-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--2-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--8-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--7-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--3-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--4-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--6-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--5-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--5-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--6-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--4-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--3-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--7-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--8-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--2-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--1-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 o-grid__item--9-of-10--from-medium\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-10 \"><div class=\"fpo\"></div></div>\n    </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .o-grid__item--5-of-10 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  // When `$jigsass-grid-flexbox-fallback` is set to `no-flexwrap`\n  .no-flexwrap .o-grid__item--5-of-10 {\n    width: 50%;\n  }\n\n  // When `$jigsass-grid-flexbox` is disabled\n  .o-grid__item--5-of-10 {\n    width: 50%;\n  }\n  ```\n  */\n/* ---\n  section: Grid Item\n  title: o-grid__item--offset-X-of-12\n  order: 7\n  ---\n  Offset a grid item by X of 12 columns.\n\n\n  #### Related Variables:\n  - `$jigsass-grid-cols` (defalut: `12`): Holds a list of unitless numbers, each number is an\n    available column count. E.g., if `$jigsass-grid-cols: 10 12;`, you will be able to create\n    `x`-of-10 and `x`-of-12 classes.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class=\"o-grid\">\n          <div class=\"o-grid__item o-grid__item--1-of-12 o-grid__item--offset-11-of-12\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--2-of-12 o-grid__item--offset-10-of-12\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--3-of-12 o-grid__item--offset-9-of-12\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--4-of-12 o-grid__item--offset-8-of-12\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--5-of-12 o-grid__item--offset-7-of-12\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--6-of-12 o-grid__item--offset-6-of-12\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--7-of-12 o-grid__item--offset-5-of-12\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--8-of-12 o-grid__item--offset-4-of-12\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--9-of-12 o-grid__item--offset-3-of-12\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--10-of-12 o-grid__item--offset-2-of-12\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--11-of-12 o-grid__item--offset-1-of-12\"><div class=\"fpo\"></div></div>\n    </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is disabled\n  .o-grid__item--6-of-12 {\n    margin-(left|right): 50%;\n  }\n  ```\n  */\n/* ---\n  section: Grid Item\n  title: o-grid__item--offset-X-of-10\n  order: 7\n  ---\n  Offset a grid item by X of 10 columns.\n\n\n  #### Related Variables:\n  - `$jigsass-grid-cols` (defalut: `12`): Holds a list of unitless numbers, each number is an\n    available column count. E.g., if `$jigsass-grid-cols: 10 12;`, you will be able to create\n    `x`-of-10 and `x`-of-12 classes.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class=\"o-grid\">\n          <div class=\"o-grid__item o-grid__item--1-of-10 o-grid__item--offset-9-of-10\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--2-of-10 o-grid__item--offset-8-of-10\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--3-of-10 o-grid__item--offset-7-of-10\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--4-of-10 o-grid__item--offset-6-of-10\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--5-of-10 o-grid__item--offset-5-of-10\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--6-of-10 o-grid__item--offset-4-of-10\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--7-of-10 o-grid__item--offset-3-of-10\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--8-of-10 o-grid__item--offset-2-of-10\"><div class=\"fpo\"></div></div>\n          <div class=\"o-grid__item o-grid__item--9-of-10 o-grid__item--offset-1-of-10\"><div class=\"fpo\"></div></div>\n    </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is disabled\n  .o-grid__item--5-of-10 {\n    margin-(left|right): 50%;\n  }\n  ```\n  */\n@media (min-width: 37.5em) {\n  .o-grid__item--2-of-12--from-s {\n    flex-basis: 16.6666666667%;\n    max-width: 16.6666666667%; }\n    .no-flexwrap .o-grid__item--2-of-12--from-s {\n      width: 16.6666666667%; }\n  .o-grid__item--3-of-12--from-s {\n    flex-basis: 25%;\n    max-width: 25%; }\n    .no-flexwrap .o-grid__item--3-of-12--from-s {\n      width: 25%; }\n  .o-grid__item--4-of-12--from-s {\n    flex-basis: 33.3333333333%;\n    max-width: 33.3333333333%; }\n    .no-flexwrap .o-grid__item--4-of-12--from-s {\n      width: 33.3333333333%; }\n  .o-grid__item--6-of-12--from-s {\n    flex-basis: 50%;\n    max-width: 50%; }\n    .no-flexwrap .o-grid__item--6-of-12--from-s {\n      width: 50%; }\n  .o-grid__item--8-of-12--from-s {\n    flex-basis: 66.6666666667%;\n    max-width: 66.6666666667%; }\n    .no-flexwrap .o-grid__item--8-of-12--from-s {\n      width: 66.6666666667%; }\n  .o-grid__item--12-of-12--from-s {\n    flex-basis: 100%;\n    max-width: 100%; }\n    .no-flexwrap .o-grid__item--12-of-12--from-s {\n      width: 100%; } }\n\n@media (min-width: 48em) {\n  .o-grid__item--2-of-12--from-m {\n    flex-basis: 16.6666666667%;\n    max-width: 16.6666666667%; }\n    .no-flexwrap .o-grid__item--2-of-12--from-m {\n      width: 16.6666666667%; }\n  .o-grid__item--3-of-12--from-m {\n    flex-basis: 25%;\n    max-width: 25%; }\n    .no-flexwrap .o-grid__item--3-of-12--from-m {\n      width: 25%; }\n  .o-grid__item--6-of-12--from-m {\n    flex-basis: 50%;\n    max-width: 50%; }\n    .no-flexwrap .o-grid__item--6-of-12--from-m {\n      width: 50%; }\n  .o-grid__item--10-of-12--from-m {\n    flex-basis: 83.3333333333%;\n    max-width: 83.3333333333%; }\n    .no-flexwrap .o-grid__item--10-of-12--from-m {\n      width: 83.3333333333%; } }\n\n@media (min-width: 64em) {\n  .o-grid__item--2-of-12--from-l {\n    flex-basis: 16.6666666667%;\n    max-width: 16.6666666667%; }\n    .no-flexwrap .o-grid__item--2-of-12--from-l {\n      width: 16.6666666667%; }\n  .o-grid__item--3-of-12--from-l {\n    flex-basis: 25%;\n    max-width: 25%; }\n    .no-flexwrap .o-grid__item--3-of-12--from-l {\n      width: 25%; }\n  .o-grid__item--6-of-12--from-l {\n    flex-basis: 50%;\n    max-width: 50%; }\n    .no-flexwrap .o-grid__item--6-of-12--from-l {\n      width: 50%; }\n  .o-grid__item--9-of-12--from-l {\n    flex-basis: 75%;\n    max-width: 75%; }\n    .no-flexwrap .o-grid__item--9-of-12--from-l {\n      width: 75%; }\n  .o-grid__item--4-of-10--from-l {\n    flex-basis: 40%;\n    max-width: 40%; }\n    .no-flexwrap .o-grid__item--4-of-10--from-l {\n      width: 40%; }\n  .o-grid__item--6-of-10--from-l {\n    flex-basis: 60%;\n    max-width: 60%; }\n    .no-flexwrap .o-grid__item--6-of-10--from-l {\n      width: 60%; } }\n\n@media (min-width: 80em) {\n  .o-grid__item--1-of-12--from-xl {\n    flex-basis: 8.3333333333%;\n    max-width: 8.3333333333%; }\n    .no-flexwrap .o-grid__item--1-of-12--from-xl {\n      width: 8.3333333333%; }\n  .o-grid__item--2-of-12--from-xl {\n    flex-basis: 16.6666666667%;\n    max-width: 16.6666666667%; }\n    .no-flexwrap .o-grid__item--2-of-12--from-xl {\n      width: 16.6666666667%; }\n  .o-grid__item--4-of-12--from-xl {\n    flex-basis: 33.3333333333%;\n    max-width: 33.3333333333%; }\n    .no-flexwrap .o-grid__item--4-of-12--from-xl {\n      width: 33.3333333333%; }\n  .o-grid__item--8-of-12--from-xl {\n    flex-basis: 66.6666666667%;\n    max-width: 66.6666666667%; }\n    .no-flexwrap .o-grid__item--8-of-12--from-xl {\n      width: 66.6666666667%; }\n  .o-grid__item--11-of-12--from-xl {\n    flex-basis: 91.6666666667%;\n    max-width: 91.6666666667%; }\n    .no-flexwrap .o-grid__item--11-of-12--from-xl {\n      width: 91.6666666667%; }\n  .o-grid__item--1-of-10--from-xl {\n    flex-basis: 10%;\n    max-width: 10%; }\n    .no-flexwrap .o-grid__item--1-of-10--from-xl {\n      width: 10%; } }\n\n@media (min-width: 37.5em) and (max-width: 63.99em) {\n  .o-grid__item--3-of-12--from-s-until-l {\n    flex-basis: 25%;\n    max-width: 25%; }\n    .no-flexwrap .o-grid__item--3-of-12--from-s-until-l {\n      width: 25%; }\n  .o-grid__item--4-of-12--from-s-until-l {\n    flex-basis: 33.3333333333%;\n    max-width: 33.3333333333%; }\n    .no-flexwrap .o-grid__item--4-of-12--from-s-until-l {\n      width: 33.3333333333%; }\n  .o-grid__item--6-of-12--from-s-until-l {\n    flex-basis: 50%;\n    max-width: 50%; }\n    .no-flexwrap .o-grid__item--6-of-12--from-s-until-l {\n      width: 50%; }\n  .o-grid__item--8-of-12--from-s-until-l {\n    flex-basis: 66.6666666667%;\n    max-width: 66.6666666667%; }\n    .no-flexwrap .o-grid__item--8-of-12--from-s-until-l {\n      width: 66.6666666667%; } }\n\n/* ---\nsection: Lists\ntitle: Introduction\norder: -10\n---\n\nJigSass Lists is a collection of unopinionated, unstyled, ui abstractions for displaying lists.\n\n**[GitHub page](https://txhawks.github.io/jigsass-objects-lists)**\n\n\n## Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-objects-lists\n```\n\n\n## Usage\n\nFirst, you need to import JigSass Lists into your stylesheet:\n```scss\n@import 'path/to/jigsass-objects-lists/scss/index';\n```\n\nAnd optionally [reconfigure](https://tinyurl.com/lists-config) the defaults to your liking.\n\nJigSass Lists provides the following list abstractions:\n\n  - [Bare list](https://txhawks.github.io/jigsass-objects-lists/#bare-lists): Unstyled lists.\n  - [Inline list](https://txhawks.github.io/jigsass-objects-lists/#inline-lists): Inlined list items,\n    placed side by side instead of stacked one on top of another\n  - [Delimited inline list](https://txhawks.github.io/jigsass-objects-lists/#delimited-inline-lists):\n    An inline list, in which items are delimited by a configurable string.\n  - Split inline list: Push the [first](https://tinyurl.com/split-first) or\n    [last](https://tinyurl.com/split-last) list item away from the other items, to the edge of the container\n  - [Divided list](https://txhawks.github.io/jigsass-objects-lists/#divided-lists):\n    A vertically stacked list of items divided by horizontal rules.\n\nLike all other JigSass modules, JigSass List does not automatically generate any CSS when imported.\nIn order to use its classes, you would have to first explicitly indicate your intention to use\nthem by enabling their generation in the associated [configurations map](#css-output), Leaving\nus only with CSS we need.\n\nAll JigSass List classes are responsive using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in\n`[$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)`.\n\nBased enabled selectors in the [configuration map](#css-output), responsive modifiers are\ngenerated according to the following logic:\n\n```scss\n.o-<list-abstraction>--modifier[-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n$jigsass-list-inline-conf: (\n  no-breakpoint: (\n    split-first: true,\n  ),\n  until-medium: (\n    split-first: true,\n  ),\n  from-large-when-landscape: (\n    split-first: true,\n  ),\n)\n```\n\nwill generate the following classes:\n  - `.o-inline-list--split-first`, which is not limited to any media-query.\n  - `.o-inline-list--split-first--until-medium`, which will be in effect at\n    `(max-width: 37.49em)` and will override styles in the default class\n    until that point.\n  - `.o-inline-list--split-first--from-large-when-landscape`, which will go\n    into effect at `(min-width: 64em) and (orientation: landscape)` and\n    will override styles in the default class under these  conditions.\n\n**License:** MIT\n*/\n/* ---\nsection: Lists\ntitle: CSS Outpout\norder: -2\n---\nBy default, JigSass Lists does not generate any CSS output when imported into\na stylesheet. CSS output must be enabled on a per-selector basis, inside the\ndedicated configuration maps:\n\n#### Bare list and modifier classes\n```scss\n$jigsass-list-bare-conf\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nbare-list and bare-list modifier classes.\n\n\n**Default:**\n```scss\n$jigsass-list-bare-conf: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n\n\n**Example:**\n```scss\n$jigsass-list-bare-conf: (\n  no-breakpoint: (\n    no-modifier: true,  // Enables generation of the `.o-bare-list`\n                        // class outside of any media query.\n  ),\n  from-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-bare-list--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  until-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-bare-list--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  when-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-bare-list--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n\n\n#### Inline list and modifier classes\n```scss\n$jigsass-list-inline-conf\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\ninline-list and inline-list modifier classes.\n\n\n**Default:**\n```scss\n$jigsass-list-inline-conf: (\n  no-breakpoint: (\n    no-modifier: false,\n    delimited: false,\n    split-first: false,\n    split-last: false,\n    spread: false,\n  ),\n);\n```\n\n\n**Example:**\n```scss\n$jigsass-list-inline-conf: (\n  no-breakpoint: (\n    // Enables generation of the `.o-inline-list`\n    // class outside of any media query.\n    no-modifier: true,\n    // Enables generation of the `.o-inline-list--spread`\n    // modifier class outside of any media query.\n    spread: true,\n  ),\n  from-<bp-name>: (\n    // Enables generation of the `.o-inline-list--from-<bp-name>`\n    // class inside a min-width media query\n    // defined ins `$jigsass-breakpoints.length`.\n    no-modifier: true,\n    // Enables generation of the `.o-inline-list--spread--from-<bp-name>`\n    // class inside a min-width media query\n    // defined ins `$jigsass-breakpoints.length`.\n    spread: true,\n  ),\n  until-<bp-name>: (\n    // Enables generation of the `.o-inline-list--until-<bp-name>`\n    // class inside a max-width media query\n    // defined ins `$jigsass-breakpoints.length`.\n    no-modifier: true,\n    // Enables generation of the `.o-inline-list--spread--until-<bp-name>`\n    // class inside a max-width media query\n    // defined ins `$jigsass-breakpoints.length`.\n    spread: true,\n  ),\n  when-<bp-name>: (\n    // Enables generation of the `.o-inline-list--when-<bp-name>`\n    // class inside a misc media query\n    // defined ins `$jigsass-breakpoints.features`.\n    no-modifier: true,\n    // Enables generation of the `.o-inline-list--spread--when-<bp-name>`\n    // class inside a misc media query\n    // defined ins `$jigsass-breakpoints.features`.\n    spread: true,\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n\n\n#### Divided list and modifier classes\n```scss\n$jigsass-list-divided-conf\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\ndivided-list and divided-list modifier classes.\n\n\n**Default:**\n```scss\n$jigsass-list-divided-conf: (\n  no-breakpoint: (\n    no-modifier: false,\n\n    // Enable border modifiers here,\n    // based on the ones defined in\n    // `$jigsass-lists-divided-border-modifiers`\n  ),\n);\n```\n\n\n**Example:**\n```scss\n$jigsass-list-divided-conf: (\n  no-breakpoint: (\n    // Enables generation of the `.o-divided-list`\n    // class outside of any media query.\n    no-modifier: true,\n\n    // Enables generation of the `.o-divided-list--foo`\n    // modifier class outside of any media query.\n    foo: true,\n  ),\n  from-<bp-name>: (\n    // Enables generation of the `.o-divided-list--from-<bp-name>`\n    // class inside a min-width media query\n    // defined ins `$jigsass-breakpoints.length`.\n    no-modifier: true,\n\n    // Enables generation of the `.o-divided-list--foo--from-<bp-name>`\n    // class inside a min-width media query\n    // defined ins `$jigsass-breakpoints.length`.\n    foo: true,\n  ),\n  until-<bp-name>: (\n    // Enables generation of the `.o-divided-list--until-<bp-name>`\n    // class inside a max-width media query\n    // defined ins `$jigsass-breakpoints.length`.\n    no-modifier: true,\n\n    // Enables generation of the `.o-divided-list--foo--until-<bp-name>`\n    // class inside a max-width media query\n    // defined ins `$jigsass-breakpoints.length`.\n    foo: true,\n  ),\n  when-<bp-name>: (\n    // Enables generation of the `.o-divided-list--when-<bp-name>`\n    // class inside a misc media query\n    // defined ins `$jigsass-breakpoints.features`.\n    no-modifier: true,\n\n    // Enables generation of the `.o-divided-list--foo--when-<bp-name>`\n    // class inside a misc media query\n    // defined ins `$jigsass-breakpoints.features`.\n    foo: true,\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n*/\n/* ---\nsection: Lists\ntitle: Configuration\norder: -1\n---\nJigSass Lists allows for some modification through tweaking configuration variable.\nTo override the default values, predefine them to your own needs _before_ importing JigSass Lists.\n\n\n#### Flexbox support\n```scss\n$jigsass-lists-flexbox\n```\n**Type:** `Boolean`\n\nDetermines if flexbox should be enables, where relevant\n\n**Default:** `true`\n\n\n#### Flexbox Fallback\n```scss\n$jigsass-lists-flexbox-fallback\n```\n**Type:** `Boolean` or `String`\n\nDetermines if flexbox fallback should be included and the qualifier class\nto use if so (e.g, `.no-flexbox` when using Modernizr defaults)\n\nSet to `false` to disable fallback altogether, and to a class-name\n(sans the leading `.`) used as the qualifier class if fallback is\ndesirable.\n\n**Default:** `'no-flexbox'`\n\n\n#### Inline Delimiter\n```scss\n$jigsass-lists-inline-delimiter\n```\n**Type:** `String`\n\nThe default delimiter to use with `.o-inline-list--delimited`.\n\n**Default:** `'\\2002|\\2002'`\n\n\n#### Divided lists border defaults\n```scss\n$jigsass-lists-divided-border\n```\n**Type:** `List`\n\nSets the default border and padding above `devided-list`s' list items.\n\nA list of arguments for the `[jigsass-border-top](http://tinyurl.com/js-border-top)`\nmixin in the following order:\n\n  - A number in pixels. The border's width.\n  - A unitless number. The number of\n    [typographic lines](https://txhawks.github.io/jigsass-tools-typography/) occupied\n    by the border and padding added together.\n  - A string. The border's style (e.g., `solid`, `dotted`, etc.).\n\n**Default:** `1px 2 solid`\n\n\n#### Divided lists border modifiers\n```scss\n$jigsass-lists-divided-border-modifiers\n```\n**Type:** `Map`\n\nBorder modifiers for divided lists.\n\nA map where each key is a modifier's name and its value is a\nlist in the same format used in `[$jigsass-lists-divided-border](#jigsass-lists-divided-border)`.\n\n**Default:** `(tight: 1px 2 solid, loose: 1px 4 solid, x-loose: 1px 8 solid)`\n*/\n.o-bare-list {\n  list-style: none;\n  /* ---\n  section: Lists\n  title: Bare List\n  order: 1\n  ---\n  Strip lists of their default decoration (bullets, numbers, etc.) and spacing.\n\n\n  #### Usage example:\n  ```example:html\n  <ul class='bare-list'>\n    <li>item 1</li>\n    <li>item 2</li>\n    <li>item 3</li>\n    <li>item 4</li>\n    <li>item 5</li>\n  </ul>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .o-bare-list {\n    list-style: none;\n  }\n  ```\n  */ }\n\n.o-inline-list {\n  /* ---\n  section: Lists\n  title: Inline List\n  order: 2\n  ---\n  Place list (or fuax-list) elements side by side instead of stacked one on top of each other.\n\n\n  #### Usage example:\n  ```example:html\n  <ul class='inline-list'>\n    <li>item 1</li>\n    <li>item 2</li>\n    <li>item 3</li>\n    <li>item 4</li>\n    <li>item 5</li>\n  </ul>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .o-inline-list > * {\n    display: inline-block;\n  }\n  ```\n  */ }\n  .o-inline-list > * {\n    display: inline-block; }\n\n.o-inline-list--delimited {\n  letter-spacing: -0.31em;\n  text-rendering: optimizespeed;\n  /* ---\n  section: Lists\n  title: Delimited Inline List\n  order: 3\n  ---\n  Delimit an inline-list by the string defined in `$jigsass-lists-inline-delimiter`\n\n  Override the delimiter of individual list items by setting the `data-jigsass-delimiter`\n  property in the HTML to the overriding delimitier:\n\n\n  #### Related Variables\n    - `$jigsass-lists-inline-delimiter` (default: `'\\2002|\\2002'`):\n      The default delimiter to use with `.o-inline-list--delimited`.\n\n  #### Usage example\n  ```example:html\n  <ul class='[ o-inline-list o-inline-list--delimited ]'>\n    <li data-jigsass-delimiter=':&nbsp;'><strong>Default delimiters</strong></li>\n    <li>item 2</li>\n    <li>item 3</li>\n    <li>item 4</li>\n    <li>item 5</li>\n  </ul>\n\n  <ul class='[ o-inline-list o-inline-list--delimited ]'>\n    <li data-jigsass-delimiter=':&nbsp;'><strong>Custom delimiters</strong></li>\n    <li data-jigsass-delimiter=',&nbsp'>item 2</li>\n    <li data-jigsass-delimiter=',&nbsp'>item 3</li>\n    <li data-jigsass-delimiter=',&nbsp'>item 4</li>\n    <li data-jigsass-delimiter=',&nbsp'>item 5</li>\n  </ul>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .o-inline-list--delimited {\n    letter-spacing: -0.31em;\n    text-rendering: optimizespeed;\n  }\n\n  opera:-o-prefocus .o-inline-list--delimited,\n  .o-inline-list--delimited {\n    word-spacing: -.043em;\n  }\n\n    .o-inline-list--delimited > * {\n      display: inline-block;\n      letter-spacing: normal;\n      text-rendering: auto;\n      word-spacing: normal;\n    }\n\n    .o-inline-list--delimited > *:not(:last-child):after {\n      content: $jigsass-lists-inline-delimiter;\n    }\n\n    .o-inline-list--delimited > *[data-jigsass-delimiter]:not(:last-child):after {\n      content: attr(data-jigsass-delimiter);\n    }\n  ```\n  */ }\n  opera:-o-prefocus .o-inline-list--delimited, .o-inline-list--delimited {\n    word-spacing: -.043em; }\n  .o-inline-list--delimited > * {\n    letter-spacing: normal;\n    text-rendering: auto;\n    word-spacing: normal; }\n    .o-inline-list--delimited > *:not(:last-child):after {\n      content: \" | \"; }\n    .o-inline-list--delimited > *[data-jigsass-delimiter]:not(:last-child):after {\n      content: attr(data-jigsass-delimiter); }\n\n.o-inline-list--split-last {\n  display: flex;\n  /* ---\n  section: Lists\n  title: Split Inline List (last)\n  order: 5\n  ---\n  Push the last item in an inline list to the horizontal end of the container.\n\n\n  #### Related Variables\n    - '$jigsass-lists-flexbox' (default: true):\n      Determines if flexbox should be enables, where relevant\n    - '$jigsass-lists-flexbox-fallback' (default: 'no-flexbox'):\n      Determines if flexbox fallback should be included and the qualifier class\n      to use if so (e.g, `.no-flexbox` when using Modernizr defaults)\n      Set to `false` to disable fallback altogether, and to a class-name\n      (sans the leading `.`) used as the qualifier class if fallback is\n      desirable.\n\n\n  #### Usage example:\n  ```example:html\n  <ul class='u-maw--600px [ fpo fpo--b ]  [ o-inline-list o-inline-list--split-last ]'>\n    <li>item 1</li>\n    <li>item 2</li>\n    <li>item 3</li>\n    <li>item 4</li>\n    <li><strong>Pushed to the edge</strong></li>\n  </ul>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n\n  // When flexbox is enabled\n  .o-inline-list--split-last {\n    display: flex;\n  }\n\n    .o-inline-list--split-last > * {\n      flex-grow: 0;\n    }\n\n    .o-inline-list--split-last > *:last-child {\n      margin-(left|right): auto;\n    }\n\n  // When support for flexbox fallback is needed\n  .no-flexbox .o-inline-list--split-last {\n    display: table;\n  }\n\n    .no-flexbox .o-inline-list--split-last > * {\n      display: table-cell;\n      white-space: nowrap;\n    }\n\n    .no-flexbox .o-inline-list--split-last > *:last-child {\n      max-width: 100%;\n      text-align: (left|right);\n      width: 10000px;\n    }\n\n  // When flexbox is disabled\n  .o-inline-list--split-last {\n    display: table;\n  }\n\n    .o-inline-list--split-last > * {\n      display: table-cell;\n      white-space: nowrap;\n    }\n\n    .o-inline-list--split-last > *:last-child {\n      max-width: 100%;\n      text-align: (left|right);\n      width: 10000px;\n    }\n  ```\n  */ }\n  .o-inline-list--split-last > * {\n    flex-grow: 0; }\n    .o-inline-list--split-last > *:last-child {\n      margin-right: auto; }\n  .no-flexbox .o-inline-list--split-last {\n    display: table; }\n    .no-flexbox .o-inline-list--split-last > * {\n      display: table-cell;\n      white-space: nowrap; }\n      .no-flexbox .o-inline-list--split-last > *:last-child {\n        text-align: left;\n        max-width: 100%;\n        width: 10000px; }\n\n@media (min-width: 37.5em) {\n  .o-inline-list--from-s > * {\n    display: inline-block; } }\n\n@media (max-width: 37.49em) {\n  .o-inline-list--spread--until-s {\n    width: 100%;\n    display: flex;\n    flex-basis: 100%;\n    flex-wrap: nowrap;\n    /* ---\n  section: Lists\n  title: Spread out Inline List\n  order: 6\n  ---\n  // Equally spread list items to fill the full (fluid)\n  // width of their container\n  Push all items in an inline list past the first one to the horizontal end of the container.\n\n\n  #### Related Variables\n    - '$jigsass-lists-flexbox' (default: true):\n      Determines if flexbox should be enables, where relevant\n    - '$jigsass-lists-flexbox-fallback' (default: 'no-flexbox'):\n      Determines if flexbox fallback should be included and the qualifier class\n      to use if so (e.g, `.no-flexbox` when using Modernizr defaults)\n      Set to `false` to disable fallback altogether, and to a class-name\n      (sans the leading `.`) used as the qualifier class if fallback is\n      desirable.\n\n\n  #### Usage example:\n  ```example:html\n  <ul class='[ o-inline-list o-inline-list--spread ]'>\n    <li class='fpo'>item 1</li>\n    <li class='fpo'>item 2</li>\n    <li class='fpo'>\n      <strong>I'm much longer than the others, two lines I will take</strong>\n    </li>\n    <li class='fpo'>item 3</li>\n    <li class='fpo'>item 4</li>\n  </ul>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n\n  // When flexbox is enabled\n  .o-inline-list--spread {\n    display: flex;\n    flex-basis: 100%;\n    flex-wrap: nowrap;\n  }\n\n    .o-inline-list--spread > * {\n      flex-grow: 1;\n      flex-shrink: 1;\n    }\n\n  // When support for flexbox fallback is needed\n  .no-flexbox .o-inline-list--spread {\n    display: table;\n    table-layout: fixed;\n  }\n\n    .no-flexbox .o-inline-list--spread > * {\n      display: table-cell;\n    }\n\n  // When flexbox is disabled\n  .o-inline-list--spread {\n    display: table;\n    table-layout: fixed;\n  }\n\n    .o-inline-list--spread > * {\n      display: table-cell;\n    }\n  ```\n  */ }\n    .o-inline-list--spread--until-s > * {\n      flex-grow: 1;\n      flex-shrink: 1; }\n    .no-flexbox .o-inline-list--spread--until-s {\n      display: table;\n      table-layout: fixed; }\n      .no-flexbox .o-inline-list--spread--until-s > * {\n        display: table-cell; } }\n\n@media (max-width: 63.99em) {\n  .o-inline-list--until-l > * {\n    display: inline-block; }\n  .o-inline-list--delimited--until-l {\n    letter-spacing: -0.31em;\n    text-rendering: optimizespeed; }\n    opera:-o-prefocus .o-inline-list--delimited--until-l, .o-inline-list--delimited--until-l {\n      word-spacing: -.043em; }\n    .o-inline-list--delimited--until-l > * {\n      letter-spacing: normal;\n      text-rendering: auto;\n      word-spacing: normal; }\n      .o-inline-list--delimited--until-l > *:not(:last-child):after {\n        content: \" | \"; }\n      .o-inline-list--delimited--until-l > *[data-jigsass-delimiter]:not(:last-child):after {\n        content: attr(data-jigsass-delimiter); } }\n\n/* ---\nsection: Form Inputs\ntitle: CSS Output\norder: 1\n---\n```scss\n$o-input-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nicon classes and modifier classes.\n\n**Default:**\n```scss\n$o-input-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    raised: false,\n    large: false,\n    is-error: false,\n\n    select: false,\n    radio: false,\n    checkbox: false,\n  ),\n);\n```\n\n\n#### Elements\n```scss\n$o-input-item-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nform input classes and modifier classes.\n\n**Default:**\n$o-input-item-config: (\n  note: (\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n  label: (\n    no-breakpoint: (\n      no-modifier: true,\n    ),\n  ),\n);\n*/\n/* ---\nsection: Form Inputs\ntitle: Configuration\norder: 2\n---\n```scss\n$o-input--radio-color\n```\n\n\n**Type:** `Map`\n\nColor settings for radio button inputs.\n\n**Default:**\n```scss\n$o-input--radio-color: (\n  base: jigsass-color('border-neutral'),\n  focused: jigsass-color('border-accented' (jigsass-shade: 4)),\n  selected: jigsass-color:('primary'),\n);\n```\n\n\n```scss\n$o-input--checkbox-color\n```\n\n**Type:** `Map`\n\nColor settings for checkbox button inputs.\n\n**Default:**\n```scss\n$o-input--checkbox-color: (\n  base: jigsass-color('border-neutral'),\n  focused: jigsass-color('border-accented' (jigsass-shade: 4)),\n  selected: jigsass-color:('primary'),\n);\n```\n*/\n.o-input {\n  appearance: none;\n  background-color: #d9ecf0;\n  border: 0;\n  border-radius: 0;\n  color: #00829e;\n  transition: all 0.25s cubic-bezier(0.55, 0, 0.1, 1);\n  vertical-align: middle;\n  width: 100%;\n  padding: 0.5rem 1rem;\n  border-bottom: 0.1666666667rem dashed #0cc;\n  padding-bottom: 0.3333333333rem;\n  /* ---\nsection: Form Inputs\ntitle: Base\norder: 3\n\nA basic form input.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label>\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/ }\n  .o-input::-webkit-input-placeholder {\n    color: #00829e;\n    opacity: 1; }\n  .o-input::-moz-placeholder {\n    color: #00829e;\n    opacity: 1; }\n  .o-input:ms-input-placeholder {\n    color: #00829e;\n    opacity: 1; }\n  .o-input::placeholder {\n    color: #00829e;\n    opacity: 1; }\n  .o-input:focus {\n    background-color: #bfe0e7;\n    border-bottom-color: #00829e;\n    border-bottom-style: solid;\n    outline: none;\n    transtion-timing-function: cubic-bezier(0, 0, 0.2, 0); }\n    .o-input:focus::-webkit-input-placeholder {\n      color: #6c6c6c; }\n    .o-input:focus::-moz-placeholder {\n      color: #6c6c6c; }\n    .o-input:focus:ms-input-placeholder {\n      color: #6c6c6c; }\n    .o-input:focus::placeholder {\n      color: #6c6c6c; }\n\n.o-input--large {\n  padding: 1rem;\n  border-bottom: 0.1666666667rem dashed #0cc;\n  padding-bottom: 0.8333333333rem;\n  /* ---\nsection: Form Inputs\ntitle: Large inputs\norder: 3\n\nLarger (more spaced) form fields.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label>\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/ }\n\n.o-input--is-error {\n  /* ---\nsection: Form Inputs\ntitle: Invalid input\norder: 3\n\nIndicates an erronous form field.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label class=\"o-input--is-error\">\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/ }\n  .o-input--is-error *,\n  .o-input--is-error *:focus,\n  .o-input--is-error *, .o-input--is-error.o-input--select:after {\n    color: #ed143d; }\n  .o-input--is-error .o-input {\n    background-color: #fde8ec;\n    border-bottom-color: #ed143d;\n    border-bottom-style: solid; }\n    .o-input--is-error .o-input:focus {\n      background-color: #fbc4cf; }\n    .o-input--is-error .o-input::-webkit-input-placeholder, .o-input--is-error .o-input::-webkit-input-placeholder:focus {\n      color: #f14364 !important; }\n    .o-input--is-error .o-input::-moz-placeholder, .o-input--is-error .o-input::-moz-placeholder:focus {\n      color: #f14364 !important; }\n    .o-input--is-error .o-input:ms-input-placeholder, .o-input--is-error .o-input:ms-input-placeholder:focus {\n      color: #f14364 !important; }\n    .o-input--is-error .o-input::placeholder, .o-input--is-error .o-input::placeholder:focus {\n      color: #f14364 !important; }\n\n.o-input--is-disabled {\n  /* ---\nsection: Form Inputs\ntitle: disabled inputs\norder: 3\n\nIndicates a disabled form field.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label class=\"o-input--is-disabled\">\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/ }\n  .o-input--is-disabled *,\n  .o-input--is-disabled *:focus,\n  .o-input--is-disabled *, .o-input--is-disabled.o-input--select:after {\n    color: #cbcbcb;\n    cursor: default; }\n  .o-input--is-disabled .o-input {\n    background-color: #fafafa;\n    border-bottom-color: #cbcbcb; }\n    .o-input--is-disabled .o-input:focus {\n      background-color: #fafafa;\n      border-bottom-color: #cbcbcb; }\n    .o-input--is-disabled .o-input::-webkit-input-placeholder, .o-input--is-disabled .o-input::-webkit-input-placeholder:focus {\n      color: #d5d5d5 !important; }\n    .o-input--is-disabled .o-input::-moz-placeholder, .o-input--is-disabled .o-input::-moz-placeholder:focus {\n      color: #d5d5d5 !important; }\n    .o-input--is-disabled .o-input:ms-input-placeholder, .o-input--is-disabled .o-input:ms-input-placeholder:focus {\n      color: #d5d5d5 !important; }\n    .o-input--is-disabled .o-input::placeholder, .o-input--is-disabled .o-input::placeholder:focus {\n      color: #d5d5d5 !important; }\n\n.o-input--select {\n  position: relative;\n  /* ---\nsection: Form Inputs\ntitle: Custom select\norder: 3\n\nA styled select. Applied to the `select` element's container\n\n---\n#### Usage:\n```example:html\n<form>\n  <div class=\"o-input--select\">\n    <label>\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <select class=\"o-input\" aria-describesby=\"noteId\">\n        <option>select an option</option>\n        <option>Option 1</option>\n        <option>Option 2</option>\n        <option>Option 3</option>\n      </select>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/ }\n  .o-input--select:after {\n    left: 1rem;\n    border: 1rem solid transparent;\n    border-top-color: currentColor;\n    color: #00829e;\n    content: '';\n    display: inline-block;\n    height: 0;\n    pointer-events: none;\n    position: absolute;\n    top: 50%;\n    touch-events: none;\n    transform: translateY(-25%);\n    width: 0; }\n    @media screen and (min-width: 0\\0) {\n      .o-input--select:after {\n        display: none; } }\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      .o-input--select:after {\n        display: inline-block; } }\n  .o-input--select .o-input,\n  .o-input--select select {\n    padding-left: 2rem;\n    cursor: pointer; }\n    .o-input--select .o-input:-ms-expand,\n    .o-input--select select:-ms-expand {\n      display: none; }\n\n.o-input--radio {\n  padding-right: 1.2em;\n  cursor: pointer;\n  position: relative;\n  /* ---\nsection: Form Inputs\ntitle: Custom radio button\norder: 3\n\nA styled radio button. Applied to the radio-button element's\ncontainer (Usually a `label` element)\n\n---\n#### Usage:\n```example:html\n<form>\n    <label class=\"o-input--radio\" for=\"radio1\">\n      <input id=\"radio1\" class=\"u-is-visually-hidden\" type=\"radio\" name=\"radio1\">\n      <span class=\"o-input__label\">לייבל 1</span>\n      <span class=\"o-input--radio__fuax-check\" aria-hidden=\"true\"></span>\n    </label>\n    <label class=\"o-input--radio\" for=\"radio2\">\n      <input id=\"radio2\" class=\"u-is-visually-hidden\" type=\"radio\" name=\"radio2\">\n      <span class=\"o-input__label\">לייבל 2</span>\n      <span class=\"o-input--radio__fuax-check\" aria-hidden=\"true\"></span>\n    </label>\n</form>\n```\n*/ }\n  .o-input--radio,\n  .o-input--radio * {\n    -webkit-tap-highlight-color: transparent; }\n    .o-input--radio:focus,\n    .o-input--radio *:focus {\n      outline: none; }\n  .o-input--radio [type='radio']:focus ~ .o-input__label {\n    color: #2d2d2d; }\n  .o-input--radio__faux-check {\n    right: 0;\n    background-color: transparent;\n    border: 2px solid;\n    color: #cbcbcb;\n    content: '';\n    display: block;\n    height: 1em;\n    pointer-events: none;\n    top: 50%;\n    touch-events: none;\n    transform: translateY(-50%);\n    transition: all 0.15s cubic-bezier(0.55, 0, 0.1, 1);\n    width: 1em; }\n    .o-input--radio__faux-check, .o-input--radio__faux-check:before, .o-input--radio__faux-check:after {\n      border-radius: 50%;\n      content: '';\n      position: absolute; }\n    .o-input--radio__faux-check:after {\n      z-index: -1;\n      background-color: #00829e;\n      display: block;\n      height: 100%;\n      opacity: 0;\n      transform: scale(0);\n      transition: all 0.25s cubic-bezier(0.55, 0, 0.1, 1);\n      width: 100%; }\n    .o-input--radio__faux-check:before {\n      z-index: -1;\n      background-color: #cbcbcb;\n      display: block;\n      height: 500%;\n      left: 50%;\n      opacity: 0;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(0);\n      transition: all 0.25s cubic-bezier(0.55, 0, 0.1, 1);\n      width: 500%; }\n    :focus ~ .o-input--radio__faux-check {\n      border-width: 3px;\n      color: #99b3b9; }\n      :focus ~ .o-input--radio__faux-check:before {\n        animation: o-input--radio-in-out 0.5s linear; }\n    :checked ~ .o-input--radio__faux-check {\n      color: #00829e; }\n      :checked ~ .o-input--radio__faux-check:after {\n        opacity: 1;\n        transform: scale(0.6); }\n\n@keyframes o-input--radio-in-out {\n  0% {\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(0); }\n  50% {\n    opacity: .5; }\n  70% {\n    transform: translate(-50%, -50%) scale(1); }\n  100% {\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(0); } }\n\n.o-input--checkbox {\n  padding-right: 1.2em;\n  cursor: pointer;\n  position: relative;\n  /* ---\nsection: Form Inputs\ntitle: Custom checkbox button\norder: 3\n\nA styled checkbox button. Applied to the checkbox-button element's\ncontainer (Usually a `label` element)\n\n---\n#### Usage:\n```example:html\n<form>\n    <label class=\"o-input--checkbox\" for=\"checkbox1\">\n      <input id=\"checkbox1\" class=\"u-is-visually-hidden\" type=\"checkbox\" name=\"checkbox1\">\n      <span class=\"o-input__label\">לייבל 1</span>\n      <span class=\"o-input--checkbox__fuax-check\" aria-hidden=\"true\"></span>\n    </label>\n    <label class=\"o-input--checkbox\" for=\"checkbox2\">\n      <input id=\"checkbox2\" class=\"u-is-visually-hidden\" type=\"checkbox\" name=\"checkbox2\">\n      <span class=\"o-input__label\">לייבל 2</span>\n      <span class=\"o-input--checkbox__fuax-check\" aria-hidden=\"true\"></span>\n    </label>\n</form>\n```\n*/ }\n  .o-input--checkbox,\n  .o-input--checkbox * {\n    outline: none;\n    -webkit-tap-highlight-color: transparent; }\n    .o-input--checkbox:focus,\n    .o-input--checkbox *:focus {\n      outline: none; }\n  .o-input--checkbox [type='checkbox']:focus ~ .o-input__label {\n    color: #2d2d2d; }\n  .o-input--checkbox__faux-check {\n    right: 0;\n    background-color: transparent;\n    border: 2px solid;\n    color: #ababab;\n    height: 1em;\n    pointer-events: none;\n    top: 50%;\n    touch-events: none;\n    transform: translate(10%, -50%);\n    transition: all 0.25s cubic-bezier(0, 0, 0.2, 0);\n    width: 1em; }\n    .o-input--checkbox__faux-check, .o-input--checkbox__faux-check:before, .o-input--checkbox__faux-check:after {\n      content: '';\n      display: block;\n      position: absolute; }\n    .o-input--checkbox__faux-check:after {\n      border-style: solid;\n      border-left-style: none;\n      border-top-style: none;\n      border-width: 2px;\n      height: 110%;\n      transform: scale(0) translate(-30%, -15%) rotate(0);\n      transition: all 0.25s cubic-bezier(0, 0, 0.2, 0);\n      width: 50%; }\n    .o-input--checkbox__faux-check:before {\n      background-color: #cbcbcb;\n      border-radius: 50%;\n      height: 500%;\n      left: 50%;\n      opacity: 0;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(0);\n      width: 500%; }\n    :focus ~ .o-input--checkbox__faux-check {\n      color: #00829e; }\n      :focus ~ .o-input--checkbox__faux-check:before {\n        animation: o-input--radio-in-out 0.5s linear; }\n    :checked ~ .o-input--checkbox__faux-check {\n      background-color: #cbcbcb;\n      color: #cbcbcb; }\n      :checked ~ .o-input--checkbox__faux-check:after {\n        border-color: #00829e;\n        transform: scale(1) translate(-30%, -15%) rotate(45deg); }\n\n@keyframes o-input--radio-in-out {\n  0% {\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(0); }\n  50% {\n    opacity: .5; }\n  70% {\n    transform: translate(-50%, -50%) scale(1); }\n  100% {\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(0); } }\n\n.o-input--on-off {\n  /* ---\nsection: Form Inputs\ntitle: On-off toggle\norder: 3\n\nA button-like on-off toggle. Works with radio buttons and checkboxes alike.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div class=\"o-input--on-off\">\n    <input id=\"onOff\" class=\"o-input--on-off__input u-is-visually-hidden\" type=\"checkbox\" name=\"onOff\">\n    <label class=\"o-input--on-off__faux-btn [ o-btn o-btn--outline ]=\"onOff\">\n      הדלק אותי\n    </label>\n  </div>\n</form>\n```\n*/ }\n  .o-input--on-off,\n  .o-input--on-off * {\n    outline: none;\n    -webkit-tap-highlight-color: transparent; }\n    .o-input--on-off:focus,\n    .o-input--on-off *:focus {\n      outline: none; }\n  .o-input--on-off__input:focus ~ .o-input--on-off__faux-btn, .o-input--on-off__faux-btn:hover {\n    background-color: #bfe0e7;\n    color: #2d2d2d; }\n  .o-input--on-off__faux-btn {\n    background-color: #fff;\n    border-color: #00829e;\n    color: #00829e;\n    position: relative;\n    transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1); }\n    .o-input--on-off__input:checked ~ .o-input--on-off__faux-btn {\n      background-color: #00829e;\n      color: #fff;\n      transition: all 0.5s cubic-bezier(0, 0, 0.2, 0); }\n\n@media (min-width: 37.5em) {\n  .o-input--raised--from-s {\n    box-shadow: 0 2px 3px -2px rgba(51, 51, 51, 0.5);\n    /* ---\nsection: Form Inputs\ntitle: Raised inputs\norder: 3\n\nForm fields that are elevated above their containers (have box-shadow)\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label>\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input o-input--raised\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/ } }\n\n.o-input__note {\n  color: #6c6c6c;\n  /* ---\nsection: Form Inputs\ntitle: Input note\norder: 3\n\nA form input's annotation.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label>\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/ }\n  .o-input--is-error .o-input__note {\n    color: #ed143d; }\n  .o-input--is-disabled .o-input__note {\n    color: #b6b6b6; }\n\n.o-input__label {\n  color: #6c6c6c;\n  cursor: pointer;\n  /* ---\nsection: Form Inputs\ntitle: Input label\norder: 3\n\nA form input's annotation.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label>\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n\n<p>Or:</p>\n\n<form>\n  <div>\n    <label>\n      <span class=\"o-input__label u-d--b\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/ }\n  .o-input--is-error .o-input__label {\n    color: #ed143d; }\n  .o-input--is-disabled .o-input__label {\n    color: #b6b6b6;\n    cursor: default; }\n\n/* ---\nsection: Dialogs\ntitle: CSS Output\norder: 1\n---\n```scss\n$o-dialog-wrapper-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and modifier classes.\n\n**Default:**\n```scss\n$o-dialog-wrapper-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    anim: false,\n  ),\n);\n```\n\n```scss\n$o-dialog-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and modifier classes.\n\n**Default:**\n```scss\n$o-dialog-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n/* ---\nsection: Dialogs\ntitle: Configuration\norder: 2\n---\n\nBy default the `dialog` object only sets minimal styling, leaving dialog look\nand feel as flexible as possible. Additional style can be set though configuration maps.\n\n#### dialog-wrapper\n```scss\n$o-dialog-wrapper-styles\n```\n\nSets the non structural styles of the `o-dialog-wrapper` class.\n\n**Type**: `Map`\n\n**Default:**\n```scss\n$o-dialog-wrapper-styles: (\n  'background-color': jigsass-color('bg-dialog-overlay'),\n);\n```\n\n#### dialog\n```scss\n$o-dialog-styles\n```\n\nSets the non structural styles of the `o-dialog` class.\n\n**Type**: `Map`\n\n**Default:**\n```scss\n$o-dialog-wrapper-styles: (\n  'background-color': jigsass-color('bg'),\n);\n```\n\n#### Dialog Animation\n```scss\n$o-dialog-animation\n```\n\nSets the `o-dialog` keyframe animation used in the `o-dialog-wrapper--anim`\nand `o-dialog--anim` classes.\n\n**Type**: `Map`\n\n**Default:**\n```scss\n$o-dialog-animation: (\n  0%: (\n    display: none,\n    opacity: 0,\n  ),\n\n  1%: (\n    display: block,\n    opacity: 0,\n    transform: translate(-50%, -50%) scale(0),\n  ),\n\n  25%: (\n    transform: translate(-50%, -50%) scale(1),\n  ),\n\n  100%: (\n    opacity: 1,\n    transform: translate(-50%, -50%) scale(1),\n  ),\n);\n```\n\n\n#### Animated Dialog Modifier Styles\n```scss\n$o-dialog-anim-mods\n```\n\nSets the styling of the `o-dialog-wrapper--anim` and `o-dialog--anim` modifiers.\n\n**Type**: `Map`\n\n**Default:**\n```scss\n$o-dialog-anim-mods: (\n  animation: o-dialog get-anim($duration: 'long', $easing: 'swift-out') forwards,\n  transform: translate(-50%, -50%) scale(0),\n);\n```\n*/\n.o-dialog-wrapper {\n  z-index: 1000;\n  bottom: 0;\n  cursor: pointer;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  transform-style: preserve-3d;\n  width: 100%;\n  background-color: rgba(45, 45, 45, 0.95);\n  /* ---\nsection: Dialogs\ntitle: Wrapper\norder: 3\n---\n#### .o-dialog-wrapper\nA wrapper for dialog element(s). Used as an overlay to hide the content\nconcealed by the dialog. Extend with a `u-pos--f` class to turn a dialog\ninto a modal.\n\n#### Usage:\n```html\n<div class='u-pos--r'>\n  <div id=\"conceal\">\n    <!-- CONTENT -->\n  </div>\n\n  <div id=\"dialog\"\n      class='o-dialog-wrapper'\n      data-htz-dialog-elem-to-hide='conceal'\n      data-htz-dialog-hide\n      tabindex='-1'\n      aria-hidden='true'>\n\n    <!-- DIALOG CONTENT -->\n\n  </div>\n```\n*/ }\n  .o-dialog-wrapper[aria-hidden='true'] {\n    display: none; }\n\n.o-dialog-wrapper--anim {\n  /* ---\nsection: Dialogs\ntitle: Animated dialogs\norder: 3\n---\n#### .o-dialog-wrapper--anim\nA dialog-wrapper in which which dialog windows are transitioned in.\nAlso produces the `.o-dialog--anim`, which can be attached to individual\ndialogs within any dialog wrapper, so that they are transitioned in.\n\n#### Usage:\n```html\n<div class='u-pos--r'>\n  <div id=\"conceal\">\n    <!-- CONTENT -->\n  </div>\n\n  <div id=\"dialog\"\n      class='o-dialog-wrapper o-dialog-wrapper--anim'\n      data-htz-dialog-elem-to-hide='conceal'\n      data-htz-dialog-hide\n      tabindex='-1'\n      aria-hidden='true'>\n\n    <!-- DIALOG CONTENT -->\n\n  </div>\n```\n*/ }\n  .o-dialog-wrapper--anim > .o-dialog,\n  .o-dialog--anim {\n    animation: o-dialog 1s cubic-bezier(0.55, 0, 0.1, 1) forwards;\n    transform: translate(50%, -50%) scale(0);\n    transfors: perspective(1px) translate3d(-50%, -50%, 0) scale3d(0, 0, 1); }\n\n@keyframes o-dialog {\n  0% {\n    display: none;\n    opacity: 0; }\n  1% {\n    display: block;\n    opacity: 0;\n    transform: translate(50%, -50%) scale(0);\n    transfors: perspective(1px) translate3d(-50%, -50%, 0) scale3d(0, 0, 1); }\n  25% {\n    transform: translate(50%, -50%) scale(1);\n    transfors: perspective(1px) translate3d(-50%, -50%, 0) scale3d(1, 1, 1); }\n  100% {\n    opacity: 1;\n    transform: translate(50%, -50%) scale(1);\n    transfors: perspective(1px) translate3d(-50%, -50%, 0) scale3d(1, 1, 1); } }\n\n.o-dialog {\n  right: 50%;\n  cursor: default;\n  max-height: 90%;\n  overflow: auto;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n  box-shadow: 0 0 4.1666666667rem rgba(0, 0, 0, 0.8);\n  /* ---\nsection: Dialogs\ntitle: Dialog window\norder: 3\n---\n#### .o-dialog\nA dialog window.\n\n#### Usage:\n```html\n\n  <div id=\"dialog\"\n      class='o-dialog-wrapper o-dialog-wrapper--anim'\n      data-htz-dialog-elem-to-hide='conceal'\n      data-htz-dialog-hide\n      tabindex='-1'\n      aria-hidden='true'>\n\n    <div class=\"dialog\" role=\"dialog\">\n      <h3>Dialog titles</h3>\n      <p>Dialog textual content with a <a href=\"#!\">link</a> and some text.</p>\n    </div>\n\n  </div>\n```\n*/ }\n  .o-dialog:focus {\n    outline: none; }\n  .o-dialog[aria-hidden='true'],\n  [aria-hidden='true'] > .o-dialog {\n    display: none; }\n\n/* ---\nsection: Dropdowns\ntitle: CSS Output\norder: 1\n---\n```scss\n$o-dropdown-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and modifier classes.\n\n**Default:**\n```scss\n$o-dropdown-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    up: false,\n  ),\n);\n```\n\n\n```scss\n$o-dropdown-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof dropdown item classes and modifier classes.\n\n**Default:**\n```scss\n$o-dropdown-item-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n/* ---\n *\nsection: Dropdowns\ntitle: Configuration\norder: 2\n---\n\nBy default the `dropdown` object only sets minimal styling for structure, leaving look and\nfeel as flexible as possible. Additional style can be set though configuration maps.\n\n#### Dropdown items\n```scss\n$o-dropdown-item-styles\n```\n\nSets the non structural styles of `o-dropdown__item`s.\n\n**Type**: `Map`\n\n**Default:**\n```scss\n$o-dropdown-item-styles: (\n  no-modifier: ();\n);\n```\n*/\n.o-dropdown {\n  position: absolute;\n  white-space: nowrap;\n  /* ---\nsection: Dropdowns\ntitle: Base\norder: 3\n---\n#### .o-dropdown\nA dropdown element. Must have an `aria-hidden` property by default.\n\n#### Usage:\n```example:html\n<div id=\"dropdown\" class='u-pos--r'>\n  <button class=\"js-dropdown__toggle [ o-btn o-btn--primary ]\">menu</button>\n\n  <ul aria-hidden='true' class=\"js-dropdown__menu o-dropdown o-list-bare\">\n    <li><a href=\"#!\" class=\"o-dropdown__item\">Item 1</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 2</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 3</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 4</a></li>\n  </ul>\n</div>\n```\n*/ }\n  .o-dropdown[aria-hidden='true'] {\n    display: none; }\n\n.o-dropdown__item {\n  display: block;\n  width: 100%;\n  background-color: #fff;\n  box-shadow: 0 0.6666666667rem 0.8333333333rem -0.3333333333rem rgba(51, 51, 51, 0.5);\n  color: #00829e;\n  transition: all 0.25s cubic-bezier(0.55, 0, 0.1, 1);\n  /* ---\nsection: Dropdowns\ntitle: Dropdown Item\norder: 3\n---\n#### .o-dropdown__item\nA dropdown item. Should, in most cases, be assigned to a clickable element,\nnot the `li` itself.\n\n#### Usage:\n```example:html\n<div id=\"dropdown\" class='u-pos--r'>\n  <button class=\"js-dropdown__toggle [ o-btn o-btn--primary ]\">menu</button>\n\n  <ul aria-hidden='true' class=\"js-dropdown__menu o-dropdown o-list-bare\">\n    <li><a href=\"#!\" class=\"o-dropdown__item\">Item 1</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 2</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 3</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 4</a></li>\n  </ul>\n</div>\n```\n*/ }\n  .o-dropdown__item:focus, .o-dropdown__item:hover {\n    background-color: #00829e;\n    color: #fff; }\n\n/* ---\nsection: Adverts\ntitle: CSS Output\norder: 0\n---\n#### Base and general modifiers\n```scss\n$o-ad-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and stylistic modifier classes\n\n**Default:**\n```scss\n$o-ad-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    has-label: false,\n    has-bg: false,\n  ),\n);\n```\n\n\n#### Sizing modifiers\n\n```scss\n$o-ad-sizes-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof ad size modifier classes.\n\n**Default:**\n```scss\n$o-ad-sizes-config: (\n  no-breakpoint: (\n    '1280-200': false,\n    '980-190': false,\n    '970-90': false,\n    '970-250': false,\n    '728-90': false,\n    '468-60': false,\n    '320-50': false,\n    '300-600': false,\n    '300-250': false,\n    '160-600': false,\n    '120-240': false,\n  ),\n);\n```\n*/\n.o-ad {\n  /* ---\nsection: Adverts\ntitle: Ad wrapper\norder: 1\n---\nAn ad wrapper that normalizes adverts' box model an centers them.\n\n#### Usage:\n```html\n<div class=\"o-ad\">\n  <iframe src='my-advert'><iframe/>\n</div>\n```\n*/ }\n  .o-ad div,\n  .o-ad iframe {\n    display: block;\n    margin: 0 auto;\n    padding: 0; }\n\n.o-ad--has-label {\n  /* ---\nsection: Adverts\ntitle: Labeled Ad\norder: 1\n---\nAn advert width a `פרסומת` label above of it\n\n#### Usage:\n```example:html\n<div class=\"o-ad o-ad--has-label\">\n  <div style=\"width: 300px; height: 250px; backgound-color: #ccc;\"></div>\n</div>\n```\n*/ }\n  .o-ad--has-label:before {\n    font-size: 2.3333333333rem;\n    line-height: 3rem;\n    color: #6c6c6c;\n    content: '\\2014\\00a0 פרסומת \\2014';\n    display: block;\n    text-align: center; }\n    @media (min-width: 80em) {\n      .o-ad--has-label:before {\n        font-size: 2rem;\n        line-height: 3rem; } }\n\n.o-ad--468-60 {\n  /* ---\n  section: Adverts\n  title: $size\n  order: 1\n  ---\n  A size modifier that sets the advert's wrapper to a width of 60 and\n  a height of 468 in order to prevent reflows.\n\n  #### Usage:\n  ```example:html\n  <div class=\"o-ad o-ad--468-60\">\n    <div style=\"background-color: #f04;\">\n      <iframe src='my-advert'><iframe/>\n    </div>\n  </div>\n  ```\n  */ }\n  .o-ad--468-60 div,\n  .o-ad--468-60 iframe {\n    height: 60px;\n    width: 468px; }\n\n.o-ad--320-50 {\n  /* ---\n  section: Adverts\n  title: $size\n  order: 1\n  ---\n  A size modifier that sets the advert's wrapper to a width of 50 and\n  a height of 320 in order to prevent reflows.\n\n  #### Usage:\n  ```example:html\n  <div class=\"o-ad o-ad--320-50\">\n    <div style=\"background-color: #f04;\">\n      <iframe src='my-advert'><iframe/>\n    </div>\n  </div>\n  ```\n  */ }\n  .o-ad--320-50 div,\n  .o-ad--320-50 iframe {\n    height: 50px;\n    width: 320px; }\n\n.o-ad--300-250 {\n  /* ---\n  section: Adverts\n  title: $size\n  order: 1\n  ---\n  A size modifier that sets the advert's wrapper to a width of 250 and\n  a height of 300 in order to prevent reflows.\n\n  #### Usage:\n  ```example:html\n  <div class=\"o-ad o-ad--300-250\">\n    <div style=\"background-color: #f04;\">\n      <iframe src='my-advert'><iframe/>\n    </div>\n  </div>\n  ```\n  */ }\n  .o-ad--300-250 div,\n  .o-ad--300-250 iframe {\n    height: 250px;\n    width: 300px; }\n\n@media (min-width: 37.5em) {\n  .o-ad--468-60--from-s div,\n  .o-ad--468-60--from-s iframe {\n    height: 60px;\n    width: 468px; } }\n\n@media (min-width: 64em) {\n  .o-ad--300-600--from-l {\n    /* ---\n  section: Adverts\n  title: $size\n  order: 1\n  ---\n  A size modifier that sets the advert's wrapper to a width of 600 and\n  a height of 300 in order to prevent reflows.\n\n  #### Usage:\n  ```example:html\n  <div class=\"o-ad o-ad--300-600\">\n    <div style=\"background-color: #f04;\">\n      <iframe src='my-advert'><iframe/>\n    </div>\n  </div>\n  ```\n  */ }\n    .o-ad--300-600--from-l div,\n    .o-ad--300-600--from-l iframe {\n      height: 600px;\n      width: 300px; }\n  .o-ad--960-150--from-l {\n    /* ---\n  section: Adverts\n  title: $size\n  order: 1\n  ---\n  A size modifier that sets the advert's wrapper to a width of 150 and\n  a height of 960 in order to prevent reflows.\n\n  #### Usage:\n  ```example:html\n  <div class=\"o-ad o-ad--960-150\">\n    <div style=\"background-color: #f04;\">\n      <iframe src='my-advert'><iframe/>\n    </div>\n  </div>\n  ```\n  */ }\n    .o-ad--960-150--from-l div,\n    .o-ad--960-150--from-l iframe {\n      height: 150px;\n      width: 960px; }\n  .o-ad--970-90--from-l {\n    /* ---\n  section: Adverts\n  title: $size\n  order: 1\n  ---\n  A size modifier that sets the advert's wrapper to a width of 90 and\n  a height of 970 in order to prevent reflows.\n\n  #### Usage:\n  ```example:html\n  <div class=\"o-ad o-ad--970-90\">\n    <div style=\"background-color: #f04;\">\n      <iframe src='my-advert'><iframe/>\n    </div>\n  </div>\n  ```\n  */ }\n    .o-ad--970-90--from-l div,\n    .o-ad--970-90--from-l iframe {\n      height: 90px;\n      width: 970px; }\n  .o-ad--970-250--from-l {\n    /* ---\n  section: Adverts\n  title: $size\n  order: 1\n  ---\n  A size modifier that sets the advert's wrapper to a width of 250 and\n  a height of 970 in order to prevent reflows.\n\n  #### Usage:\n  ```example:html\n  <div class=\"o-ad o-ad--970-250\">\n    <div style=\"background-color: #f04;\">\n      <iframe src='my-advert'><iframe/>\n    </div>\n  </div>\n  ```\n  */ }\n    .o-ad--970-250--from-l div,\n    .o-ad--970-250--from-l iframe {\n      height: 250px;\n      width: 970px; } }\n\n@media (min-width: 80em) {\n  .o-ad--728-90--from-xl {\n    /* ---\n  section: Adverts\n  title: $size\n  order: 1\n  ---\n  A size modifier that sets the advert's wrapper to a width of 90 and\n  a height of 728 in order to prevent reflows.\n\n  #### Usage:\n  ```example:html\n  <div class=\"o-ad o-ad--728-90\">\n    <div style=\"background-color: #f04;\">\n      <iframe src='my-advert'><iframe/>\n    </div>\n  </div>\n  ```\n  */ }\n    .o-ad--728-90--from-xl div,\n    .o-ad--728-90--from-xl iframe {\n      height: 90px;\n      width: 728px; } }\n\n/* ---\nsection: Block Link\ntitle: CSS Output\norder: 1\n---\n```scss\n$o-block-link-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and modifier classes.\n\n**Default:**\n```scss\n$o-block-link-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n.o-block-link {\n  z-index: 0;\n  background: transparent;\n  bottom: 0;\n  left: 0;\n  margin: 0;\n  opacity: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  /* ---\nsection: Block Link\ntitle: base\norder: 2\n---\nA link that covers its container's entire area,\nmaking the entire ui element clickable\n\nWrapper element must be relatively positioned.\n\n#### Usage:\n```example:html\n<article class=\"u-pos--r\">\n  <img src=\"https://unsplash.it/1920/800?random\"\n       alt=\"A random placeholder image\" />\n  <a href=\"#!\">\n  <h1 class=\"u-type--gamma\">A clickable element</h1>\n  </a>\n  <a href=\"#!\" class=\"o-block-link\" tabindex=\"-1\"></a>\n</article>\n```\n*/\n  /* ---\nsection: Block Link\ntitle: Raised elements\norder: 2\n---\nClickable elements inside the same container\n\n#### Usage:\n```example:html\n<article class=\"u-pos--r\">\n  <a href=\"#!\">\n  <img src=\"https://unsplash.it/1920/800?random\"\n       alt=\"A random placeholder image\"\n       class=\"o-block-link__raised\"\n       title=\"The title is visible because of the `o-block-link__raised` class\"/>\n  </a>\n\n  <a href=\"#!\">\n  <h1 class=\"u-type--gamma\">A clickable element</h1>\n  </a>\n  <p><a href=\"#!\" class=\"o-block-link__raised\">A nested link</a></p>\n  <a href=\"#!\" class=\"o-block-link\" tabindex=\"-1\"></a>\n</article>\n```\n*/ }\n  .o-block-link__raised {\n    z-index: 1;\n    position: relative; }\n\n/* ---\nsection: Breadcrumbs\ntitle: Configuration\norder: 2\n---\n#### Separator Styles\n\n```scss\n$o-crumbs-separator\n```\n\n\n**Type:** `Boolean` or `Map`\n\n\nA map of styles to use for styling items' `:after`\npseudo element and separate between items.\n\n**Default:** `false`\n\n\n**Example:**\n```scss\n$o-crumbs-separator: (\n  content: '\\0020/\\0020',\n  display: inline-block,\n  margin-left: 1rem,\n  margin-right: 1rem,\n);\n```\n*/\n/* ---\nsection: Breadcrumbs\ntitle: CSS Output\norder: 1\n---\n```scss\n$o-crumbs-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nbreadcrumbs classes and modifier classes.\n\n**Default:**\n```scss\n$o-crumbs-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n.o-crumbs {\n  /* ---\nsection: Breadcrumbs\ntitle: base\norder: 3\n---\n```example:html\n<ol vocab=\"https://schema.org/\"\n    typeof=\"BreadcrumbList\"\n    class=\"o-crumbs o-inline-list u-fw--700\">\n  <li property=\"itemListElement\" typeof=\"ListItem\" class=\"o-crumbs__item\">\n    <a property=\"item\" typeof=\"WebPage\" href=\"#!\">\n      <span property=\"name\">עכבר</span>\n    </a>\n    <meta property=\"position\" content=\"1\">\n  </li><li property=\"itemListElement\" typeof=\"ListItem\" class=\"o-crumbs__item\">\n    <a property=\"item\" typeof=\"WebPage\" href=\"#!\">\n      <span property=\"name\">העיר</span>\n    </a>\n    <meta property=\"position\" content=\"2\">\n  </li>\n</ol>\n```\n*/ }\n  .o-crumbs > *:not(:last-child):after {\n    content: \" / \";\n    display: inline-block;\n    margin-left: 1rem;\n    margin-right: 1rem; }\n  .o-crumbs > *:nth-child(odd) {\n    color: #00829e; }\n  .o-crumbs > *:hover > a,\n  .o-crumbs > *:focus > a {\n    border-bottom: 2px solid; }\n\n/* ---\nsection: Icons\ntitle: CSS Output\norder: 1\n---\n```scss\n$o-icn-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nicon classes and modifier classes.\n\n**Default:**\n```scss\n$o-icn-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n.o-icn {\n  height: 1em;\n  vertical-align: -0.15em;\n  width: 1em;\n  /* ---\nsection: Icons\ntitle: o-icn\norder: 2\n---\n#### Usage:\n```html\n<svg class=\"o-icn [ modifier classes ]\">\n  <title>Optional title for accesibility</title>\n  <use xlink:href=\"#icn-name\"></use>\n</svg>\n```\n\n#### Icon Accesibility\n\nThere are a few possible solutions for icon accessibility, depending on the\ncontext in which they are used.\n\nFirst, if we don’t want to add any alt text (either because there’s already\nrelevant text alongside the icons (e.g., as is often the case with buttons),\nthe `aria-hidden=\"true\"` attribute should be added to the icon, in order to\nmake sure screen readers don’t try reading the icon out loud:\n\n```html\n<button class=\"js-facebook-share  [ o-btn o-btn--facebook ]\">\n  <svg aria-hidden=\"true\" class=\"o-icn\">\n    <use xlink:href=\"#icon-facebook\"></use>\n  </svg>\n  Share on Facebook\n</button>\n```\nWhen there is a link or a button containing only an icon, use the `aria-label`\nattribute, preferably on the interactive element (`<a>` or `<button>`), as some\nscreen readers will ignore the `aria-label` attribute on non-interactive\nelements:\n\n```html\n<button\n        class=\"js-facebook-share  [ o-btn o-btn--facebook ]\"\n        aria-label=\"Share on Facebook\">\n  <svg aria-hidden=\"true\" class=\"o-icn\">\n    <use xlink:href=\"#icon-facebook\"></use>\n  </svg>\n```\n\nAnother option is using the `<title>` element. It’s especially useful outside of\ninteractive elements (where aria-label might not be read by some screen\nreaders). For instance, if you show yes/no markers in a table column, you could have:\n\n```html\n<td>\n  <svg class=\"o-icn\">\n    <title>Yes</title>\n    <use xlink:href=\"#tick\"></use>\n  </svg>\n</td>\n```\n</div>\n\n\n#### Icon Legend\n\n```exampl:html\n<style>html{direction:ltr !important}ul{margin:0 -2rem}li{background-color: #fff;color: #444;display: inline-block;margin: 2rem 2rem 0;padding: 1rem 1rem 0;text-align: center;}svg {height: 7rem;width: 7rem;}.demo-icon-name {background-color: #ccc;font-family: monospace;font-weight: 700;margin: 1rem -1rem 0;padding: 0 1rem;}.demo-logo--2lines{width:16rem;color: #00829e}.demo-logo--1line{width:30rem;color: #00829e</style>\n<ul>\n  <li title=\"icon-accessibility\">\n    <svg class=\"demo-icon-accessibility\"><use xlink:href=\"assets/sprite.svg#icon-accessibility\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-accessibility</h3>\n  </li>\n  <li title=\"icon-android\">\n    <svg class=\"demo-icon-android\"><use xlink:href=\"assets/sprite.svg#icon-android\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-android</h3>\n  </li>\n  <li title=\"icon-apple\">\n    <svg class=\"demo-icon-apple\"><use xlink:href=\"assets/sprite.svg#icon-apple\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-apple</h3>\n  </li>\n  <li title=\"icon-cal\">\n    <svg class=\"demo-icon-cal\"><use xlink:href=\"assets/sprite.svg#icon-cal\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-cal</h3>\n  </li>\n  <li title=\"icon-close\">\n    <svg class=\"demo-icon-close\"><use xlink:href=\"assets/sprite.svg#icon-close\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-close</h3>\n  </li>\n  <li title=\"icon-comment\">\n    <svg class=\"demo-icon-comment\"><use xlink:href=\"assets/sprite.svg#icon-comment\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-comment</h3>\n  </li>\n  <li title=\"icon-facebook-b\">\n    <svg class=\"demo-icon-facebook-b\"><use xlink:href=\"assets/sprite.svg#icon-facebook-b\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-facebook-b</h3>\n  </li>\n  <li title=\"icon-facebook\">\n    <svg class=\"demo-icon-facebook\"><use xlink:href=\"assets/sprite.svg#icon-facebook\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-facebook</h3>\n  </li>\n  <li title=\"icon-gplus\">\n    <svg class=\"demo-icon-gplus\"><use xlink:href=\"assets/sprite.svg#icon-gplus\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-gplus</h3>\n  </li>\n  <li title=\"icon-location\">\n    <svg class=\"demo-icon-location\"><use xlink:href=\"assets/sprite.svg#icon-location\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-location</h3>\n  </li>\n  <li title=\"icon-mail\">\n    <svg class=\"demo-icon-mail\"><use xlink:href=\"assets/sprite.svg#icon-mail\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-mail</h3>\n  </li>\n  <li title=\"icon-mouse--small\">\n    <svg class=\"demo-icon-mouse--small\"><use xlink:href=\"assets/sprite.svg#icon-mouse--small\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-mouse--small</h3>\n  </li>\n  <li title=\"icon-mouse\">\n    <svg class=\"demo-icon-mouse\"><use xlink:href=\"assets/sprite.svg#icon-mouse\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-mouse</h3>\n  </li>\n  <li title=\"icon-phone\">\n    <svg class=\"demo-icon-phone\"><use xlink:href=\"assets/sprite.svg#icon-phone\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-phone</h3>\n  </li>\n  <li title=\"icon-restaurant\">\n    <svg class=\"demo-icon-restaurant\"><use xlink:href=\"assets/sprite.svg#icon-restaurant\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-restaurant</h3>\n  </li>\n  <li title=\"icon-search\">\n    <svg class=\"demo-icon-search\"><use xlink:href=\"assets/sprite.svg#icon-search\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-search</h3>\n  </li>\n  <li title=\"icon-share\">\n    <svg class=\"demo-icon-share\"><use xlink:href=\"assets/sprite.svg#icon-share\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-share</h3>\n  </li>\n  <li title=\"icon-star\">\n    <svg class=\"demo-icon-star\"><use xlink:href=\"assets/sprite.svg#icon-star\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-star</h3>\n  </li>\n  <li title=\"icon-taxi\">\n    <svg class=\"demo-icon-taxi\"><use xlink:href=\"assets/sprite.svg#icon-taxi\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-taxi</h3>\n  </li>\n  <li title=\"icon-twitter\">\n    <svg class=\"demo-icon-twitter\"><use xlink:href=\"assets/sprite.svg#icon-twitter\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-twitter</h3>\n  </li>\n  <li title=\"icon-whatsapp\">\n    <svg class=\"demo-icon-whatsapp\"><use xlink:href=\"assets/sprite.svg#icon-whatsapp\"></use></svg>\n    <h3 class=\"demo-icon-name\">icon-whatsapp</h3>\n  </li>\n  <li title=\"logo--1line\">\n    <svg class=\"demo-logo--1line\"><use xlink:href=\"assets/sprite.svg#logo--1line\"></use></svg>\n    <h3 class=\"demo-icon-name\">logo--1line</h3>\n  </li>\n  <li title=\"logo--2lines\">\n    <svg class=\"demo-logo--2lines\"><use xlink:href=\"assets/sprite.svg#logo--2lines\"></use></svg>\n    <h3 class=\"demo-icon-name\">logo--2lines</h3>\n  </li>\n</ul>\n```\n*/ }\n\n/* ---\nsection: Kicker\ntitle: CSS Output\norder: 1\n---\n```scss\n$o-kicker-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and modifier classes.\n\n**Default:**\n```scss\n$o-kicker-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n.o-kicker {\n  color: #ed143d;\n  display: inline;\n  /* ---\nsection: Kicker\ntitle: Inline Kicker\norder: 2\n---\nA kicker element to accompany healines.\n\n#### Usage:\n```example:html\n<h1 class=\"u-type--beta\">\n  <span class=\"o-kicker\">כותרת גג</span> טקסט כותרת ראשית\n</h1>\n```\n*/ }\n  .o-kicker:after {\n    padding: 0 0.5rem;\n    color: #b6b6b6;\n    content: '/';\n    display: inline-block;\n    font-weight: 400; }\n\n/* ---\nsection: Aspect Ratio Containers\ntitle: CSS Output\norder: 0\n---\n```scss\n$o-aspect-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\naspect ratio container classes and modifier classes.\n\n**Default:**\n```scss\n$o-aspect-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    headline: false,\n    regular: false,\n    landscape: false,\n    square: false,\n    vertical: false,\n  ),\n);\n```\n*/\n/* ---\nsection: Aspect Ratio Containers\ntitle: Config\norder: 1\n---\n```scss\n$o-aspect-ratios\n```\n\n\n**Type:** `Map`\n\nNamed aspect ratios\n\nA map of named aspect ratios and their values\n\n**Default:**\n```scss\n$o-aspect-config: (\n  no-breakpoint: (\n    // base\n    no-modifier: false,\n\n    // ratios\n    headline: false,\n    regular: false,\n    landscape: false,\n    square: false,\n    vertical: false,\n\n    // context\n    has-embed: false,\n  ),\n);\n```\n*/\n.o-aspect {\n  height: 0;\n  overflow: hidden;\n  position: relative;\n  /* ---\nsection: Aspect Ratio Containers\ntitle: Base\norder: 2\n---\nBasic styles for setting intrinsic ratio containers.\nTo set an aspect ratio on an element, the `o-aspect`\nclass Should be extended with ratio modifiers in the html.\n\n\n#### Usage:\n```html\n<div class=\"o-aspect <modifier>\">\n</div>\n```\n*/ }\n\n.o-aspect--headline {\n  padding-bottom: 56.25%;\n  /* ---\nsection: Aspect Ratio Containers\ntitle: headline ratio modifier\norder: 2\n---\nSet the intrinsic ratio of a container to a fluid height that\nis 56.25% of its width.\n\n#### Usage:\n```example:html\n<div class=\"o-aspect o-aspect--headline\"\n     style=\"background-color:#00829e;\">\n  <h3 style=\"color: #fff; left: 50%; position: absolute; top: 50%; transform: translate(-50%, -50%)\">\n  An intrinsic ratio container with '<code>headline</code>' aspect ratio.\n  </h3>\n</div>\n```\n*/ }\n\n.o-aspect--regular {\n  padding-bottom: 75%;\n  /* ---\nsection: Aspect Ratio Containers\ntitle: regular ratio modifier\norder: 2\n---\nSet the intrinsic ratio of a container to a fluid height that\nis 75% of its width.\n\n#### Usage:\n```example:html\n<div class=\"o-aspect o-aspect--regular\"\n     style=\"background-color:#00829e;\">\n  <h3 style=\"color: #fff; left: 50%; position: absolute; top: 50%; transform: translate(-50%, -50%)\">\n  An intrinsic ratio container with '<code>regular</code>' aspect ratio.\n  </h3>\n</div>\n```\n*/ }\n\n.o-aspect--landscape {\n  padding-bottom: 43.4782608696%;\n  /* ---\nsection: Aspect Ratio Containers\ntitle: landscape ratio modifier\norder: 2\n---\nSet the intrinsic ratio of a container to a fluid height that\nis 43.4782608696% of its width.\n\n#### Usage:\n```example:html\n<div class=\"o-aspect o-aspect--landscape\"\n     style=\"background-color:#00829e;\">\n  <h3 style=\"color: #fff; left: 50%; position: absolute; top: 50%; transform: translate(-50%, -50%)\">\n  An intrinsic ratio container with '<code>landscape</code>' aspect ratio.\n  </h3>\n</div>\n```\n*/ }\n\n.o-aspect--has-embed > * {\n  display: block !important;\n  height: 100% !important;\n  left: 0 !important;\n  margin: 0 !important;\n  padding: 0 !important;\n  position: absolute !important;\n  top: 0 !important;\n  width: 100% !important;\n  /* ---\nsection: Aspect Ratio Containers\ntitle: Intrinsic ratio embeds\norder: 2\n---\nStretch child elements to the dimensions of of the intrinsic ratio container.\n\n#### Usage:\n```example:html\n<div class=\"o-aspect o-aspect--has-embed\" style=\"padding-bottom: 56.25%\">\n  <iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/3fRIUnKJk1w\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n```\n*/ }\n\n/* ---\nsection: Fluid Embeds\ntitle: CSS Output\norder: 0\n---\n```scss\n$o-embed-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nclasses and modifier classes.\n\n**Default:**\n```scss\n$o-embed-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n.o-embed {\n  overflow: hidden;\n  /* ---\nsection: Fluid Embeds\ntitle: Embed container\norder: 1\n---\n<strong>.o-embed</strong>\n\nStyles for either stretching embedded content to the width of\nits container, if it is too narrow, or limit its width, when too\nwide, so that it does not break the layout.\n\n\n#### Usage:\n```html\n<div class=\"o-embed\">\n  <iframe style=\"width: 250px; height: 400px; bacground-color: #ccc;\" src\"...\"></iframe>\n</div>\n```\n*/ }\n  .o-embed > * {\n    display: block;\n    max-width: 100% !important;\n    width: 100% !important; }\n  .o-embed > script {\n    display: none; }\n\n/* ---\nsection: Collapsibles\ntitle: CSS Output\norder: 0\n---\n```scss\n$o-collapsibles-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of classes,\nmodifier classes, state classes and item classes.\n\n**Default:**\n```scss\n$o-collapsibles-config: (\n  o-collapsible-is-collapsed: (\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n  o-collapsible-is-expanded: (\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n  o-collapsible__toggle: (\n    no-breakpoint: (\n      no-modifier: false,\n      b: false,\n    ),\n  ),\n  o-collapsible__content: (\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n);\n```\n*/\n.o-collapsible__toggle {\n  height: 6rem;\n  position: relative;\n  width: 6rem;\n  /* ---\nsection: Collapsibles\ntitle: Toggle element\norder: 1\n---\nA collapsible element's toggle button\nExtends `o-btn` and often a button color modifier in the markup.\n\nAccessibility text is handled by the `htz-collapsibles` javascript module. Must carry the\n`js-collapsible__toggle` class as a jvascript hook.\n\n#### Usage:\n```html\n<button class=\"js-collapsible__toggle o-collapsible__toggle\n              [ o-btn o-btn--<color-modifier ]\"             >\n</button>\n```\n*/ }\n  .o-collapsible__toggle:after, .o-collapsible__toggle:before {\n    background-color: currentColor;\n    content: '';\n    font-size: 1rem;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transition: height 0.15s cubic-bezier(0, 0, 0.2, 0), transform 0.15s cubic-bezier(0, 0, 0.2, 0), width 0.15s cubic-bezier(0, 0, 0.2, 0); }\n  .o-collapsible__toggle:before {\n    height: 0.5rem;\n    transform: translate(-50%, -50%) rotate(0) scaleY(1);\n    width: 3rem; }\n  .o-collapsible__toggle:after {\n    height: 3rem;\n    transform: translate(-50%, -50%) rotate(0) scaleY(0);\n    width: 0.5rem; }\n\n.o-collapsible__toggle--b {\n  /* ---\nsection: Collapsibles\ntitle: Toggle element b\norder: 1\n---\nA collapsible element's text-based toggle element drawing content from data attributes\n\nText is derived from the `data-collapsed-contnt` attribute for the collapsed state and the\n`data-expanded-content` attribute for the expanded state\n\nAccessibility text is handled by the `htz-collapsibles` javascript module.\nMust be a descendant of an element carrying the `js-collapsible__toggle` class as a jvascript hook.\n\n#### Usage:\n```html\n<button class=\"js-collapsible__toggle>\n  <span aria-hidden=\"true\" data-collapsed-content=\"expand +\" data-expanded-content=\"collapse -\"></span>\n</button>\n```\n*/ }\n  .o-collapsible__toggle--b:before {\n    content: attr(data-collapsed-content); }\n    .o-collapsible-is-expanded .o-collapsible__toggle--b:before {\n      content: attr(data-expanded-content); }\n\n.o-collapsible__content {\n  max-height: 20000px;\n  overflow: hidden;\n  transform-origin: 0 0;\n  transition: all 0.15s cubic-bezier(0.55, 0, 0.1, 1);\n  /* ---\nsection: Collapsibles\ntitle: Content element\norder: 1\n---\nA collapsible element's content block\n\nMust carry the `js-collapsible__content` class as a jvascript hook.\n\n#### Usage:\n```html\n<div class=\"js-collapsible__content o-collapsible__content\">\n<!-- content here -->\n</div>\n```\n*/ }\n\n.o-collapsible-is-collapsed {\n  /* ---\nsection: Collapsibles\ntitle: Collapsed State\norder: 1\n---\nA collapsible element in its collapsed state. Set on the wrapper.\nCan be limited to specific breakpoints using responsive modifiers.\n\nElement must also have the `js-collapsible` class.\n\n\n#### Usage:\n```html\n<section class=\"js-collapsible o-collapsible o-collapsible-is-collapsed--until-l\"\n         data-collapsible-bps=\"until-tiny, medium-until-large, x-large\">\n  <h3 class=\"o-collapsible__content\">\n    <!-- Sction title here -->\n\n    <button class=\"js-collapsible__toggle o-collapsible__toggle\n                  [ o-btn o-btn--<color-modifier> ]\"             >\n    </button>\n  </h3>\n  <div class=\"js-collapsible__content o-collapsible__content\">\n  <!-- content here -->\n  </div>\n```\n*/ }\n  .o-collapsible-is-collapsed > * > .o-collapsible__toggle:before, .o-collapsible-is-collapsed > * > .o-collapsible__toggle:after,\n  .o-collapsible-is-collapsed > .o-collapsible__toggle:before,\n  .o-collapsible-is-collapsed > .o-collapsible__toggle:after {\n    transform: translate(-50%, -50%) rotate(-180deg) scaleY(1); }\n  .o-collapsible-is-collapsed > .o-collapsible__content {\n    margin: 0;\n    max-height: 0;\n    padding-bottom: 0;\n    padding-top: 0;\n    transform: scaleY(0);\n    visibility: hidden; }\n    .no-js .o-collapsible-is-collapsed > .o-collapsible__content {\n      max-height: 20000px;\n      transform: scaleY(1);\n      visibility: visible; }\n\n@media (max-width: 37.49em) {\n  .o-collapsible-is-collapsed--until-s > * > .o-collapsible__toggle:before, .o-collapsible-is-collapsed--until-s > * > .o-collapsible__toggle:after,\n  .o-collapsible-is-collapsed--until-s > .o-collapsible__toggle:before,\n  .o-collapsible-is-collapsed--until-s > .o-collapsible__toggle:after {\n    transform: translate(-50%, -50%) rotate(-180deg) scaleY(1); }\n  .o-collapsible-is-collapsed--until-s > .o-collapsible__content {\n    margin: 0;\n    max-height: 0;\n    padding-bottom: 0;\n    padding-top: 0;\n    transform: scaleY(0);\n    visibility: hidden; }\n    .no-js .o-collapsible-is-collapsed--until-s > .o-collapsible__content {\n      max-height: 20000px;\n      transform: scaleY(1);\n      visibility: visible; } }\n\n@media (max-width: 63.99em) {\n  .o-collapsible-is-collapsed--until-l > * > .o-collapsible__toggle:before, .o-collapsible-is-collapsed--until-l > * > .o-collapsible__toggle:after,\n  .o-collapsible-is-collapsed--until-l > .o-collapsible__toggle:before,\n  .o-collapsible-is-collapsed--until-l > .o-collapsible__toggle:after {\n    transform: translate(-50%, -50%) rotate(-180deg) scaleY(1); }\n  .o-collapsible-is-collapsed--until-l > .o-collapsible__content {\n    margin: 0;\n    max-height: 0;\n    padding-bottom: 0;\n    padding-top: 0;\n    transform: scaleY(0);\n    visibility: hidden; }\n    .no-js .o-collapsible-is-collapsed--until-l > .o-collapsible__content {\n      max-height: 20000px;\n      transform: scaleY(1);\n      visibility: visible; } }\n\n.o-collapsible-is-expanded {\n  /* ---\nsection: Collapsibles\ntitle: Expanded State\norder: 1\n---\nA collapsible element in its expanded state. Set on the wrapper.\nCan be limited to specific breakpoints using responsive modifiers.\n\nElement must also have the `js-collapsible` class.\n\n\n#### Usage:\n```html\n<section class=\"js-collapsible o-collapsible o-collapsible-is-expanded\"\n         data-collapsible-bps=\"until-tiny, medium-until-large, x-large\">\n  <h3 class=\"o-collapsible__content\">\n    <!-- Sction title here -->\n\n    <button class=\"js-collapsible__toggle o-collapsible__toggle\n                  [ o-btn o-btn--<color-modifier> ]\"             >\n    </button>\n  </h3>\n  <div class=\"js-collapsible__content o-collapsible__content\">\n  <!-- content here -->\n  </div>\n```\n*/ }\n  .o-collapsible-is-expanded > .o-collapsible__toggle:before,\n  .o-collapsible-is-expanded > * > .o-collapsible__toggle:before {\n    transform: translate(-50%, -50%) rotate(0) scaleY(1); }\n  .o-collapsible-is-expanded > .o-collapsible__toggle:after,\n  .o-collapsible-is-expanded > * > .o-collapsible__toggle:after {\n    transform: translate(-50%, -50%) rotate(0) scaleY(0); }\n  .o-collapsible-is-expanded > .o-collapsible__content {\n    transform: scaleY(1);\n    visibility: visible; }\n\n/* ---\nsection: Section Head\ntitle: CSS Output\norder: 1\n---\n#### BASE\n```scss\n$o-sec-head-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and modifier classes.\n\n**Default:**\n```scss\n$o-sec-head-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    b: false,\n  ),\n);\n```\n\n#### Items\n```scss\n$o-sec-head-items-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof item classes and modifier classes.\n\n**Default:**\n```scss\n$o-sec-head-items-config: (\n  links(\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n);\n```\n*/\n.o-sec-head {\n  border-bottom: 0.1666666667rem solid #bfe0e7;\n  padding-bottom: 0.8333333333rem;\n  align-items: baseline;\n  color: #00829e;\n  display: flex;\n  justify-content: space-between;\n  /* ---\nsection: Section Head\ntitle: base\norder: 2\n---\nA section head.\n\n#### Usage:\n```example:html\n<h2 class=\"o-sec-head u-type--epsilon\">\n  שם של מדור\n</h2>\n```\n*/ }\n\n.o-sec-head--b {\n  border-bottom: 0.1666666667rem solid #00829e;\n  padding-bottom: 0.8333333333rem;\n  color: #2d2d2d;\n  /* ---\nsection: Section Head\ntitle: base\norder: 2\n---\nA darker section head\n\n#### Usage:\n```example:html\n<h2 class=\"o-sec-head o-sec-head--b u-type--epsilon\">\n  שם של מדור\n</h2>\n```\n*/ }\n\n.o-sec-head__links {\n  color: #6c6c6c;\n  display: inline-block;\n  /* ---\nsection: Section Head\ntitle: Related links\norder: 2\n---\n\nLinks related to a section head.\n\nRequire the container to be relatively positioned.\n\n#### Usage:\n```example:html\n<h2 class=\"o-sec-head u-type--epsilon u-pos--r\">\n  שם של מדור\n  <ul class=\"[ o-inline-list o-inline-list--delimited ] o-sec-head__links  u-type--micro\">\n    <li><a href=\"#!\">לינק ראשון</a></li>\n    <li><a href=\"#!\">לינק שני</a></li>\n  <ul>\n</h2>\n```\n*/ }\n  .o-sec-head__links a:hover,\n  .o-sec-head__links a:focus,\n  .o-sec-head__links a:active {\n    box-shadow: inset 0 -3px 0 0 #bfe0e7;\n    color: #00829e; }\n\n/* ---\nsection: Tag\ntitle: CSS Output\norder: 0\n---\n```scss\n$o-tag-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes, and modifier classes.\n\n**Default:**\n```scss\n$o-tag-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n.o-tag {\n  margin-left: 1rem;\n  padding: 0 1rem;\n  margin-bottom: 1rem;\n  background-color: #d2e9ee;\n  border-radius: 2px;\n  transition: background-color 0.25s cubic-bezier(0.55, 0, 0.1, 1);\n  /* ---\nsection: Tag\ntitle: Base\norder: 1\n---\nAn element in an itemized list of topics\n\n#### Usage:\n```example:html\n<div class=\"o-inline-list\">\n  <h5>תגיות</h5>\n  <ul class=\"o-inline-list\">\n    <li class=\"o-tag\"><a href=#!>תגית 1</a></li>\n    <li class=\"o-tag\"><a href=#!>תגית 2</a></li>\n    <li class=\"o-tag\"><a href=#!>תגית 3</a></li>\n    <li class=\"o-tag\"><a href=#!>תגית 4</a></li>\n    <li class=\"o-tag\"><a href=#!>תגית 5</a></li>\n  </ul>\n\n</div>\n```\n*/ }\n  .o-tag:hover, .o-tag:focus, .o-tag:active {\n    background-color: #bfe0e7; }\n\n/* ---\nsection: Tabs\ntitle: CSS Output\norder: 0\n---\n#### Tablist containers\n```scss\n$o-tabs-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof tablist classes, and modifier classes.\n\n**Default:**\n```scss\n$o-tabs-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n\n\n#### Individual Tabs\n```scss\n$o-tab-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof tab classes, and modifier classes.\n\n**Default:**\n```scss\n$o-tab-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    tight: false,\n  ),\n);\n```\n\n\n#### Tab Panels\n```scss\n$o-tabpanel-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof tabpanel classes, and modifier classes.\n\n**Default:**\n```scss\n$o-tabpanel-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n.o-tabs {\n  border-bottom: 1rem solid;\n  padding-bottom: 0rem;\n  color: #00829e;\n  font-weight: 700;\n  white-space: nowrap;\n  /* ---\nsection: tabs\ntitle: Tab List\norder: 1\n---\nAn element containing tabs\n\n#### Usage:\n```example:html\n<section id=\"tabs\">\n  <h5>טאבים</h5>\n  <ul class=\"o-inline-list o-tabs\" role=\"tablist\">\n    <li class=\"o-tab\" role=\"presentation\">\n      <a href=\"#tabpanel1\" role=\"tab\" aria-controls=\"tabpanel1\" aria-selected=\"true\">טאב 1</a>\n    </li>\n    <li class=\"o-tab\" role=\"presentation\">\n      <a href=\"#tabpanel2\" role=\"tab\" aria-controls=\"tabpanel2\">טאב 2</a>\n    </li>\n  </ul>\n\n  <section id=\"tabpanel1\" class=\"o-tabpanel\" role=\"tabpanel\" >טאב פעיל</section>\n  <section id=\"tabpanel2\" class=\"o-tabpanel\" role=\"tabpanel\" aria-hidden=\"true\">טאב לא פעיל</section>\n</section>\n```\n*/ }\n\n.o-tab {\n  /* ---\nsection: tabs\ntitle: Tab\norder: 1\n---\nAn individual tab in a tablist\n\n#### Usage:\n```example:html\n<section id=\"tabs\">\n  <h5>טאבים</h5>\n  <ul class=\"o-inline-list o-tabs\" role=\"tablist\">\n    <li class=\"o-tab\" role=\"presentation\">\n      <a href=\"#tabpanel1\" role=\"tab\" aria-controls=\"tabpanel1\" aria-selected=\"true\">טאב 1</a>\n    </li>\n    <li class=\"o-tab\" role=\"presentation\">\n      <a href=\"#tabpanel2\" role=\"tab\" aria-controls=\"tabpanel2\">טאב 2</a>\n    </li>\n  </ul>\n\n  <section id=\"tabpanel1\" class=\"o-tabpanel\" role=\"tabpanel\" >טאב פעיל</section>\n  <section id=\"tabpanel2\" class=\"o-tabpanel\" role=\"tabpanel\" aria-hidden=\"true\">טאב לא פעיל</section>\n</section>\n```\n*/ }\n  .o-tab > a,\n  .o-tab > button {\n    padding: 0.5rem 1rem;\n    display: block;\n    transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1); }\n    @media (min-width: 37.5em) {\n      .o-tab > a,\n      .o-tab > button {\n        padding: 0.5rem 2rem; } }\n    .o-tab > a:hover, .o-tab > a:focus, .o-tab > a:active,\n    .o-tab > button:hover,\n    .o-tab > button:focus,\n    .o-tab > button:active {\n      background-color: #fff;\n      outline: none; }\n    .o-tab > a[aria-selected='true'],\n    .o-tab > button[aria-selected='true'] {\n      background-color: #00829e;\n      color: #fff; }\n      .o-tab > a[aria-selected='true']:focus,\n      .o-tab > button[aria-selected='true']:focus {\n        background-color: #0cc;\n        color: #2d2d2d; }\n\n.o-tab--tight {\n  /* ---\nsection: tabs\ntitle: Tightly padded tab\norder: 1\n---\nA more tightly padded individual tab in a tablist\n\n#### Usage:\n```example:html\n<section id=\"tabs\">\n  <h5>טאבים</h5>\n  <ul class=\"o-inline-list o-tabs\" role=\"tablist\">\n    <li class=\"o-tab o-tab--tight\" role=\"presentation\">\n      <a href=\"#tabpanel1\" role=\"tab\" aria-controls=\"tabpanel1\" aria-selected=\"true\">טאב 1</a>\n    </li>\n    <li class=\"o-tab o-tab--tight\" role=\"presentation\">\n      <a href=\"#tabpanel2\" role=\"tab\" aria-controls=\"tabpanel2\">טאב 2</a>\n    </li>\n  </ul>\n\n  <section id=\"tabpanel1\" class=\"o-tabpanel\" role=\"tabpanel\" >טאב פעיל</section>\n  <section id=\"tabpanel2\" class=\"o-tabpanel\" role=\"tabpanel\" aria-hidden=\"true\">טאב לא פעיל</section>\n</section>\n```\n*/ }\n  @media (min-width: 37.5em) {\n    .o-tab--tight > a,\n    .o-tab--tight > button {\n      padding: 0.5rem 1rem; } }\n\n.o-tabs__panel {\n  position: relative;\n  /* ---\nsection: tabs\ntitle: Tab Panel\norder: 1\n---\nA tab panel in a tab interface\n\n#### Usage:\n```example:html\n<section id=\"tabs\">\n  <h5>טאבים</h5>\n  <ul class=\"o-inline-list o-tabs\" role=\"tablist\">\n    <li class=\"o-tab\" role=\"presentation\">\n      <a href=\"#tabpanel1\" role=\"tab\" aria-controls=\"tabpanel1\" aria-selected=\"true\">טאב 1</a>\n    </li>\n    <li class=\"o-tab\" role=\"presentation\">\n      <a href=\"#tabpanel2\" role=\"tab\" aria-controls=\"tabpanel2\">טאב 2</a>\n    </li>\n  </ul>\n\n  <section id=\"tabpanel1\" class=\"o-tabpanel\" role=\"tabpanel\" >טאב פעיל</section>\n  <section id=\"tabpanel2\" class=\"o-tabpanel\" role=\"tabpanel\" aria-hidden=\"true\">טאב לא פעיל</section>\n</section>\n```\n*/ }\n  .o-tabs__panel[aria-hidden='true'] {\n    display: none; }\n    .o-tabs__panel[aria-hidden='true']:after {\n      opacity: 1;\n      visibility: hidden; }\n  .o-tabs__panel:after {\n    right: 0;\n    z-index: 1;\n    animation: o-tabpanel-bg forwards 0.25s 0.15s cubic-bezier(0, 0, 0.2, 0);\n    background-color: #bfe0e7;\n    content: '';\n    height: 100%;\n    position: absolute;\n    speak: none;\n    top: 0;\n    visibility: visible;\n    width: 100%; }\n\n@keyframes o-tabpanel-bg {\n  99% {\n    opacity: 0;\n    visibility: visible; }\n  100% {\n    opacity: 0;\n    visibility: hidden; } }\n\n@media (min-width: 37.5em) {\n  .l-wrapper {\n    max-width: 100rem; } }\n\n@media (min-width: 48em) {\n  .l-wrapper {\n    max-width: 128rem; } }\n\n@media (min-width: 64em) {\n  .l-wrapper {\n    max-width: 167.833333333rem; } }\n\n@media (min-width: 80em) {\n  .l-wrapper {\n    max-width: 180.428571429rem; } }\n\n/* ---\n section: Layout\n title: two columns\n ---\n A main-column-sidebar layout.\n\n```example:html\n<main class='l-wrapper u-mh--auto'>\n  <div dir=\"rtl\" class=\"l-two-cols  [ o-grid  o-grid--gutter-0 ]\">\n    <article class= \"l-two-cols__main\n                [ o-grid__item  o-grid__item--col  o-grid__item--12-of-12 ]\">\n      <div style=\"height: 200px; background-color: #00829e\"></div>\n    </article>\n\n    <aside\n      class= \"l-two-cols__aside\n        [ o-grid__item  o-grid__item--col  o-grid__item--12-of-12 ]\">\n      <div style=\"height: 200px; background-color: #00829e\"></div>\n    </aside>\n  </div>\n</main>\n```\n*/\n@media (min-width: 64em) {\n  .l-two-cols__main {\n    flex-basis: 109.833333333rem;\n    max-width: 109.833333333rem; }\n    .no-flexbox .l-two-cols__main {\n      width: 109.833333333rem; } }\n\n@media (min-width: 80em) {\n  .l-two-cols__main {\n    flex-basis: 129.571428571rem;\n    max-width: 129.571428571rem; }\n    .no-flexbox .l-two-cols__main {\n      width: 129.571428571rem; } }\n\n@media (min-width: 64em) {\n  .l-two-cols__aside {\n    flex-basis: 58rem;\n    max-width: 58rem; }\n    .no-flexbox .l-two-cols__aside {\n      width: 58rem; } }\n\n@media (min-width: 80em) {\n  .l-two-cols__aside {\n    flex-basis: 50.8571428571rem;\n    max-width: 50.8571428571rem; }\n    .no-flexbox .l-two-cols__aside {\n      width: 50.8571428571rem; } }\n\n@media (min-width: 64em) {\n  .l-two-cols__aside__content {\n    flex-grow: 1;\n    position: relative; }\n    .l-two-cols__aside__content:before {\n      right: -4rem;\n      z-index: -3;\n      background-color: #cbcbcb;\n      bottom: 0;\n      content: '';\n      height: 100%;\n      position: absolute;\n      top: 0;\n      width: 1px; }\n    .l-two-cols__aside__content--b:before {\n      content: none; } }\n\n.c-masthead__logo {\n  font-size: 9rem; }\n  .c-logo {\n    height: 1em;\n    vertical-align: top;\n    width: 2.2915em; }\n  .c-logo--1-line {\n    width: 7.2052631579em; }\n  @media (min-width: 64em) {\n    .c-masthead__logo {\n      font-size: 11rem; } }\n  @media (min-width: 80em) {\n    .c-masthead__logo {\n      font-size: 10rem; } }\n\n.c-masthead__primary-nav {\n  -webkit-overflow-scrolling: touch;\n  -ms-overflow-style: -ms-autohiding-scrollbar; }\n  .c-masthead__primary-nav > :hover {\n    color: #fff; }\n  .c-masthead__primary-nav > * + * {\n    margin-right: 2rem; }\n\n.c-masthead__secondary-nav > :hover {\n  color: #00829e; }\n\n.c-masthead__bg {\n  z-index: -1; }\n  .c-masthead__bg > svg {\n    transform: translateY(100%); }\n\n.c-masthead:before, .c-masthead:after {\n  z-index: -1;\n  pointer-events: none;\n  position: absolute;\n  speak: none;\n  touch-events: none;\n  width: 100%; }\n\n.c-masthead:before {\n  background: linear-gradient(180deg, #00829e, #00a0b0);\n  content: '';\n  height: 100%;\n  top: 0; }\n  @media (min-width: 37.5em) {\n    .c-masthead:before {\n      height: 80%; } }\n\n.c-masthead:after {\n  /* stylelint-disable-line max-line-length */\n  content: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg' viewBox%3D'0 0 250 40'%3E%3Cdefs%3E%3ClinearGradient id%3D'mastheadAccent' x1%3D'0' x2%3D'0' y1%3D'0' y2%3D'1'%3E%3Cstop stop-color%3D'%2300a0b0' offset%3D'30%' %2F%3E%3Cstop stop-color%3D'%230cc' offset%3D'100%' %2F%3E%3C%2FlinearGradient%3E%3C%2Fdefs%3E%3Cpolygon points%3D'0%2C20 0%2C0 256%2C0' fill%3D'url%28%23mastheadAccent%29' %2F%3E%3C%2Fsvg%3E\");\n  top: 100%; }\n  @media (min-width: 37.5em) {\n    .c-masthead:after {\n      top: 80%; } }\n\n.c-masthead__content-wrapper {\n  z-index: 1; }\n\n.c-masthead__logo {\n  font-size: 10rem; }\n  @media (min-width: 37.5em) {\n    .c-masthead__logo {\n      font-size: 11rem; } }\n  @media (min-width: 80em) {\n    .c-masthead__logo {\n      font-size: 10rem; } }\n\n.c-masthead__primary-nav {\n  -webkit-overflow-scrolling: touch;\n  -ms-overflow-style: -ms-autohiding-scrollbar; }\n  .c-masthead__primary-nav > :hover {\n    color: #fff; }\n  .c-masthead__primary-nav > * + * {\n    margin-right: 2rem; }\n\n.c-masthead__secondary-nav > :hover {\n  color: #00829e; }\n\n.c-footer__logo {\n  font-size: 4rem; }\n  @media (min-width: 37.5em) {\n    .c-footer__logo {\n      font-size: 8rem; } }\n  @media (min-width: 64em) {\n    .c-footer__logo {\n      font-size: 10rem; } }\n\n.c-listing-social {\n  left: 0;\n  max-width: 7rem;\n  background-color: transparent;\n  display: flex;\n  height: 100%;\n  min-width: 0;\n  position: absolute;\n  top: 0;\n  transition: all 0.25s cubic-bezier(0.55, 0, 0.1, 1); }\n  @media (min-width: 80em) {\n    .c-listing-social {\n      max-width: 6rem; } }\n\n.c-listing-social__content {\n  align-items: center;\n  color: #fff;\n  display: none;\n  fill: #00829e;\n  flex-grow: 1;\n  justify-content: center; }\n  .c-listing-social__content > * :hover,\n  .c-listing-social__content > * :focus,\n  .c-listing-social__content > * :active {\n    color: #cce6ec; }\n  .c-listing-social__content > * + * {\n    margin-right: 1rem; }\n\n.c-listing-social__toggle {\n  background-color: #cbcbcb;\n  color: #00829e;\n  height: 100%;\n  outline: none;\n  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1); }\n  .c-listing-social__toggle:hover, .c-listing-social__toggle:focus, .c-listing-social__toggle:active {\n    background-color: #bfe0e7;\n    color: #005b6f; }\n\n.c-listing-social__close {\n  display: none; }\n\n.c-listing-social-is-expanded {\n  background-color: #00829e;\n  max-width: 100%;\n  min-width: 100%; }\n  .c-listing-social-is-expanded .c-listing-social__toggle {\n    background-color: #1a8fa8;\n    color: #fff; }\n    .c-listing-social-is-expanded .c-listing-social__toggle:hover, .c-listing-social-is-expanded .c-listing-social__toggle:focus, .c-listing-social-is-expanded .c-listing-social__toggle:active {\n      background-color: #4da8bb; }\n  .c-listing-social-is-expanded .c-listing-social__content {\n    display: flex; }\n  .c-listing-social-is-expanded .c-listing-social__open {\n    display: none; }\n  .c-listing-social-is-expanded .c-listing-social__close {\n    display: block;\n    margin: 0 auto; }\n\n.c-bounty-list__teaser + .c-bounty-list__teaser {\n  padding-top: 1rem; }\n\n@media (max-width: 37.49em) {\n  .c-hero-search:before, .c-hero-search:after {\n    z-index: -2;\n    content: '';\n    position: absolute;\n    speak: none;\n    width: 100%; }\n  .c-hero-search:before {\n    background-color: #fff;\n    height: 100%;\n    top: 0; }\n  .c-hero-search:after {\n    /* stylelint-disable-line max-line-length */\n    content: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg' viewBox%3D'0 0 250 20'%3E%3Cpolygon points%3D'256%2C10 0%2C0 256%2C0' fill%3D'%23fff' %2F%3E%3C%2Fsvg%3E\");\n    top: 100%; } }\n\n.c-hero-search__inputs:after {\n  content: '';\n  opacity: 0; }\n\n.c-hero-search__inputs.is-sticky {\n  /* stylelint-disable-line max-line-length */\n  z-index: 900;\n  background: linear-gradient(180deg, #00a0b0, #0cc);\n  transition: background-color 0.5s cubic-bezier(0.55, 0, 0.1, 1); }\n  .c-hero-search__inputs.is-sticky:after {\n    bottom: 0;\n    content: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg' viewBox%3D'0 0 250 15'%3E%3Cdefs%3E%3ClinearGradient id%3D'heroSearchAccent' x1%3D'0' x2%3D'0' y1%3D'0' y2%3D'1'%3E%3Cstop stop-color%3D'%2300bdc3' offset%3D'30%' %2F%3E%3Cstop stop-color%3D'%230cc' offset%3D'100%' %2F%3E%3C%2FlinearGradient%3E%3C%2Fdefs%3E%3Cpolygon points%3D'256%2C3 0%2C0 256%2C0' fill%3D'%230cc'%3E%3C%2Fpolygon%3E%3C%2Fsvg%3E\");\n    opacity: 1;\n    pointer-events: none;\n    position: absolute;\n    touch-events: none;\n    transform: translateY(100%);\n    transition: opacity 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n    width: 100%; }\n  .c-hero-search__inputs.is-sticky button {\n    background-color: #fff;\n    color: #00829e; }\n    .c-hero-search__inputs.is-sticky button:hover, .c-hero-search__inputs.is-sticky button:focus, .c-hero-search__inputs.is-sticky button:active {\n      background-color: #00829e;\n      color: #fff; }\n\n:placeholder-shown + .c-hero-search__caret {\n  right: 0.7rem;\n  animation: o-hero-search__caret 0.7s linear infinite alternate;\n  background-color: #80c1cf;\n  height: 100%;\n  opacity: 1;\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  touch-events: none;\n  width: 1px; }\n\n:focus + .c-hero-search__caret {\n  display: none; }\n\n@keyframes o-hero-search__caret {\n  0% {\n    opacity: 0; }\n  40% {\n    opacity: 0; }\n  60% {\n    opacity: 1; } }\n\n.c-centerpiece__item {\n  transition: all 0.25s 0.25s cubic-bezier(0.55, 0, 0.1, 1); }\n  .c-centerpiece__item:before {\n    transform-origin: bottom right;\n    background-color: rgba(191, 224, 231, 0.7);\n    bottom: 0;\n    content: '';\n    height: 100%;\n    position: absolute;\n    transform: scale(0, 0);\n    transform: scale3d(0, 0, 1);\n    transition: all 0.25s 0.25s cubic-bezier(0.55, 0, 0.1, 1);\n    width: 100%; }\n  .c-centerpiece__item:hover {\n    background-color: #bfe0e7; }\n    .c-centerpiece__item:hover, .c-centerpiece__item:hover:before {\n      transition-duration: 0.15s;\n      transition-timing-function: cubic-bezier(0, 0, 0.2, 0); }\n    .c-centerpiece__item:hover:before {\n      transform: scale(1, 1);\n      transform: scale3d(1, 1, 1); }\n\n.c-search-results-filter__clear-date {\n  display: block; }\n  :placeholder-shown ~ .c-search-results-filter__clear-date {\n    display: none; }\n\n/* ---\nsection: Clearfix Util\ntitle: Introduction\norder: -10\n---\nForce an element to clear its floated child element and\nprevent its layout from collapsing.\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-clearfix\n```\n\n#### Usage\nImport JigSass Utils Clearfix into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-clearfix/scss/index';\n```\n\nImporting the file will not create any styles by itself. You would need to indicate that the\n`.u-cf` class should actually be generated in each component or object it is used in:\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-cf);\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-cf);\n\n  ...\n}\n```\n\n```scss\n// _c.baz.scss\n.baz {\n  @include jigsass-util(u-cf);\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Clearfix partial was imported into the main file:\n*/\n.u-cf {\n  /* ---\nsection: Clearfix Util\ntitle: Clear Fix\norder: 1\n---\n```scss\n// output.css\n.u-cf:after {\n  clear: both;\n  content: '';\n  display: block;\n}\n```\n\n```example:html\n<div class='u-cf' style='background-color: #09a5d9;'>\n  <div class=\"fpo\">Cleared float</div>\n</div>\n```\n*/ }\n  .u-cf:after {\n    clear: both;\n    content: '';\n    display: block; }\n\n/* ---\nsection: Color Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated `color` and `background-color` utility classes.\n\nJigSass Utils Color works in tandem with [JigSass Tools Color](https://txhawks.github.io/jigsass-tools-color)\nand allows defining color and background-color classes based on the color palette defined in\n[$jigsass-colors](https://txhawks.github.io/jigsass-tools-color/#variable-jigsass-colors) as well as\nadjusting them on the fly.\n\nColor utils can be limited to a certain state (i.e., `hover`, `focus`,  etc.)\n\nThe syntax for generating a color util is: `$modifier: '<color-name>[(<adjustment-function>,<arg>)][:state]'`\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `u-c--<color-name>` (example: u-c--brand)\n  - `u-c--<color-name>(<adjustment-func>,<arg>)` (example: u-c--brand(tint-2))\n  - `u-c--<color-name>:<state>` (example: u-c--brand:focus)\n  - `u-c--<color-name>(<adjustment-func>,<arg>):<state>` (example: u-c--brand(shade-20%):focus)\n\n\n  - `u-bgc--<color-name>`\n  - `u-bgc--<color-name>(<adjustment-func>,<arg>)`\n  - `u-bgc--<color-name>:<state>`\n  - `u-bgc--<color-name>(<adjustment-func>,<arg>):<state>`\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-color\n```\n\n#### Usage\n\nImport JigSass Utils Color into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-color/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Utils Color does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual color\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-c, $modifier: primary); // <-- color: #09a5d9\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-c, $modifier: 'black(tint,10%)');  // <-- color: #191919\n  @include jigsass-util(u-bgc, $modifier: 'white(shade,30%)', $from: large); // <-- background-color: #b2b2b2 from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Utils Color partial was imported into the main file.\n\n\nJigSass Utils Color classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-c-<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n.u-bgc-<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-c, $modifier: secondary);\n```\nwill generate the `.u-c--secondary` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-bgc, $modifier: primary, $until: medium);\n```\n\nwill generate the `.u-bgc--primary--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-c, $modifier: primary, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-c--primary--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n.u-c--text-pale {\n  color: #6c6c6c;\n  /* ---\nsection: Color Utils\ntitle: color: u-c--text-pale\norder: 1\n---\nA utility class for setting the `color` of an element to `#6c6c6c`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: text-pale [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--text-pale'>\n  This element's `color` is set to `#6c6c6c`\n  .\n</p>\n```\n*/ }\n\n.u-c--primary {\n  color: #00829e;\n  /* ---\nsection: Color Utils\ntitle: color: u-c--primary\norder: 2\n---\nA utility class for setting the `color` of an element to `#00829e`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: primary [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--primary'>\n  This element's `color` is set to `#00829e`\n  .\n</p>\n```\n*/ }\n\n.u-c--text-inverse {\n  color: #fff;\n  /* ---\nsection: Color Utils\ntitle: color: u-c--text-inverse\norder: 3\n---\nA utility class for setting the `color` of an element to `#fff`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: text-inverse [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--text-inverse'>\n  This element's `color` is set to `#fff`\n  .\n</p>\n```\n*/ }\n\n.u-c--masthead {\n  color: \"masthead\";\n  /* ---\nsection: Color Utils\ntitle: color: u-c--masthead\norder: 4\n---\nA utility class for setting the `color` of an element to `masthead`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: masthead [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--masthead'>\n  This element's `color` is set to `masthead`\n  .\n</p>\n```\n*/ }\n\n.u-c--text--inverse {\n  color: \"text--inverse\";\n  /* ---\nsection: Color Utils\ntitle: color: u-c--text--inverse\norder: 5\n---\nA utility class for setting the `color` of an element to `text--inverse`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: text--inverse [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--text--inverse'>\n  This element's `color` is set to `text--inverse`\n  .\n</p>\n```\n*/ }\n\n.u-c--bezeq {\n  color: #2b2e8f;\n  /* ---\nsection: Color Utils\ntitle: color: u-c--bezeq\norder: 6\n---\nA utility class for setting the `color` of an element to `#2b2e8f`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: bezeq [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--bezeq'>\n  This element's `color` is set to `#2b2e8f`\n  .\n</p>\n```\n*/ }\n\n.u-c--text-muted {\n  color: #b6b6b6;\n  /* ---\nsection: Color Utils\ntitle: color: u-c--text-muted\norder: 7\n---\nA utility class for setting the `color` of an element to `#b6b6b6`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: text-muted [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--text-muted'>\n  This element's `color` is set to `#b6b6b6`\n  .\n</p>\n```\n*/ }\n\n.u-c--text-promoted {\n  color: #956c10;\n  /* ---\nsection: Color Utils\ntitle: color: u-c--text-promoted\norder: 8\n---\nA utility class for setting the `color` of an element to `#956c10`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: text-promoted [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--text-promoted'>\n  This element's `color` is set to `#956c10`\n  .\n</p>\n```\n*/ }\n\n.u-c--secondary {\n  color: #ed143d;\n  /* ---\nsection: Color Utils\ntitle: color: u-c--secondary\norder: 9\n---\nA utility class for setting the `color` of an element to `#ed143d`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: secondary [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--secondary'>\n  This element's `color` is set to `#ed143d`\n  .\n</p>\n```\n*/ }\n\n.u-c--primaty {\n  color: \"primaty\";\n  /* ---\nsection: Color Utils\ntitle: color: u-c--primaty\norder: 10\n---\nA utility class for setting the `color` of an element to `primaty`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: primaty [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--primaty'>\n  This element's `color` is set to `primaty`\n  .\n</p>\n```\n*/ }\n\n.u-c--primary\\(jigsass-shade\\,5\\) {\n  color: #006277;\n  /* ---\nsection: Color Utils\ntitle: color: u-c--primary(jigsass-shade,5)\norder: 11\n---\nA utility class for setting the `color` of an element to `#006277`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: primary(jigsass-shade,5) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--primary(jigsass-shade,5)'>\n  This element's `color` is set to `#006277`\n  .\n</p>\n```\n*/ }\n\n.u-c--negative {\n  color: #ed143d;\n  /* ---\nsection: Color Utils\ntitle: color: u-c--negative\norder: 12\n---\nA utility class for setting the `color` of an element to `#ed143d`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: negative [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--negative'>\n  This element's `color` is set to `#ed143d`\n  .\n</p>\n```\n*/ }\n\n.u-c--text--muted {\n  color: \"text--muted\";\n  /* ---\nsection: Color Utils\ntitle: color: u-c--text--muted\norder: 13\n---\nA utility class for setting the `color` of an element to `text--muted`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: text--muted [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--text--muted'>\n  This element's `color` is set to `text--muted`\n  .\n</p>\n```\n*/ }\n\n@media (max-width: 37.49em) {\n  .u-c--has-card--until-s {\n    color: #e2e6e7;\n    /* ---\nsection: Color Utils\ntitle: color: u-c--has-card\norder: 14\n---\nA utility class for setting the `color` of an element to `#e2e6e7`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-c, $modifier: has-card [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-c--has-card'>\n  This element's `color` is set to `#e2e6e7`\n  .\n</p>\n```\n*/ } }\n\n.u-bgc--masthead {\n  background-color: \"masthead\";\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--masthead\norder: 115\n---\nA utility class for setting the `background-color` of an element to `masthead`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: masthead [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--masthead'>\n  This element's `background-color` is set to `masthead`\n  .\n</p>\n```\n*/ }\n\n.u-bgc--bg {\n  background-color: #fff;\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--bg\norder: 116\n---\nA utility class for setting the `background-color` of an element to `#fff`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: bg [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--bg'>\n  This element's `background-color` is set to `#fff`\n  .\n</p>\n```\n*/ }\n\n.u-bgc--bezeq {\n  background-color: #2b2e8f;\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--bezeq\norder: 117\n---\nA utility class for setting the `background-color` of an element to `#2b2e8f`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: bezeq [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--bezeq'>\n  This element's `background-color` is set to `#2b2e8f`\n  .\n</p>\n```\n*/ }\n\n.u-bgc--bezeq-pale {\n  background-color: #c1d8f2;\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--bezeq-pale\norder: 118\n---\nA utility class for setting the `background-color` of an element to `#c1d8f2`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: bezeq-pale [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--bezeq-pale'>\n  This element's `background-color` is set to `#c1d8f2`\n  .\n</p>\n```\n*/ }\n\n.u-bgc--primary {\n  background-color: #00829e;\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--primary\norder: 119\n---\nA utility class for setting the `background-color` of an element to `#00829e`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: primary [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--primary'>\n  This element's `background-color` is set to `#00829e`\n  .\n</p>\n```\n*/ }\n\n.u-bgc--neutral\\(jigsass-tint\\,2\\) {\n  background-color: #424242;\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--neutral(jigsass-tint,2)\norder: 120\n---\nA utility class for setting the `background-color` of an element to `#424242`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: neutral(jigsass-tint,2) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--neutral(jigsass-tint,2)'>\n  This element's `background-color` is set to `#424242`\n  .\n</p>\n```\n*/ }\n\n.u-bgc--bg-neutral-b {\n  background-color: #cbcbcb;\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--bg-neutral-b\norder: 121\n---\nA utility class for setting the `background-color` of an element to `#cbcbcb`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: bg-neutral-b [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--bg-neutral-b'>\n  This element's `background-color` is set to `#cbcbcb`\n  .\n</p>\n```\n*/ }\n\n.u-bgc--bg-neutral {\n  background-color: whitesmoke;\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--bg-neutral\norder: 122\n---\nA utility class for setting the `background-color` of an element to `whitesmoke`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: bg-neutral [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--bg-neutral'>\n  This element's `background-color` is set to `whitesmoke`\n  .\n</p>\n```\n*/ }\n\n.u-bgc--bg-neutral-dark {\n  background-color: #2d2d2d;\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--bg-neutral-dark\norder: 123\n---\nA utility class for setting the `background-color` of an element to `#2d2d2d`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: bg-neutral-dark [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--bg-neutral-dark'>\n  This element's `background-color` is set to `#2d2d2d`\n  .\n</p>\n```\n*/ }\n\n.u-bgc--bg-neutral-c {\n  background-color: #e2e6e7;\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--bg-neutral-c\norder: 124\n---\nA utility class for setting the `background-color` of an element to `#e2e6e7`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: bg-neutral-c [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--bg-neutral-c'>\n  This element's `background-color` is set to `#e2e6e7`\n  .\n</p>\n```\n*/ }\n\n.u-bgc--bg-accented\\:hover:hover {\n  background-color: #bfe0e7;\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--bg-accented:hover\norder: 125\n---\nA utility class for setting the `background-color` of an element to `#bfe0e7`\nwhen  :hovered.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: bg-accented:hover [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--bg-accented:hover'>\n  This element's `background-color` is set to `#bfe0e7`\n  when  :hovered.\n</p>\n```\n*/ }\n\n.u-bgc--bg-accented {\n  background-color: #bfe0e7;\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--bg-accented\norder: 126\n---\nA utility class for setting the `background-color` of an element to `#bfe0e7`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: bg-accented [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--bg-accented'>\n  This element's `background-color` is set to `#bfe0e7`\n  .\n</p>\n```\n*/ }\n\n.u-bgc--neutral\\(jigsass-tint\\,5\\) {\n  background-color: #626262;\n  /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--neutral(jigsass-tint,5)\norder: 127\n---\nA utility class for setting the `background-color` of an element to `#626262`\n.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: neutral(jigsass-tint,5) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--neutral(jigsass-tint,5)'>\n  This element's `background-color` is set to `#626262`\n  .\n</p>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-bgc--bg--from-s {\n    background-color: #fff; } }\n\n@media (max-width: 37.49em) {\n  .u-bgc--bg\\:before--until-s:before {\n    background-color: #fff;\n    /* ---\nsection: Color Utils\ntitle: background-color: u-bgc--bg:before\norder: 128\n---\nA utility class for setting the `background-color` of an element to `#fff`\nwhen  :beforeed.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bgc, $modifier: bg:before [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-bgc--bg:before'>\n  This element's `background-color` is set to `#fff`\n  when  :beforeed.\n</p>\n```\n*/ } }\n\n/* ---\nsection: Display Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA collection of dynamically generated css `display` utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions (It modifiies the user agent's default display).\nE.g., the `display: none` utility class name is `.u-d--n`.\n\n#### Available classes\n  - `.u-d--b` (display: block)\n  - `.u-d--f` (display: flex)\n  - `.u-d--if` (display: inline-flex)\n  - `.u-d--i` (display: inline)\n  - `.u-d--ib` (display: inline-block)\n  - `.u-d--inher` (display: inherit)\n  - `.u-d--init` (display: initial)\n  - `.u-d--li` (display: list-item)\n  - `.u-d--n` (display: none)\n  - `.u-d--tb` (display: table)\n  - `.u-d--iteb` (display: inline-table)\n  - `.u-d--tbcp` (display: table-caption)\n  - `.u-d--tbcl` (display: table-column)\n  - `.u-d--tbclg` (display: table-column-group)\n  - `.u-d--tbhg` (display: table-header-group)\n  - `.u-d--tbfg` (display: table-footer-group)\n  - `.u-d--tbr` (display: table-row)\n  - `.u-d--tbrg` (display: table-row-group)\n  - `.u-d--tbc` (display: table-cell)\n  - `.u-d--rb` (display: ruby)\n  - `.u-d--rbb` (display: ruby-base)\n  - `.u-d--rbbg` (display: ruby-base-group)\n  - `.u-d--rbt` (display: ruby-text)\n  - `.u-d--rbtg` (display: ruby-text-group)\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-display\n```\n\n#### Usage\nImport JigSass Utils Display into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-display/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Display does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual display\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-d, $modifier: b); // <-- display: block\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-d, $modifier: ib);  // <-- display: inline-block\n  @include jigsass-util(\n    u-d,\n    $modifier: f,\n    $from: large\n  ); // <-- display: flex from large bp an on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Display partial was imported into the main file.\n\n\nJigSass Display classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a display class, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.u-d--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-d, $modifier: f);\n```\nwill generate the `.u-d--f` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-d, $modifier: f, $until: medium);\n```\n\nwill generate the `.u-d--f--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-d, $modifier: f, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-d--f--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-display.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-display\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-display.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-display\n*/\n.u-d--ib {\n  display: inline-block;\n  /* ---\nsection: Display Utils\ntitle: u-d--ib (inline-block)\norder: 1\n---\nA util to modify an element's `display` property value to\n`inline-block`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-d, $modifier: inline-block[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-d--ib'>\n  This div is display value is set to: <em>inline-block</em>.\n</div>\n```\n*/ }\n\n.u-d--f {\n  display: flex;\n  /* ---\nsection: Display Utils\ntitle: u-d--f (flex)\norder: 2\n---\nA util to modify an element's `display` property value to\n`flex`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-d, $modifier: flex[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-d--f'>\n  This div is display value is set to: <em>flex</em>.\n</div>\n```\n*/ }\n\n.u-d--b {\n  display: block;\n  /* ---\nsection: Display Utils\ntitle: u-d--b (block)\norder: 3\n---\nA util to modify an element's `display` property value to\n`block`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-d, $modifier: block[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-d--b'>\n  This div is display value is set to: <em>block</em>.\n</div>\n```\n*/ }\n\n.u-d--i {\n  display: inline;\n  /* ---\nsection: Display Utils\ntitle: u-d--i (inline)\norder: 4\n---\nA util to modify an element's `display` property value to\n`inline`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-d, $modifier: inline[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-d--i'>\n  This div is display value is set to: <em>inline</em>.\n</div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-d--ib--from-s {\n    display: inline-block; } }\n\n@media (max-width: 37.49em) {\n  .u-d--b--until-s {\n    display: block; } }\n\n/* ---\nsection: Flexbox Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated flexbox-related utility classes.\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-flexbox\n```\n\n\n#### Available classes\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\nE.g., the `justify-content: space-around` utility class name is `.u-jc--sa`.\n\n  - `.u-ac--c` (align-content: center)\n  - `.u-ac--fe` (align-content: flex-end)\n  - `.u-ac--fs` (align-content: flex-start)\n  - `.u-ac--s` (align-content: stretch)\n  - `.u-ac--sa` (align-content: space-around)\n  - `.u-ac--sb` (align-content: space-between)\n\n\n  - `.u-ai--b` (align-items: baseline)\n  - `.u-ai--c` (align-items: center)\n  - `.u-ai--fe` (align-items: flex-end)\n  - `.u-ai--fs` (align-items: flex-start)\n  - `.u-ai--s` (align-items: stretch)\n\n\n  - `.u-as--a` (align-self: auto)\n  - `.u-as--b` (align-self: baseline)\n  - `.u-as--c` (align-self: center)\n  - `.u-as--fe` (align-self: flex-end)\n  - `.u-as--fs` (align-self: flex-start)\n  - `.u-as--s` (align-self: stretch)\n\n\n  - `.u-jc--c` (justify-content: center)\n  - `.u-jc--fe` (justify-content: flex-end)\n  - `.u-jc--fs` (justify-content: flex-start)\n  - `.u-jc--sa` (justify-content: space-around)\n  - `.u-jc--sb` (justify-content: space-between)\n\n\n  - `.u-fb--a` (flex-basis: auto)\n  - `.u-fb--<width>` (flex-basis: &lt;width>)\n\n\n  - `.u-fxg--<number>` (flex-grow: &lt;number>)\n  - `.u-fxsh--<number>` (flex-shrink: &lt;number>)\n\n\n  - `.u-fxw--n` (flex-wrap: nowrap)\n  - `.u-fxw--w` (flex-wrap: wrap)\n  - `.u-fxw--wr` (flex-wrap: wrap-reverse)\n\n\n  - `.u-fxd--c` (flex-direction: column)\n  - `.u-fxd--cr` (flex-direction: column-reverse)\n  - `.u-fxd--r` (flex-direction: row)\n  - `.u-fxd--rr` (flex-direction: row-reverse)\n\n\n  - `.u-ord--<number>` (order: &lt;number>)\n  - `.u-ord--min-<number>` (order: -&lt;number>)\n\n\n#### Usage\nImport JigSass Utils Flexbox into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-flexbox/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Flexbox does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual flexbox\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-ord, $modifier: 1); // <-- order: 1\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-jc, $modifier: fe);  // <-- justify-content: flex-end\n  @include jigsass-util(u-ord, $modifier: min-1, $from: large); // <-- ordr: -1 from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Flexbox partial was imported into the main file.\n\n\nJigSass Flexbox classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a flexbox class, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.u-<util>--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-ord, $modifier: 2);\n```\nwill generate the `.u-ord--2` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-ord, $modifier: 2, $until: medium);\n```\n\nwill generate the `.u-ord--2--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-ord, $modifier: min2, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-ord-min2--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n.u-ai--fe {\n  align-items: flex-end;\n  /* ---\nsection: Flexbox Utils\ntitle: Align Items: flex-end\norder: 11\n---\n**.u-ai--fe**\n\nA utility class for setting an element's `align-items` value to flex-end.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ai, $modifier: fe [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper u-ai--fe\">\n  <div class=\"fpo\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te.\n  </div>\n  <div class=\"fpo\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his. Est an integre offendit instructior. Ea sed cibo dolor, vel an nostro ceteros democritum. Vel at ipsum commodo similique, at vix soluta eruditi assueverit, pro dico utinam forensibus ei. Ullum propriae pro no.\n  </div>\n  <div class=\"fpo\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his.\n  </div>\n  <div class=\"fpo\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his. Est an integre offendit instructior. Ea sed cibo dolor, vel an nostro ceteros democritum. Vel at ipsum commodo similique.\n  </div>\n</div>\n```\n*/ }\n\n.u-ai--c {\n  align-items: center;\n  /* ---\nsection: Flexbox Utils\ntitle: Align Items: center\norder: 12\n---\n**.u-ai--c**\n\nA utility class for setting an element's `align-items` value to center.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ai, $modifier: c [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper u-ai--c\">\n  <div class=\"fpo\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te.\n  </div>\n  <div class=\"fpo\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his. Est an integre offendit instructior. Ea sed cibo dolor, vel an nostro ceteros democritum. Vel at ipsum commodo similique, at vix soluta eruditi assueverit, pro dico utinam forensibus ei. Ullum propriae pro no.\n  </div>\n  <div class=\"fpo\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his.\n  </div>\n  <div class=\"fpo\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his. Est an integre offendit instructior. Ea sed cibo dolor, vel an nostro ceteros democritum. Vel at ipsum commodo similique.\n  </div>\n</div>\n```\n*/ }\n\n.u-as--fs {\n  align-self: flex-start;\n  /* ---\nsection: Flexbox Utils\ntitle: Align Self: flex-start\norder: 23\n---\n**.u-as--fs**\n\nA utility class for setting an element's `align-self` value to flex-start.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-as, $modifier: fs [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper\" style=\"align-items: flex-end\";>\n  <div class=\"fpo\" style=\"width: 25%\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his. Est an integre offendit instructior. Ea sed cibo dolor, vel an nostro ceteros democritum. Vel at ipsum commodo similique, at vix soluta eruditi assueverit, pro dico utinam forensibus ei. Ullum propriae pro no.\n  </div>\n  <div class=\"fpo u-as--fs\" style=\"width: 25%\">\n    This element's <code>align-self</code> property is set to <code>flex-start</code>\n  </div>\n  <div class=\"fpo\" style=\"width: 25%\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his.\n  </div>\n  <div class=\"fpo\" style=\"width: 25%\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his. Est an integre offendit instructior. Ea sed cibo dolor, vel an nostro ceteros democritum. Vel at ipsum commodo similique.\n  </div>\n</div>\n```\n*/ }\n\n.u-jc--c {\n  justify-content: center;\n  /* ---\nsection: Flexbox Utils\ntitle: Justify Content: center\norder: 34\n---\n**.u-jc--c**\n\nA utility class for setting an element's `justify-content` value to center.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-jc, $modifier: c [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper u-jc--c\">\n  <div class=\"fpo\" style=\"width: 33%\"></div>\n  <div class=\"fpo\" style=\"width: 33%\"></div>\n</div>\n```\n*/ }\n\n.u-fxg--1 {\n  flex-grow: 1;\n  /* ---\nsection: Flexbox Utils\ntitle: Flex Grow: 1\norder: 105\n---\n**.u-fxg--1**\n\nA utility class for setting an element's `flex-grow` value to 1.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-fxg, $modifier: 1 [, $from, $until, $misc]);\n```\n*/ }\n\n.u-fxg--0 {\n  flex-grow: 0;\n  /* ---\nsection: Flexbox Utils\ntitle: Flex Grow: 0\norder: 106\n---\n**.u-fxg--0**\n\nA utility class for setting an element's `flex-grow` value to 0.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-fxg, $modifier: 0 [, $from, $until, $misc]);\n```\n*/ }\n\n.u-fxsh--0 {\n  flex-shrink: 0;\n  /* ---\nsection: Flexbox Utils\ntitle: Flex Shrink: 0\norder: 157\n---\n**.u-fxsh--0**\n\nA utility class for setting an element's `flex-shrink` value to 0.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-fxsh, $modifier: 0 [, $from, $until, $misc]);\n```\n*/ }\n\n.u-fxd--c {\n  flex-direction: column;\n  /* ---\nsection: Flexbox Utils\ntitle: Flex Direction: column\norder: 218\n---\n**.u-fxd--c**\n\nA utility class for setting an element's `flex-direction` value to column.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-fxd, $modifier: c [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper u-fxd--c\">\n  <div class=\"fpo\">item 1</div>\n  <div class=\"fpo\">item 2</div>\n  <div class=\"fpo\">item 3</div>\n</div>\n```\n*/ }\n\n/* ---\nsection: Float Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated float and clear utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-fl--start`: float: (left|right) (left in `LTR`, right in `RTL`)\n    - `[dir=ltr] .u-fl--start`: float: left\n    - `[dir=rtl] .u-fl--start`: float: right\n  - `.u-fl--end`: float: (right|left) (right in `LTR`, left in `RTL`)\n    - `[dir=ltr] .u-fl--end`: float: right\n    - `[dir=rtl] .u-fl--end`: float: left\n  - `.u-fl--n`: float: none\n  - `.u-fl--l`: float: left\n  - `.u-fl--r`: float: right\n\n  - `.u-cl--start`: clear: (left|right) (left in `LTR`, right in `RTL`)\n    - `[dir=ltr] .u-cl--start`: clear: left\n    - `[dir=rtl] .u-cl--start`: clear: right\n  - `.u-cl--end`: clear: (right|left) (right in `LTR`, left in `RTL`)\n    - `[dir=ltr] .u-cl--end`: clear: right\n    - `[dir=rtl] .u-cl--end`: clear: left\n  - `.u-cl--b`: clear: both\n  - `.u-cl--n`: clear: none\n  - `.u-cl--l`: clear: left\n  - `.u-cl--r`: clear: right\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-float\n```\n\n#### Usage\nImport JigSass Utils Float into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-float/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Float does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual float or clear\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-fl, $modifier: n); // <-- float: none;\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-cl, $modifier: b);  // <-- clear: both\n  @include jigsass-util(u-cl, $modifier: r, $from: large); // <-- clear: right from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Float partial was imported into the main file.\n\n\nJigSass Float classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a float or clear class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-fl--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-fl, $modifier: end);\n```\nwill generate the `.u-fl--end` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-fl, $modifier: start, $until: medium);\n```\n\nwill generate the `.u-fl--start--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-fl, $modifier: c, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-fl--c--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n.u-fl--end {\n  float: left;\n  /* ---\nsection: Float Utils\ntitle: float end\norder: 101\n---\n**.u-fl--end**\n\nFloat an element to the end\n\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-fl, $modifier: end [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo  u-fl--end'>\nThis element is floated to the end\n</p>\n```\n*/ }\n  [dir=ltr] .u-fl--end {\n    float: right; }\n  [dir=rtl] .u-fl--end {\n    float: left; }\n\n@media (min-width: 37.5em) {\n  .u-fl--end--from-s {\n    float: left; }\n    [dir=ltr] .u-fl--end--from-s {\n      float: right; }\n    [dir=rtl] .u-fl--end--from-s {\n      float: left; } }\n\n/* ---\nsection: Offset Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA collection of dynamically generated utility classes for offsetting positioned elements.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-t--<amount>`: top\n  - `.u-end--<amount>`: horizontal end (right in `ltr`, right in `ltr`)\n  - `.u-r--<amount>`: right\n  - `.u-b--<amount>`: bottom\n  - `.u-start--<amount>`: horizontal start (left in `ltr`, left in `ltr`)\n  - `.u-l--<amount>`: left\n\nWhere `<amount>` can be either a unitless number representing a number of\ntypographic rhythm units as defined in\n[$jigsass-sizes](https://txhawks.github.io/jigsass-tools-typography/#variable-jigsass-sizes)\na percentage, or a length specified in pixels.\n\nJigSass Offset also supports negative offsets, using `min-<number>` modifiers\n(e.g., `h-t--min-4`), as well as auto ofsets (e.g., `h-b--auto`).\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-offset\n```\n\n#### Usage\nImport JigSass Utils Offset into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-offset/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Offset does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual offset\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-t, $modifier: 6px); // <-- top: 6px\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-b, $modifier: 12px);  // <-- bottom: 12px\n  @include jigsass-util(u-b, $modifier: 0, $from: large); // <-- bottom: 0 from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Offset partial was imported into the main file.\n\n\nJigSass Offset classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a Offset class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-t--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-t, $modifier: 2);\n```\nwill generate the `.u-t--2` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-b, $modifier: min-4, $until: medium);\n```\n\nwill generate the `.u-b--min-4--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-l, $modifier: 20%, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-l--20%--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-offset.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-offset\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-offset.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-offset\n*/\n.u-t--0 {\n  top: 0rem;\n  /* ---\nsection:  Offset Utils\ntitle: u-t--0\norder: 1\n---\nA utility class to set the top offset of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-t, $modifier: 0 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-t--0'>\n  This element's top offest is set to\n  0 rhythm units\n</div>\n```\n*/ }\n\n.u-t--1 {\n  top: 1rem;\n  /* ---\nsection:  Offset Utils\ntitle: u-t--1\norder: 2\n---\nA utility class to set the top offset of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-t, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-t--1'>\n  This element's top offest is set to\n  1 rhythm units\n</div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-t--0--from-s {\n    top: 0rem; } }\n\n@media (min-width: 64em) {\n  .u-t--2--from-l {\n    top: 2rem;\n    /* ---\nsection:  Offset Utils\ntitle: u-t--2\norder: 3\n---\nA utility class to set the top offset of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-t, $modifier: 2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-t--2'>\n  This element's top offest is set to\n  2 rhythm units\n</div>\n```\n*/ } }\n\n.u-b--0 {\n  bottom: 0rem;\n  /* ---\nsection:  Offset Utils\ntitle: u-b--0\norder: 4\n---\nA utility class to set the bottom offset of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-b, $modifier: 0 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-b--0'>\n  This element's bottom offest is set to\n  0 rhythm units\n</div>\n```\n*/ }\n\n.u-b--1px {\n  bottom: 1px;\n  /* ---\nsection:  Offset Utils\ntitle: u-b--1px\norder: 5\n---\nA utility class to set the bottom offset of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-b, $modifier: 1px [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-b--1px'>\n  This element's bottom offest is set to\n  1px\n</div>\n```\n*/ }\n\n.u-start--0 {\n  right: 0rem;\n  /* ---\nsection:  Offset Utils\ntitle: u-start--0\norder: 6\n---\nA utility class to set the horizontal start offset of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-start, $modifier: 0 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-start--0'>\n  This element's horizontal start offest is set to\n  0 rhythm units\n</div>\n```\n*/ }\n  [dir=ltr] .u-start--0 {\n    left: 0rem; }\n  [dir=rtl] .u-start--0 {\n    right: 0rem; }\n\n@media (min-width: 64em) {\n  .u-start--min-1\\.5--from-l {\n    right: -1.5rem;\n    /* ---\nsection:  Offset Utils\ntitle: u-start--min-1.5\norder: 7\n---\nA utility class to set the horizontal start offset of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-start, $modifier: min-1.5 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-start--min-1.5'>\n  This element's horizontal start offest is set to\n  -1.5 rhythm units\n</div>\n```\n*/ }\n    [dir=ltr] .u-start--min-1\\.5--from-l {\n      left: -1.5rem; }\n    [dir=rtl] .u-start--min-1\\.5--from-l {\n      right: -1.5rem; } }\n\n.u-end--0 {\n  left: 0rem;\n  /* ---\nsection:  Offset Utils\ntitle: u-end--0\norder: 8\n---\nA utility class to set the horizontal end offset of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-end, $modifier: 0 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-end--0'>\n  This element's horizontal end offest is set to\n  0 rhythm units\n</div>\n```\n*/ }\n  [dir=ltr] .u-end--0 {\n    right: 0rem; }\n  [dir=rtl] .u-end--0 {\n    left: 0rem; }\n\n.u-end--1 {\n  left: 1rem;\n  /* ---\nsection:  Offset Utils\ntitle: u-end--1\norder: 9\n---\nA utility class to set the horizontal end offset of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-end, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-end--1'>\n  This element's horizontal end offest is set to\n  1 rhythm units\n</div>\n```\n*/ }\n  [dir=ltr] .u-end--1 {\n    right: 1rem; }\n  [dir=rtl] .u-end--1 {\n    left: 1rem; }\n\n/* ---\nsection: Overflow Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated `overflow` utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\nE.g., the `overflow: hidden` utility class name is `.u-ov--h`.\n\n#### Available classes\n\n  - `.u-ov--v` (overflow: visible)\n  - `.u-ov--h` (overflow: hidden)\n  - `.u-ov--s` (overflow: scroll)\n  - `.u-ov--a` (overflow: auto)\n\n\n  - `.u-ovx--v` (overflow-x: visible)\n  - `.u-ovx--h` (overflow-x: hidden)\n  - `.u-ovx--s` (overflow-x: scroll)\n  - `.u-ovx--a` (overflow-x: auto)\n\n\n  - `.u-ovy--v` (overflow-y: visible)\n  - `.u-ovy--h` (overflow-y: hidden)\n  - `.u-ovy--s` (overflow-y: scroll)\n  - `.u-ovy--a` (overflow-y: auto)\n\n\n  - `.u-tov--c` (text-overflow: clamp)\n  - `.u-tov--e` (text-overflow: ellipsis)\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-overflow\n```\n\n#### Usage\nImport JigSass Utils Overflow into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-overflow/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Overfolow does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual overflow\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-ov, $modifier: h); // <-- overfolow: hidden\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-ovx, $modifier: h);  // <-- overflow-x: hidden\n  @include jigsass-util(u-ovx, $modifier: s, $from: large); // <-- overflow-x: scroll from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Overflow partial was imported into the main file.\n\n\nJigSass Overflow classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a overflow class, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.u-ov--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n.u-ovx--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n.u-ovy--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n.u-tov--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-ov, $modifier: h);\n```\nwill generate the `.u-ov--h` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-ov, $modifier: h, $until: medium);\n```\n\nwill generate the `.u-ov--h--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-ov, $modifier: h, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-ov--h--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n.u-ov--a {\n  overflow: auto;\n  /* ---\nsection: Overflow Utils\ntitle: overflow auto\norder: 1\n---\n**.u-ov--a**\n\nA utility class for setting an element's overflow to auto.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ov, $modifier: a [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo   u-ov--a'>\n  This element's overflow is set to auto.\n  Lorem ipsum dolor sit amet, nam cu clita persius eruditi, qui ei explicari persecuti. Ut vim nominavi quaestio rationibus, sed graeci labore utroque at, agam lucilius perpetua quo et. Te vis modus volumus menandri, doctus pericula at eos, autem omittantur ius ut. Ea quo tantas graece mandamus. In nibh iriure molestie pri, te eam quot consul quaerendum, ius ea justo neglegentur\n</p>\n```\n*/ }\n\n.u-ov--h {\n  overflow: hidden;\n  /* ---\nsection: Overflow Utils\ntitle: overflow hidden\norder: 2\n---\n**.u-ov--h**\n\nA utility class for setting an element's overflow to hidden.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ov, $modifier: h [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo   u-ov--h'>\n  This element's overflow is set to hidden.\n  Lorem ipsum dolor sit amet, nam cu clita persius eruditi, qui ei explicari persecuti. Ut vim nominavi quaestio rationibus, sed graeci labore utroque at, agam lucilius perpetua quo et. Te vis modus volumus menandri, doctus pericula at eos, autem omittantur ius ut. Ea quo tantas graece mandamus. In nibh iriure molestie pri, te eam quot consul quaerendum, ius ea justo neglegentur\n</p>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-ov--h--from-s {\n    overflow: hidden; } }\n\n.u-ovx--h {\n  overflow-x: hidden;\n  /* ---\nsection: Overflow Utils\ntitle: overflow-x hidden\norder: 103\n---\n**.u-ovx--h**\n\nA utility class for setting an element's overflow-x to hidden.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ovx, $modifier: h [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo  fpo--x u-ovx--h'>\n  This element's overflow-x is set to hidden.\n  Lorem ipsum dolor sit amet, nam cu clita persius eruditi, qui ei explicari persecuti. Ut vim nominavi quaestio rationibus, sed graeci labore utroque at, agam lucilius perpetua quo et. Te vis modus volumus menandri, doctus pericula at eos, autem omittantur ius ut. Ea quo tantas graece mandamus. In nibh iriure molestie pri, te eam quot consul quaerendum, ius ea justo neglegentur\n</p>\n```\n*/ }\n\n.u-tov--e {\n  text-overflow: ellipsis;\n  /* ---\nsection: Overflow Utils\ntitle: text-overflow ellipsis\norder: 304\n---\n**.u-tov--e**\n\nA utility class for setting an element's text-overflow to ellipsis.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-tov, $modifier: e [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-ov--h fpo--x  u-tov--e'>\n  This element's text-overflow is set to ellipsis.\n  Lorem ipsum dolor sit amet, nam cu clita persius eruditi, qui ei explicari persecuti. Ut vim nominavi quaestio rationibus, sed graeci labore utroque at, agam lucilius perpetua quo et. Te vis modus volumus menandri, doctus pericula at eos, autem omittantur ius ut. Ea quo tantas graece mandamus. In nibh iriure molestie pri, te eam quot consul quaerendum, ius ea justo neglegentur\n</p>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-tov--e--from-s {\n    text-overflow: ellipsis; } }\n\n/* ---\nsection: Position Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA collection of dynamically generated `position` utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions (It modifiies the user agent's default position for the element).\nE.g., the `position: absolute` utility class name is `.u-pos--a`.\n\n#### Available classes\n  - `.u-pos--a` (position: absolute)\n  - `.u-pos--f` (position: fixed)\n  - `.u-pos--r` (position: relative)\n  - `.u-pos--s` (position: static)\n  - `.u-pos--stck` (position: sticky)\n\nAdditionally, JigSass Position provides the following helpers:\n  - `.u-pos--center` Used for vertically and horizontally centering `absolute` and `fixed`\n    positioned elements inside their first non-statically positioned ancestor (or `window`).\n    Will also work for `relative` positioned elements inside containers with explicit heights.\n  - `.u-pos--stretch` Used for stretching `absolute` and `fixed` positioned elements to the\n    dimensions of their first non-statically positioned ancestor (or `window`).\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-position\n```\n\n#### Usage\nImport JigSass Utils Position into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-position/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Position does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual class\nshould actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-pos, $modifier: a); // <-- position: absolute\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-pos, $modifier: r);  // <-- position: relative\n  @include jigsass-util(\n    u-pos,\n    $modifier: f,\n    $from: large\n  ); // <-- position: fixed, from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Position partial was imported into the main file.\n\n\nJigSass Position classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a position class, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.u-pos--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-pos, $modifier: f);\n```\nwill generate the `.u-pos--f` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-pos, $modifier: f, $until: medium);\n```\n\nwill generate the `.u-pos--f--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-pos, $modifier: f, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-pos--f--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-position.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-position\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-position.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-position\n*/\n.u-pos--a {\n  position: absolute;\n  /* ---\nsection: Position Utils\ntitle: u-pos--a (absolute)\norder: 1\n---\nA util to modify an element's `position` property value to\n`absolute`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pos, $modifier: absolute[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-pos--a'>\n  This div position is set to: <em>absolute</em>.\n</div>\n```\n  */ }\n\n.u-pos--r {\n  position: relative;\n  /* ---\nsection: Position Utils\ntitle: u-pos--r (relative)\norder: 2\n---\nA util to modify an element's `position` property value to\n`relative`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pos, $modifier: relative[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-pos--r'>\n  This div position is set to: <em>relative</em>.\n</div>\n```\n  */ }\n\n.u-pos--f {\n  position: fixed;\n  /* ---\nsection: Position Utils\ntitle: u-pos--f (fixed)\norder: 3\n---\nA util to modify an element's `position` property value to\n`fixed`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pos, $modifier: fixed[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-pos--f'>\n  This div position is set to: <em>fixed</em>.\n</div>\n```\n  */ }\n\n@media (min-width: 37.5em) {\n  .u-pos--a--from-s {\n    position: absolute; } }\n\n@media (min-width: 64em) {\n  .u-pos--stck--from-l {\n    position: sticky;\n    /* ---\nsection: Position Utils\ntitle: u-pos--stck (sticky)\norder: 4\n---\nA util to modify an element's `position` property value to\n`sticky`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pos, $modifier: sticky[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-pos--stck'>\n  This div position is set to: <em>sticky</em>.\n</div>\n```\n  */ } }\n\n/* ---\nsection: Size Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA collection of dynamically generated size-related utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-w--<amount>`: width\n  - `.u-w--auto`: width: auto\n  - `.u-miw--<amount>`: min-width\n  - `.u-miw--none`: min-width: none\n  - `.u-maw--<amount>`: max-width\n  - `.u-maw--none`: max-width: none\n\n  - `.u-h--<amount>`: height\n  - `.u-h--auto`: height: auto\n  - `.u-mih--<amount>`: min-height\n  - `.u-mih--none`: min-height: none\n  - `.u-mah--<amount>`: max-height\n  - `.u-mah--none`: max-height: none\n\n\nWhere `<amount>` can be either a unitless number representing a number of\ntypographic rhythm units as defined in\n[$jigsass-sizes](https://txhawks.github.io/jigsass-tools-typography/#variable-jigsass-sizes),\na percentage, or a length specified in pixels, ems or rems, auto or none.\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-size\n```\n\n#### Usage\nImport JigSass Utils Size into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-size/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Size does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual size\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-w, $modifier: 360px); // <-- width: 360px\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-miw, $modifier: 600px);  // <-- min-width: 600px\n  @include jigsass-util(\n    u-miw, $modifier: 1200px,\n    $from: large\n  ); // <-- max-width: 1200px from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Size partial was imported into the main file.\n\n\nJigSass Size classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a Size class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-w--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-h, $modifier: 50);\n```\nwill generate the `.u-h--50` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-h, $modifier: 10, $until: medium);\n```\n\nwill generate the `.u-h--10--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-mih, $modifier: 300px, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-mih--200px--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-size.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-size\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-size.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-size\n*/\n.u-w--100\\% {\n  width: 100%;\n  /* ---\nsection: Size Utils\ntitle: u-w--100%\norder: 1\n---\nA utility class to set the width of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-w, $modifier: 100% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-w--100%'>\n    This element has a width of\n    100%.\n  </div>\n```\n*/ }\n\n.u-w--90\\% {\n  width: 90%;\n  /* ---\nsection: Size Utils\ntitle: u-w--90%\norder: 2\n---\nA utility class to set the width of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-w, $modifier: 90% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-w--90%'>\n    This element has a width of\n    90%.\n  </div>\n```\n*/ }\n\n.u-w--2\\.5em {\n  width: 2.5em;\n  /* ---\nsection: Size Utils\ntitle: u-w--2.5em\norder: 3\n---\nA utility class to set the width of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-w, $modifier: 2.5em [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-w--2.5em'>\n    This element has a width of\n    2.5em.\n  </div>\n```\n*/ }\n\n.u-w--8 {\n  width: 8rem;\n  /* ---\nsection: Size Utils\ntitle: u-w--8\norder: 4\n---\nA utility class to set the width of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-w, $modifier: 8 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-w--8'>\n    This element has a width of\n    8 rhythm units.\n  </div>\n```\n*/ }\n\n.u-w--11 {\n  width: 11rem;\n  /* ---\nsection: Size Utils\ntitle: u-w--11\norder: 5\n---\nA utility class to set the width of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-w, $modifier: 11 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-w--11'>\n    This element has a width of\n    11 rhythm units.\n  </div>\n```\n*/ }\n\n.u-w--18 {\n  width: 18rem;\n  /* ---\nsection: Size Utils\ntitle: u-w--18\norder: 6\n---\nA utility class to set the width of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-w, $modifier: 18 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-w--18'>\n    This element has a width of\n    18 rhythm units.\n  </div>\n```\n*/ }\n\n@media (min-width: 80em) {\n  .u-w--10--from-xl {\n    width: 10rem;\n    /* ---\nsection: Size Utils\ntitle: u-w--10\norder: 7\n---\nA utility class to set the width of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-w, $modifier: 10 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-w--10'>\n    This element has a width of\n    10 rhythm units.\n  </div>\n```\n*/ } }\n\n.u-miw--10 {\n  min-width: 10rem;\n  /* ---\nsection: Size Utils\ntitle: u-miw--10\norder: 8\n---\nA utility class to set the min-width of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-miw, $modifier: 10 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-miw--10'>\n    This element has a min-width of\n    10 rhythm units.\n  </div>\n```\n*/ }\n\n.u-maw--none {\n  max-width: none;\n  /* ---\nsection: Size Utils\ntitle: u-maw--none\norder: 9\n---\nA utility class to set the max-width of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-maw, $modifier: none [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-maw--none'>\n    This element has a max-width of\n    none.\n  </div>\n```\n*/ }\n\n.u-maw--65vh {\n  max-width: 65vh;\n  /* ---\nsection: Size Utils\ntitle: u-maw--65vh\norder: 10\n---\nA utility class to set the max-width of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-maw, $modifier: 65vh [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-maw--65vh'>\n    This element has a max-width of\n    65vh.\n  </div>\n```\n*/ }\n\n.u-maw--65 {\n  max-width: 65rem;\n  /* ---\nsection: Size Utils\ntitle: u-maw--65\norder: 11\n---\nA utility class to set the max-width of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-maw, $modifier: 65 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-maw--65'>\n    This element has a max-width of\n    65 rhythm units.\n  </div>\n```\n*/ }\n\n@media (min-width: 48em) {\n  .u-maw--60--from-m {\n    max-width: 60rem;\n    /* ---\nsection: Size Utils\ntitle: u-maw--60\norder: 12\n---\nA utility class to set the max-width of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-maw, $modifier: 60 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-maw--60'>\n    This element has a max-width of\n    60 rhythm units.\n  </div>\n```\n*/ } }\n\n.u-h--100\\% {\n  height: 100%;\n  /* ---\nsection: Size Utils\ntitle: u-h--100%\norder: 13\n---\nA utility class to set the height of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-h, $modifier: 100% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-h--100%'>\n    This element has a height of\n    100%.\n  </div>\n```\n*/ }\n\n.u-h--1em {\n  height: 1em;\n  /* ---\nsection: Size Utils\ntitle: u-h--1em\norder: 14\n---\nA utility class to set the height of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-h, $modifier: 1em [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-h--1em'>\n    This element has a height of\n    1em.\n  </div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-h--80\\%--from-s {\n    height: 80%;\n    /* ---\nsection: Size Utils\ntitle: u-h--80%\norder: 15\n---\nA utility class to set the height of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-h, $modifier: 80% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-h--80%'>\n    This element has a height of\n    80%.\n  </div>\n```\n*/ } }\n\n.u-mah--90vh {\n  max-height: 90vh;\n  /* ---\nsection: Size Utils\ntitle: u-mah--90vh\norder: 16\n---\nA utility class to set the max-height of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mah, $modifier: 90vh [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-mah--90vh'>\n    This element has a max-height of\n    90vh.\n  </div>\n```\n*/ }\n\n@media (min-width: 64em) {\n  .u-mah--96vh--from-l {\n    max-height: 96vh;\n    /* ---\nsection: Size Utils\ntitle: u-mah--96vh\norder: 17\n---\nA utility class to set the max-height of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mah, $modifier: 96vh [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  u-mah--96vh'>\n    This element has a max-height of\n    96vh.\n  </div>\n```\n*/ } }\n\n/* ---\nsection: Spacing Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA collection of dynamically generated spacing utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-m--<amount>`: margin\n  - `.u-mt--<amount>`: margin top\n  - `.u-me--<amount>`: margin end (right in `LTR`, left in `RTL`)\n  - `.u-mb--<amount>`: margin bottom\n  - `.u-ms--<amount>`: margin start (left in `LTR`, right in `RTL`)\n  - `.u-mh--<amount>`: horizontal margins (left and right)\n  - `.u-mv--<amount>`: vertical margins (top and bottom)\n  - `.u-mr--<amount>`: margin right\n  - `.u-ml--<amount>`: margin left\n\n  - `.u-p--<amount>`: padding\n  - `.u-pt--<amount>`: padding top\n  - `.u-pe--<amount>`: padding end (right in `LTR`, left in `RTL`)\n  - `.u-pb--<amount>`: padding bottom\n  - `.u-ps--<amount>`: padding start (left in `LTR`, right in `RTL`)\n  - `.u-ph--<amount>`: horizontal padding\n  - `.u-pv--<amount>`: vertical padding\n  - `.u-pr--<amount>`: padding right\n  - `.u-pl--<amount>`: padding left\n\n\nWhere `<amount>` can be either a unitless number representing a number of\ntypographic rhythm units as defined in\n[$jigsass-sizes](https://txhawks.github.io/jigsass-tools-typography/#variable-jigsass-sizes)\na percentage, or a length specified in pixels.\n\nJigSass Spacing supports negative margins, using `min-<number>` modifiers\n(e.g., `h-mt--min-4`), as well as auto margins (e.g., `h-m--auto`).\n\nAdditionally, JigSass Spacing provide the autospace (`.u-autospace`) set of helper classes\nfor intelligently spacing an element's direct descendants:\n\n\n  - `.u-autospace--<amount>`\n  - `.u-autospace--<amount>(<n>up)`\n\n\n`.u-autospace--<amount>` classes will give all but the first direct descendant of the element carrying the\nclass a `margin-top` of `<amount>`.\n\nSimilarly, `.u-autospace--<amount>(<n>up)` classes will give all but the `n` direct descendants of the\nelement carrying the class a `margin-top` of `<amount>`, allowing for intelligent spacing of\ngrid-like layouts.\n\nFor an in-depth presentation of the technique, see\n[this article](http://alistapart.com/article/axiomatic-css-and-lobotomized-owls) by Heydon Pickering.\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-spacing\n```\n\n#### Usage\nImport JigSass Utils Spacing into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-spacing/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Spacing does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual spacing\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-mt, $modifier: 6px); // <-- margin-top: 6px\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-pb, $modifier: 12px);  // <-- padding-bottom: 12px\n  @include jigsass-util(u-m, $modifier: 0, $from: large); // <-- margin: 0 from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Spacing partial was imported into the main file.\n\n\nJigSass Spacing classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a Spacing class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-m--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-m, $modifier: 2);\n```\nwill generate the `.u-m--2` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-p, $modifier: 4, $until: medium);\n```\n\nwill generate the `.u-p--4--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-mb, $modifier: 12px, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-mb--12px--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-spacing.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-spacing\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-spacing.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-spacing\n*/\n.u-autospace--2 > * + * {\n  margin-top: 2rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-autospace--2\norder: 1\n---\nA utility class to intelligently space the direct descendants of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-autospace, $modifier: 2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b  u-autospace--2'>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  \n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n```\n*/ }\n\n.u-autospace--3 > * + * {\n  margin-top: 3rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-autospace--3\norder: 2\n---\nA utility class to intelligently space the direct descendants of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-autospace, $modifier: 3 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b  u-autospace--3'>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  \n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n```\n*/ }\n\n.u-autospace--1 > * + * {\n  margin-top: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-autospace--1\norder: 3\n---\nA utility class to intelligently space the direct descendants of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-autospace, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b  u-autospace--1'>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  \n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n```\n*/ }\n\n.u-autospace--4 > * + * {\n  margin-top: 4rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-autospace--4\norder: 4\n---\nA utility class to intelligently space the direct descendants of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-autospace, $modifier: 4 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b  u-autospace--4'>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  \n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n```\n*/ }\n\n.u-autospace--8 > * + * {\n  margin-top: 8rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-autospace--8\norder: 5\n---\nA utility class to intelligently space the direct descendants of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-autospace, $modifier: 8 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b  u-autospace--8'>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  \n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n```\n*/ }\n\n.u-autospace--6 > * + * {\n  margin-top: 6rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-autospace--6\norder: 6\n---\nA utility class to intelligently space the direct descendants of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-autospace, $modifier: 6 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b  u-autospace--6'>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  \n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n```\n*/ }\n\n.u-autospace--1\\(2up\\) > * + * {\n  /* ---\nsection: Spacing Utils\ntitle: u-autospace--1(2up)\norder: 7\n---\nA utility class to intelligently space the direct descendants of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-autospace, $modifier: 1(2up) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b fpo--autospace2 u-autospace--1(2up)'>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  \n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n```\n*/ }\n  .u-autospace--1\\(2up\\) > * + *:nth-child(n+3) {\n    margin-top: 1rem; }\n\n@media (min-width: 37.5em) {\n  .u-autospace--2\\(2up\\)--from-s > * + * {\n    /* ---\nsection: Spacing Utils\ntitle: u-autospace--2(2up)\norder: 8\n---\nA utility class to intelligently space the direct descendants of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-autospace, $modifier: 2(2up) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b fpo--autospace2 u-autospace--2(2up)'>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  \n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n```\n*/ }\n    .u-autospace--2\\(2up\\)--from-s > * + *:nth-child(n+3) {\n      margin-top: 2rem; } }\n\n@media (min-width: 37.5em) {\n  .u-autospace--2--from-s > * + * {\n    margin-top: 2rem; } }\n\n@media (min-width: 64em) {\n  .u-autospace--6--from-l > * + * {\n    margin-top: 6rem; } }\n\n@media (min-width: 64em) {\n  .u-autospace--3--from-l > * + * {\n    margin-top: 3rem; } }\n\n@media (min-width: 64em) {\n  .u-autospace--4\\(2up\\)--from-l > * + * {\n    /* ---\nsection: Spacing Utils\ntitle: u-autospace--4(2up)\norder: 9\n---\nA utility class to intelligently space the direct descendants of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-autospace, $modifier: 4(2up) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b fpo--autospace2 u-autospace--4(2up)'>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  \n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n```\n*/ }\n    .u-autospace--4\\(2up\\)--from-l > * + *:nth-child(n+3) {\n      margin-top: 4rem; } }\n\n@media (min-width: 64em) {\n  .u-autospace--4--from-l > * + * {\n    margin-top: 4rem; } }\n\n@media (min-width: 64em) {\n  .u-autospace--2--from-l > * + * {\n    margin-top: 2rem; } }\n\n@media (max-width: 37.49em) {\n  .u-autospace--4--until-s > * + * {\n    margin-top: 4rem; } }\n\n@media (max-width: 37.49em) {\n  .u-autospace--1--until-s > * + * {\n    margin-top: 1rem; } }\n\n@media (max-width: 37.49em) {\n  .u-autospace--3--until-s > * + * {\n    margin-top: 3rem; } }\n\n@media (max-width: 37.49em) {\n  .u-autospace--3\\(2up\\)--until-s > * + * {\n    /* ---\nsection: Spacing Utils\ntitle: u-autospace--3(2up)\norder: 10\n---\nA utility class to intelligently space the direct descendants of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-autospace, $modifier: 3(2up) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b fpo--autospace2 u-autospace--3(2up)'>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  \n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n```\n*/ }\n    .u-autospace--3\\(2up\\)--until-s > * + *:nth-child(n+3) {\n      margin-top: 3rem; } }\n\n@media (max-width: 37.49em) {\n  .u-autospace--2--until-s > * + * {\n    margin-top: 2rem; } }\n\n@media (max-width: 37.49em) {\n  .u-autospace--8--until-s > * + * {\n    margin-top: 8rem; } }\n\n@media (max-width: 63.99em) {\n  .u-autospace--4\\(3up\\)--until-l > * + * {\n    /* ---\nsection: Spacing Utils\ntitle: u-autospace--4(3up)\norder: 11\n---\nA utility class to intelligently space the direct descendants of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-autospace, $modifier: 4(3up) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b fpo--autospace3 u-autospace--4(3up)'>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  \n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n```\n*/ }\n    .u-autospace--4\\(3up\\)--until-l > * + *:nth-child(n+4) {\n      margin-top: 4rem; } }\n\n@media (max-width: 63.99em) {\n  .u-autospace--2--until-l > * + * {\n    margin-top: 2rem; } }\n\n@media (min-width: 37.5em) and (max-width: 63.99em) {\n  .u-autospace--4\\(2up\\)--from-s-until-l > * + *:nth-child(n+3) {\n    margin-top: 4rem; } }\n\n@media (min-width: 37.5em) and (max-width: 63.99em) {\n  .u-autospace--3\\(2up\\)--from-s-until-l > * + *:nth-child(n+3) {\n    margin-top: 3rem; } }\n\n.u-m--1 {\n  margin: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-m--1\norder: 112\n---\nA utility class to set the margin on all sides of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-m, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-m--1'>\n    This element has a 1 rhythm units margin on all sides.\n  </div>\n</div>\n```\n*/ }\n\n.u-mt--1 {\n  margin-top: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mt--1\norder: 213\n---\nA utility class to set the top margin of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mt, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mt--1'>\n    This element has a 1 rhythm units top margin.\n  </div>\n</div>\n```\n*/ }\n\n.u-mt--4 {\n  margin-top: 4rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mt--4\norder: 214\n---\nA utility class to set the top margin of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mt, $modifier: 4 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mt--4'>\n    This element has a 4 rhythm units top margin.\n  </div>\n</div>\n```\n*/ }\n\n.u-mt--2 {\n  margin-top: 2rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mt--2\norder: 215\n---\nA utility class to set the top margin of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mt, $modifier: 2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mt--2'>\n    This element has a 2 rhythm units top margin.\n  </div>\n</div>\n```\n*/ }\n\n.u-mt--min-1 {\n  margin-top: -1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mt--min-1\norder: 216\n---\nA utility class to set the top margin of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mt, $modifier: min-1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mt--min-1'>\n    This element has a -1 rhythm units top margin.\n  </div>\n</div>\n```\n*/ }\n\n.u-mt--0 {\n  margin-top: 0rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mt--0\norder: 217\n---\nA utility class to set the top margin of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mt, $modifier: 0 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mt--0'>\n    This element has a 0 rhythm units top margin.\n  </div>\n</div>\n```\n*/ }\n\n.u-mt--8 {\n  margin-top: 8rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mt--8\norder: 218\n---\nA utility class to set the top margin of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mt, $modifier: 8 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mt--8'>\n    This element has a 8 rhythm units top margin.\n  </div>\n</div>\n```\n*/ }\n\n.u-mt--min-2 {\n  margin-top: -2rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mt--min-2\norder: 219\n---\nA utility class to set the top margin of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mt, $modifier: min-2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mt--min-2'>\n    This element has a -2 rhythm units top margin.\n  </div>\n</div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-mt--4--from-s {\n    margin-top: 4rem; } }\n\n@media (min-width: 37.5em) {\n  .u-mt--min-1--from-s {\n    margin-top: -1rem; } }\n\n@media (min-width: 64em) {\n  .u-mt--4--from-l {\n    margin-top: 4rem; } }\n\n@media (min-width: 64em) {\n  .u-mt--2--from-l {\n    margin-top: 2rem; } }\n\n@media (max-width: 37.49em) {\n  .u-mt--2--until-s {\n    margin-top: 2rem; } }\n\n@media (max-width: 37.49em) {\n  .u-mt--1--until-s {\n    margin-top: 1rem; } }\n\n@media (max-width: 37.49em) {\n  .u-mt--3--until-s {\n    margin-top: 3rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-mt--3\norder: 220\n---\nA utility class to set the top margin of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mt, $modifier: 3 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mt--3'>\n    This element has a 3 rhythm units top margin.\n  </div>\n</div>\n```\n*/ } }\n\n@media (max-width: 63.99em) {\n  .u-mt--3--until-l {\n    margin-top: 3rem; } }\n\n.u-me--2 {\n  margin-left: 2rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-me--2\norder: 321\n---\nA utility class to set the margin on the horizontal end of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-me, $modifier: 2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-me--2'>\n    This element has a 2 rhythm units margin on the horizontal end.\n  </div>\n</div>\n```\n*/ }\n  [dir=ltr] .u-me--2 {\n    margin-right: 2rem; }\n  [dir=rtl] .u-me--2 {\n    margin-left: 2rem; }\n\n.u-me--1 {\n  margin-left: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-me--1\norder: 322\n---\nA utility class to set the margin on the horizontal end of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-me, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-me--1'>\n    This element has a 1 rhythm units margin on the horizontal end.\n  </div>\n</div>\n```\n*/ }\n  [dir=ltr] .u-me--1 {\n    margin-right: 1rem; }\n  [dir=rtl] .u-me--1 {\n    margin-left: 1rem; }\n\n@media (min-width: 37.5em) {\n  .u-me--2--from-s {\n    margin-left: 2rem; }\n    [dir=ltr] .u-me--2--from-s {\n      margin-right: 2rem; }\n    [dir=rtl] .u-me--2--from-s {\n      margin-left: 2rem; } }\n\n.u-mb--1 {\n  margin-bottom: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mb--1\norder: 423\n---\nA utility class to set the bottom margin of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mb, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mb--1'>\n    This element has a 1 rhythm units bottom margin.\n  </div>\n</div>\n```\n*/ }\n\n.u-mb--4 {\n  margin-bottom: 4rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mb--4\norder: 424\n---\nA utility class to set the bottom margin of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mb, $modifier: 4 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mb--4'>\n    This element has a 4 rhythm units bottom margin.\n  </div>\n</div>\n```\n*/ }\n\n.u-mb--2 {\n  margin-bottom: 2rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mb--2\norder: 425\n---\nA utility class to set the bottom margin of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mb, $modifier: 2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mb--2'>\n    This element has a 2 rhythm units bottom margin.\n  </div>\n</div>\n```\n*/ }\n\n.u-mb--8 {\n  margin-bottom: 8rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mb--8\norder: 426\n---\nA utility class to set the bottom margin of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mb, $modifier: 8 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mb--8'>\n    This element has a 8 rhythm units bottom margin.\n  </div>\n</div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-mb--2--from-s {\n    margin-bottom: 2rem; } }\n\n@media (max-width: 37.49em) {\n  .u-mb--4--until-s {\n    margin-bottom: 4rem; } }\n\n@media (max-width: 63.99em) {\n  .u-mb--4--until-l {\n    margin-bottom: 4rem; } }\n\n.u-ms--1 {\n  margin-right: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-ms--1\norder: 527\n---\nA utility class to set the margin on the horizontal start of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ms, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-ms--1'>\n    This element has a 1 rhythm units margin on the horizontal start.\n  </div>\n</div>\n```\n*/ }\n  [dir=ltr] .u-ms--1 {\n    margin-left: 1rem; }\n  [dir=rtl] .u-ms--1 {\n    margin-right: 1rem; }\n\n@media (min-width: 37.5em) {\n  .u-ms--2--from-s {\n    margin-right: 2rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-ms--2\norder: 528\n---\nA utility class to set the margin on the horizontal start of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ms, $modifier: 2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-ms--2'>\n    This element has a 2 rhythm units margin on the horizontal start.\n  </div>\n</div>\n```\n*/ }\n    [dir=ltr] .u-ms--2--from-s {\n      margin-left: 2rem; }\n    [dir=rtl] .u-ms--2--from-s {\n      margin-right: 2rem; } }\n\n.u-mh--auto {\n  margin-left: auto;\n  margin-right: auto;\n  /* ---\nsection: Spacing Utils\ntitle: u-mh--auto\norder: 629\n---\nA utility class to set the horizontal (left and right) margins of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mh, $modifier: auto [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mh--auto'>\n    This element has auto horizontal (left and right) margins.\n  </div>\n</div>\n```\n*/ }\n\n.u-mh--1 {\n  margin-left: 1rem;\n  margin-right: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mh--1\norder: 630\n---\nA utility class to set the horizontal (left and right) margins of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mh, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mh--1'>\n    This element has a 1 rhythm units horizontal (left and right) margins.\n  </div>\n</div>\n```\n*/ }\n\n.u-mh--min-1 {\n  margin-left: -1rem;\n  margin-right: -1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-mh--min-1\norder: 631\n---\nA utility class to set the horizontal (left and right) margins of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mh, $modifier: min-1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mh--min-1'>\n    This element has a -1 rhythm units horizontal (left and right) margins.\n  </div>\n</div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-mh--min-2--from-s {\n    margin-left: -2rem;\n    margin-right: -2rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-mh--min-2\norder: 632\n---\nA utility class to set the horizontal (left and right) margins of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-mh, $modifier: min-2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-mh--min-2'>\n    This element has a -2 rhythm units horizontal (left and right) margins.\n  </div>\n</div>\n```\n*/ } }\n\n@media (max-width: 37.49em) {\n  .u-mh--1--until-s {\n    margin-left: 1rem;\n    margin-right: 1rem; } }\n\n.u-p--2 {\n  padding: 2rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-p--2\norder: 1033\n---\nA utility class to set the padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-p, $modifier: 2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-p--2'>\n    This element has a 2 rhythm units padding.\n  </div>\n</div>\n```\n*/ }\n\n.u-p--1 {\n  padding: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-p--1\norder: 1034\n---\nA utility class to set the padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-p, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-p--1'>\n    This element has a 1 rhythm units padding.\n  </div>\n</div>\n```\n*/ }\n\n.u-p--4 {\n  padding: 4rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-p--4\norder: 1035\n---\nA utility class to set the padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-p, $modifier: 4 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-p--4'>\n    This element has a 4 rhythm units padding.\n  </div>\n</div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-p--2--from-s {\n    padding: 2rem; } }\n\n@media (min-width: 37.5em) {\n  .u-p--4--from-s {\n    padding: 4rem; } }\n\n@media (min-width: 48em) {\n  .u-p--4--from-m {\n    padding: 4rem; } }\n\n.u-pt--7 {\n  padding-top: 7rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pt--7\norder: 1136\n---\nA utility class to set the top padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pt, $modifier: 7 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pt--7'>\n    This element has a 7 rhythm units top padding.\n  </div>\n</div>\n```\n*/ }\n\n.u-pt--1 {\n  padding-top: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pt--1\norder: 1137\n---\nA utility class to set the top padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pt, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pt--1'>\n    This element has a 1 rhythm units top padding.\n  </div>\n</div>\n```\n*/ }\n\n.u-pt--4 {\n  padding-top: 4rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pt--4\norder: 1138\n---\nA utility class to set the top padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pt, $modifier: 4 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pt--4'>\n    This element has a 4 rhythm units top padding.\n  </div>\n</div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-pt--4--from-s {\n    padding-top: 4rem; } }\n\n@media (min-width: 37.5em) {\n  .u-pt--6--from-s {\n    padding-top: 6rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-pt--6\norder: 1139\n---\nA utility class to set the top padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pt, $modifier: 6 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pt--6'>\n    This element has a 6 rhythm units top padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 64em) {\n  .u-pt--6--from-l {\n    padding-top: 6rem; } }\n\n@media (max-width: 37.49em) {\n  .u-pt--0--until-s {\n    padding-top: 0rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-pt--0\norder: 1140\n---\nA utility class to set the top padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pt, $modifier: 0 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pt--0'>\n    This element has a 0 rhythm units top padding.\n  </div>\n</div>\n```\n*/ } }\n\n.u-pe--5 {\n  padding-left: 5rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pe--5\norder: 1241\n---\nA utility class to set the padding on the horizontal end of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pe, $modifier: 5 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pe--5'>\n    This element has a 5 rhythm units padding on the horizontal end.\n  </div>\n</div>\n```\n*/ }\n  [dir=ltr] .u-pe--5 {\n    padding-right: 5rem; }\n  [dir=rtl] .u-pe--5 {\n    padding-left: 5rem; }\n\n.u-pe--2 {\n  padding-left: 2rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pe--2\norder: 1242\n---\nA utility class to set the padding on the horizontal end of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pe, $modifier: 2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pe--2'>\n    This element has a 2 rhythm units padding on the horizontal end.\n  </div>\n</div>\n```\n*/ }\n  [dir=ltr] .u-pe--2 {\n    padding-right: 2rem; }\n  [dir=rtl] .u-pe--2 {\n    padding-left: 2rem; }\n\n.u-pe--1 {\n  padding-left: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pe--1\norder: 1243\n---\nA utility class to set the padding on the horizontal end of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pe, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pe--1'>\n    This element has a 1 rhythm units padding on the horizontal end.\n  </div>\n</div>\n```\n*/ }\n  [dir=ltr] .u-pe--1 {\n    padding-right: 1rem; }\n  [dir=rtl] .u-pe--1 {\n    padding-left: 1rem; }\n\n.u-pe--8 {\n  padding-left: 8rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pe--8\norder: 1244\n---\nA utility class to set the padding on the horizontal end of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pe, $modifier: 8 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pe--8'>\n    This element has a 8 rhythm units padding on the horizontal end.\n  </div>\n</div>\n```\n*/ }\n  [dir=ltr] .u-pe--8 {\n    padding-right: 8rem; }\n  [dir=rtl] .u-pe--8 {\n    padding-left: 8rem; }\n\n@media (min-width: 64em) {\n  .u-pe--2--from-l {\n    padding-left: 2rem; }\n    [dir=ltr] .u-pe--2--from-l {\n      padding-right: 2rem; }\n    [dir=rtl] .u-pe--2--from-l {\n      padding-left: 2rem; } }\n\n@media (min-width: 64em) {\n  .u-pe--1--from-l {\n    padding-left: 1rem; }\n    [dir=ltr] .u-pe--1--from-l {\n      padding-right: 1rem; }\n    [dir=rtl] .u-pe--1--from-l {\n      padding-left: 1rem; } }\n\n@media (min-width: 80em) {\n  .u-pe--7--from-xl {\n    padding-left: 7rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-pe--7\norder: 1245\n---\nA utility class to set the padding on the horizontal end of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pe, $modifier: 7 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pe--7'>\n    This element has a 7 rhythm units padding on the horizontal end.\n  </div>\n</div>\n```\n*/ }\n    [dir=ltr] .u-pe--7--from-xl {\n      padding-right: 7rem; }\n    [dir=rtl] .u-pe--7--from-xl {\n      padding-left: 7rem; } }\n\n@media (min-width: 80em) {\n  .u-pe--4--from-xl {\n    padding-left: 4rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-pe--4\norder: 1246\n---\nA utility class to set the padding on the horizontal end of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pe, $modifier: 4 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pe--4'>\n    This element has a 4 rhythm units padding on the horizontal end.\n  </div>\n</div>\n```\n*/ }\n    [dir=ltr] .u-pe--4--from-xl {\n      padding-right: 4rem; }\n    [dir=rtl] .u-pe--4--from-xl {\n      padding-left: 4rem; } }\n\n@media (min-width: 64em) and (max-width: 79.99em) {\n  .u-pe--2--from-l-until-xl {\n    padding-left: 2rem; }\n    [dir=ltr] .u-pe--2--from-l-until-xl {\n      padding-right: 2rem; }\n    [dir=rtl] .u-pe--2--from-l-until-xl {\n      padding-left: 2rem; } }\n\n.u-pb--4 {\n  padding-bottom: 4rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pb--4\norder: 1347\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 4 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--4'>\n    This element has a 4 rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ }\n\n.u-pb--14 {\n  padding-bottom: 14rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pb--14\norder: 1348\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 14 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--14'>\n    This element has a 14 rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ }\n\n.u-pb--16 {\n  padding-bottom: 16rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pb--16\norder: 1349\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 16 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--16'>\n    This element has a 16 rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ }\n\n.u-pb--8 {\n  padding-bottom: 8rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pb--8\norder: 1350\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 8 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--8'>\n    This element has a 8 rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-pb--40\\%--from-s {\n    padding-bottom: 40%;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--40%\norder: 1351\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 40% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--40%'>\n    This element has a 40% rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 37.5em) {\n  .u-pb--55\\.72\\%--from-s {\n    padding-bottom: 55.72%;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--55.72%\norder: 1352\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 55.72% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--55.72%'>\n    This element has a 55.72% rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 37.5em) {\n  .u-pb--237\\.33\\%--from-s {\n    padding-bottom: 237.33%;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--237.33%\norder: 1353\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 237.33% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--237.33%'>\n    This element has a 237.33% rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 37.5em) {\n  .u-pb--12--from-s {\n    padding-bottom: 12rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--12\norder: 1354\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 12 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--12'>\n    This element has a 12 rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 48em) {\n  .u-pb--2--from-m {\n    padding-bottom: 2rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--2\norder: 1355\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--2'>\n    This element has a 2 rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 48em) {\n  .u-pb--25\\%--from-m {\n    padding-bottom: 25%;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--25%\norder: 1356\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 25% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--25%'>\n    This element has a 25% rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 48em) {\n  .u-pb--48\\.8\\%--from-m {\n    padding-bottom: 48.8%;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--48.8%\norder: 1357\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 48.8% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--48.8%'>\n    This element has a 48.8% rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 48em) {\n  .u-pb--204\\.92\\%--from-m {\n    padding-bottom: 204.92%;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--204.92%\norder: 1358\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 204.92% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--204.92%'>\n    This element has a 204.92% rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 64em) {\n  .u-pb--45\\.4\\%--from-l {\n    padding-bottom: 45.4%;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--45.4%\norder: 1359\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 45.4% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--45.4%'>\n    This element has a 45.4% rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 64em) {\n  .u-pb--45\\%--from-l {\n    padding-bottom: 45%;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--45%\norder: 1360\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 45% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--45%'>\n    This element has a 45% rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 64em) {\n  .u-pb--58\\.3\\%--from-l {\n    padding-bottom: 58.3%;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--58.3%\norder: 1361\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 58.3% [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--58.3%'>\n    This element has a 58.3% rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (max-width: 37.49em) {\n  .u-pb--6--until-s {\n    padding-bottom: 6rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--6\norder: 1362\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 6 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--6'>\n    This element has a 6 rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (max-width: 63.99em) {\n  .u-pb--9--until-l {\n    padding-bottom: 9rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-pb--9\norder: 1363\n---\nA utility class to set the bottom padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pb, $modifier: 9 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pb--9'>\n    This element has a 9 rhythm units bottom padding.\n  </div>\n</div>\n```\n*/ } }\n\n.u-ps--1 {\n  padding-right: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-ps--1\norder: 1464\n---\nA utility class to set the padding on the horizontal start of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ps, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-ps--1'>\n    This element has a 1 rhythm units padding on the horizontal start.\n  </div>\n</div>\n```\n*/ }\n  [dir=ltr] .u-ps--1 {\n    padding-left: 1rem; }\n  [dir=rtl] .u-ps--1 {\n    padding-right: 1rem; }\n\n.u-ps--2em {\n  padding-right: 2em;\n  /* ---\nsection: Spacing Utils\ntitle: u-ps--2em\norder: 1465\n---\nA utility class to set the padding on the horizontal start of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ps, $modifier: 2em [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-ps--2em'>\n    This element has a 2em rhythm units padding on the horizontal start.\n  </div>\n</div>\n```\n*/ }\n  [dir=ltr] .u-ps--2em {\n    padding-left: 2em; }\n  [dir=rtl] .u-ps--2em {\n    padding-right: 2em; }\n\n@media (min-width: 37.5em) {\n  .u-ps--2--from-s {\n    padding-right: 2rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-ps--2\norder: 1466\n---\nA utility class to set the padding on the horizontal start of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ps, $modifier: 2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-ps--2'>\n    This element has a 2 rhythm units padding on the horizontal start.\n  </div>\n</div>\n```\n*/ }\n    [dir=ltr] .u-ps--2--from-s {\n      padding-left: 2rem; }\n    [dir=rtl] .u-ps--2--from-s {\n      padding-right: 2rem; } }\n\n@media (min-width: 37.5em) {\n  .u-ps--1--from-s {\n    padding-right: 1rem; }\n    [dir=ltr] .u-ps--1--from-s {\n      padding-left: 1rem; }\n    [dir=rtl] .u-ps--1--from-s {\n      padding-right: 1rem; } }\n\n@media (min-width: 64em) {\n  .u-ps--1--from-l {\n    padding-right: 1rem; }\n    [dir=ltr] .u-ps--1--from-l {\n      padding-left: 1rem; }\n    [dir=rtl] .u-ps--1--from-l {\n      padding-right: 1rem; } }\n\n@media (min-width: 64em) {\n  .u-ps--2--from-l {\n    padding-right: 2rem; }\n    [dir=ltr] .u-ps--2--from-l {\n      padding-left: 2rem; }\n    [dir=rtl] .u-ps--2--from-l {\n      padding-right: 2rem; } }\n\n@media (min-width: 80em) {\n  .u-ps--4--from-xl {\n    padding-right: 4rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-ps--4\norder: 1467\n---\nA utility class to set the padding on the horizontal start of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ps, $modifier: 4 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-ps--4'>\n    This element has a 4 rhythm units padding on the horizontal start.\n  </div>\n</div>\n```\n*/ }\n    [dir=ltr] .u-ps--4--from-xl {\n      padding-left: 4rem; }\n    [dir=rtl] .u-ps--4--from-xl {\n      padding-right: 4rem; } }\n\n@media (min-width: 64em) and (max-width: 79.99em) {\n  .u-ps--2--from-l-until-xl {\n    padding-right: 2rem; }\n    [dir=ltr] .u-ps--2--from-l-until-xl {\n      padding-left: 2rem; }\n    [dir=rtl] .u-ps--2--from-l-until-xl {\n      padding-right: 2rem; } }\n\n.u-ph--1 {\n  padding-left: 1rem;\n  padding-right: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-ph--1\norder: 1568\n---\nA utility class to set the horizontal (left and right) padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ph, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-ph--1'>\n    This element has a 1 rhythm units horizontal (left and right) padding.\n  </div>\n</div>\n```\n*/ }\n\n.u-ph--6 {\n  padding-left: 6rem;\n  padding-right: 6rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-ph--6\norder: 1569\n---\nA utility class to set the horizontal (left and right) padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ph, $modifier: 6 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-ph--6'>\n    This element has a 6 rhythm units horizontal (left and right) padding.\n  </div>\n</div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-ph--4--from-s {\n    padding-left: 4rem;\n    padding-right: 4rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-ph--4\norder: 1570\n---\nA utility class to set the horizontal (left and right) padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ph, $modifier: 4 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-ph--4'>\n    This element has a 4 rhythm units horizontal (left and right) padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 37.5em) {\n  .u-ph--2--from-s {\n    padding-left: 2rem;\n    padding-right: 2rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-ph--2\norder: 1571\n---\nA utility class to set the horizontal (left and right) padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ph, $modifier: 2 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-ph--2'>\n    This element has a 2 rhythm units horizontal (left and right) padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (min-width: 64em) {\n  .u-ph--4--from-l {\n    padding-left: 4rem;\n    padding-right: 4rem; } }\n\n@media (min-width: 64em) {\n  .u-ph--20--from-l {\n    padding-left: 20rem;\n    padding-right: 20rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-ph--20\norder: 1572\n---\nA utility class to set the horizontal (left and right) padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ph, $modifier: 20 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-ph--20'>\n    This element has a 20 rhythm units horizontal (left and right) padding.\n  </div>\n</div>\n```\n*/ } }\n\n@media (max-width: 37.49em) {\n  .u-ph--1--until-s {\n    padding-left: 1rem;\n    padding-right: 1rem; } }\n\n@media (min-width: 64em) and (max-width: 79.99em) {\n  .u-ph--2--from-l-until-xl {\n    padding-left: 2rem;\n    padding-right: 2rem; } }\n\n.u-pv--1 {\n  padding-bottom: 1rem;\n  padding-top: 1rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pv--1\norder: 1673\n---\nA utility class to set the vertical (tiop and bottom) padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pv, $modifier: 1 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pv--1'>\n    This element has a 1 rhythm units vertical (tiop and bottom) padding.\n  </div>\n</div>\n```\n*/ }\n\n.u-pv--6 {\n  padding-bottom: 6rem;\n  padding-top: 6rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pv--6\norder: 1674\n---\nA utility class to set the vertical (tiop and bottom) padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pv, $modifier: 6 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pv--6'>\n    This element has a 6 rhythm units vertical (tiop and bottom) padding.\n  </div>\n</div>\n```\n*/ }\n\n.u-pv--0\\.5 {\n  padding-bottom: 0.5rem;\n  padding-top: 0.5rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pv--0.5\norder: 1675\n---\nA utility class to set the vertical (tiop and bottom) padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pv, $modifier: 0.5 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pv--0.5'>\n    This element has a 0.5 rhythm units vertical (tiop and bottom) padding.\n  </div>\n</div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-pv--1--from-s {\n    padding-bottom: 1rem;\n    padding-top: 1rem; } }\n\n.u-pl--12 {\n  padding-left: 12rem;\n  /* ---\nsection: Spacing Utils\ntitle: u-pl--12\norder: 1876\n---\nA utility class to set the left padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pl, $modifier: 12 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pl--12'>\n    This element has a 12 rhythm units left padding.\n  </div>\n</div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-pl--14--from-s {\n    padding-left: 14rem;\n    /* ---\nsection: Spacing Utils\ntitle: u-pl--14\norder: 1877\n---\nA utility class to set the left padding of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pl, $modifier: 14 [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  u-pl--14'>\n    This element has a 14 rhythm units left padding.\n  </div>\n</div>\n```\n*/ } }\n\n/* ---\nsection: Text Alignment Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated text-alignment utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-ta--start`: text-align: (left|right) (left in `LTR`, right in `RTL`)\n    - `[dir=ltr] .u-ta--start`: text-align: left\n    - `[dir=rtl] .u-ta--start`: text-align: right\n  - `.u-ta--l`: text-align: left\n  - `.u-ta--c`: text-align: center\n  - `.u-ta--end`: text-align: (right|left) (right in `LTR`, left in `RTL`)\n    - `[dir=ltr] .u-ta--end`: text-align: right\n    - `[dir=rtl] .u-ta--end`: text-align: left\n  - `.u-tr--r`: text-align: right\n  - `.u-ta--j`: text-align: justify\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-text\n```\n\n#### Usage\nImport JigSass Utils Text into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-text/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Text does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual text alignment\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-ta, $modifier: c); // <-- text-align: center\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-ta, $modifier: j);  // <-- text-align: justify\n  @include jigsass-util(u-ta, $modifier: r, $from: large); // <-- text-align: right from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Text partial was imported into the main file.\n\n\nJigSass Text classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a text-alignment class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-ta--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-ta, $modifier: end);\n```\nwill generate the `.u-ta--end` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-ta, $modifier: start, $until: medium);\n```\n\nwill generate the `.u-ta--start--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-ta, $modifier: c, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-ta--c--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n.u-ta--end {\n  text-align: left;\n  /* ---\nsection: Text Alignment Utils\ntitle: Align to end\norder: 1\n---\n**.u-ta--end**\n\nA utility class for aligning text to the horizontal end\n\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ta, $modifier: end [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo  u-ta--end'>\n  The text in this element is aligned towards the horizontal end.\n</p>\n```\n*/ }\n  [dir=ltr] .u-ta--end {\n    text-align: right; }\n  [dir=rtl] .u-ta--end {\n    text-align: left; }\n\n.u-ta--c {\n  text-align: center;\n  /* ---\nsection: Text Alignment Utils\ntitle: Align to center\norder: 2\n---\n**.u-ta--c**\n\nA utility class for aligning text to the horizontal center\n\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ta, $modifier: c [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo  u-ta--c'>\n  The text in this element is aligned towards the horizontal center.\n</p>\n```\n*/ }\n\n.u-ta--start {\n  text-align: right;\n  /* ---\nsection: Text Alignment Utils\ntitle: Align to start\norder: 3\n---\n**.u-ta--start**\n\nA utility class for aligning text to the horizontal start\n\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ta, $modifier: start [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo  u-ta--start'>\n  The text in this element is aligned towards the horizontal start.\n</p>\n```\n*/ }\n  [dir=ltr] .u-ta--start {\n    text-align: left; }\n  [dir=rtl] .u-ta--start {\n    text-align: right; }\n\n@media (max-width: 37.49em) {\n  .u-ta--c--until-s {\n    text-align: center; } }\n\n@media (max-width: 63.99em) {\n  .u-ta--c--until-l {\n    text-align: center; } }\n\n/* ---\nsection: Text decoration Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated text-decoration utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-td--n`: text-decoration: none\n  - `.u-td--u`: text-decoration: underline\n  - `.u-td--o`: text-decoration: overline\n  - `.u-td--l`: text-decoration: line-through\n\n\n  - `.u-td--n:hover`: text-decoration: none when hovered\n  - `.u-td--u:hover`: text-decoration: underline when hovered\n  - `.u-td--o:hover`: text-decoration: overline when hovered\n  - `.u-td--l:hover`: text-decoration: line-through when hovered\n\n\n  - `.u-td--n:focus`: text-decoration: none when focused\n  - `.u-td--u:focus`: text-decoration: underline when focused\n  - `.u-td--o:focus`: text-decoration: overline when focused\n  - `.u-td--l:focus`: text-decoration: line-through when focused\n\n\n  - `.u-td--n:active`: text-decoration: none when active\n  - `.u-td--u:active`: text-decoration: underline when active\n  - `.u-td--o:active`: text-decoration: overline when active\n  - `.u-td--l:active`: text-decoration: line-through when active\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-text\n```\n\n#### Usage\nImport JigSass Utils Text into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-text/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Text does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual text decoration\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-td, $modifier: u); // <-- text-decoration: underline\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-td, $modifier: n);  // <-- text-decoration: none\n  @include jigsass-util(u-td, $modifier: o, $from: large); // <-- text-decoration: overline from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Text partial was imported into the main file.\n\n\nJigSass Text classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a text-decoration class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-td--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-td, $modifier: n);\n```\nwill generate the `.u-td--n` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-td, $modifier: n, $until: medium);\n```\n\nwill generate the `.u-td--n--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-td, $modifier: n, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-td--n--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n.u-td--u\\:hover {\n  /* ---\nsection: Text Decoration Utils\ntitle: Text Decoration: underline:hover\norder: 1\n---\n**.u-td--u:hover**\n\nA utility class for adding underline text decoration to an elementwhen :hovered\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-td, $modifier: u:hover [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo  u-td--u:hover'>\n  This text has underline text decoration when :hovered\n</p>\n```\n*/ }\n  .u-td--u\\:hover:hover {\n    text-decoration: underline; }\n\n.u-td--u\\:focus {\n  /* ---\nsection: Text Decoration Utils\ntitle: Text Decoration: underline:focus\norder: 2\n---\n**.u-td--u:focus**\n\nA utility class for adding underline text decoration to an elementwhen :focused\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-td, $modifier: u:focus [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo  u-td--u:focus'>\n  This text has underline text decoration when :focused\n</p>\n```\n*/ }\n  .u-td--u\\:focus:focus {\n    text-decoration: underline; }\n\n.u-td--u {\n  /* ---\nsection: Text Decoration Utils\ntitle: Text Decoration: underline\norder: 3\n---\n**.u-td--u**\n\nA utility class for adding underline text decoration to an element\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-td, $modifier: u [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo  u-td--u'>\n  This text has underline text decoration \n</p>\n```\n*/ }\n  .u-td--u {\n    text-decoration: underline; }\n\n/* ---\nsection: Vertical Alignment Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated vertical-alignment utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-va--sup`: vertical-align: super\n  - `.u-va--t`: vertical-align: top\n  - `.u-va--tt`: vertical-align: text-top\n  - `.u-va--m`: vertical-align: middle\n  - `.u-va--bl`: vertical-align: baseline\n  - `.u-va--b`: vertical-align: bottom\n  - `.u-va--tb`: vertical-align: text-bottom\n  - `.u-va--sub`: vertical-align: sub\n  - `.u-va--<length>`: vertical-align: sub\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-text\n```\n\n#### Usage\nImport JigSass Utils Text into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-text/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Text does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual vertical alignment\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-va, $modifier: m); // <-- vertical-align: middle\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-va, $modifier: b);  // <-- vertical-align: bottom\n  @include jigsass-util(u-va, $modifier: t, $from: large); // <-- vertical-align: top from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Text partial was imported into the main file.\n\n\nJigSass Text classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a vertical-alignment class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-va--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-va, $modifier: bl);\n```\nwill generate the `.u-va--bl` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-va, $modifier: tt, $until: medium);\n```\n\nwill generate the `.u-va--tt--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-va, $modifier: t, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-va--t--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n.u-va--t {\n  vertical-align: top;\n  /* ---\nsection: Vertical Alignment Utils\ntitle: V Align to top\norder: 1\n---\n**u-va--t**\n\nA utility class for vertically aligning elements to top\n\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-va, $modifier: t [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo'>\n  <span class='u-va--t'>\n    The text in this element is vertically aligned to top\n  </span>\n  <span class='fpo--va u-va--t'></span>\n</p>\n```\n*/ }\n\n.u-va--bl {\n  vertical-align: baseline;\n  /* ---\nsection: Vertical Alignment Utils\ntitle: V Align to baseline\norder: 2\n---\n**u-va--bl**\n\nA utility class for vertically aligning elements to baseline\n\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-va, $modifier: bl [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo'>\n  <span class='u-va--bl'>\n    The text in this element is vertically aligned to baseline\n  </span>\n  <span class='fpo--va u-va--bl'></span>\n</p>\n```\n*/ }\n\n/* ---\nsection: White-space Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated white-space utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-whs--n`: white-space: normal\n  - `.u-whs--p`: white-space: pre\n  - `.u-whs--nw`: white-space: nowrap\n  - `.u-whs--pw`: white-space: pre-wrap\n  - `.u-whs--pl`: white-space: pre-line\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-text\n```\n\n#### Usage\nImport JigSass Utils Text into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-text/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Text does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual white-space\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-whs, $modifier: nw); // <-- white-space: nowrap\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-whs, $modifier: n);  // <-- white-space: normal\n  @include jigsass-util(u-whs, $modifier: pw, $from: large); // <-- white-space: pre-wrap from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Text partial was imported into the main file.\n\n\nJigSass Text classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a white-space class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-whs--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-whs, $modifier: nw);\n```\nwill generate the `.u-whs--nw` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-whs, $modifier: nw, $until: medium);\n```\n\nwill generate the `.u-whs--nw--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-whs, $modifier: p, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-whs--p--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n.u-whs--nw {\n  white-space: nowrap;\n  /* ---\nsection: White-space Utils\ntitle: White-space nowrap\norder: 1\n---\n**u-whs--nw**\n\nA utility class for setting an element's `white-space` to nowrap\n\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-whs, $modifier: nw [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo u-whs--nw'>\n  The white-space of      the text in thiselement is set to nowrap.\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n  Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n  Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</p>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-whs--nw--from-s {\n    white-space: nowrap; } }\n\n/* ---\nsection: Type Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA dynamically generated set of typesetting utility classes, in charge of modifying\nan element's font-size and line-height, based on sizes defined in the\n[$jigsass-sizes](https://txhawks.github.io/jigsass-tools-typography/#variable-jigsass-sizes)\nvariable.\n\nAdditionally, JigSass Type provides utility classes for setting an element's\n`font-weight`, `font-style` and `font-family` stacks through the\n`$jigsass-font-stacks` variable.\n\n#### Available classes\n\n  - `u-type--<named-size>` (example: .u-type--alpha)\n  - `u-fw--<weight>` (example: .u-fw--700)\n  - `u-fs--i` (italic)\n  - `u-fs--n` (normal)\n  - `u-fs--o` (oblique)\n  - `u-ff--<stack>` (example: .u-ff--serif)\n\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-type\n```\n\n#### Usage\nImport JigSass Utils Type into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-type/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Type does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual typesetting\nclass should actually be generated in each component or object it is used in:\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-type, $modifier: alpha);\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-type, $modifier: epsilon);\n  @include jigsass-util(u-type, $modifier: delta, $from: large);\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Type partial was imported into the main file.\n\n\n\nJigSass Type classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a type class, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.u-type--modifier[-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-type, $modifier: zeta);\n```\nwill generate the `.u-type--zeta` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-type, $modifier: zeta, $until: medium);\n```\n\nwill generate the `.u-type--zeta--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-type, $modifier: zeta, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-type--zeta--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-type.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-type\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-type.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-type\n*/\n/* ---\nsection: Type Utils\ntitle: Configuration\norder: 0\n---\n\nJigSass Utils Type can be tweaked by setting the values of the following\nconfiguration variables. To override the default values, set your own\n_before_ importing JigSass Utils Type.\n\n#### Font family stacks\n\n```scss\n$jigsass-font-stacks\n```\n\n**Type:** `Map`\n\nA map holding named lists of font-family stacks for use as font-family modfiers:\n```scss\n@include jigsass-util(u-ff, $modifier: serif);\n```\n\n**Default:** `()`\n*/\n.u-type--micro {\n  font-size: 2.1666666667rem;\n  line-height: 3rem;\n  /* ---\nsection: Type Utils\ntitle: Font Size micro\norder: 1\n---\nA util to modify an element's font size to the that set in\n`$jigsass-sizes.micro` and adjust its line-height\naccordingly.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-type, $modifier: micro[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-type--micro'>\n  This is <em>micro</em> sized text.\n</p>\n```\n*/ }\n  @media (min-width: 80em) {\n    .u-type--micro {\n      font-size: 2rem;\n      line-height: 3rem; } }\n\n.u-type--epsilon {\n  font-size: 3rem;\n  line-height: 4rem;\n  /* ---\nsection: Type Utils\ntitle: Font Size epsilon\norder: 2\n---\nA util to modify an element's font size to the that set in\n`$jigsass-sizes.epsilon` and adjust its line-height\naccordingly.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-type, $modifier: epsilon[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-type--epsilon'>\n  This is <em>epsilon</em> sized text.\n</p>\n```\n*/ }\n  @media (min-width: 80em) {\n    .u-type--epsilon {\n      font-size: 2.8571428571rem;\n      line-height: 4rem; } }\n\n.u-type--milli {\n  font-size: 2.3333333333rem;\n  line-height: 3rem;\n  /* ---\nsection: Type Utils\ntitle: Font Size milli\norder: 3\n---\nA util to modify an element's font size to the that set in\n`$jigsass-sizes.milli` and adjust its line-height\naccordingly.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-type, $modifier: milli[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-type--milli'>\n  This is <em>milli</em> sized text.\n</p>\n```\n*/ }\n  @media (min-width: 80em) {\n    .u-type--milli {\n      font-size: 2.2857142857rem;\n      line-height: 3rem; } }\n\n.u-type--delta {\n  font-size: 3.3333333333rem;\n  line-height: 4rem;\n  /* ---\nsection: Type Utils\ntitle: Font Size delta\norder: 4\n---\nA util to modify an element's font size to the that set in\n`$jigsass-sizes.delta` and adjust its line-height\naccordingly.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-type, $modifier: delta[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-type--delta'>\n  This is <em>delta</em> sized text.\n</p>\n```\n*/ }\n  @media (min-width: 80em) {\n    .u-type--delta {\n      font-size: 3.2857142857rem;\n      line-height: 4rem; } }\n\n.u-type--gamma {\n  font-size: 4.1666666667rem;\n  line-height: 5rem;\n  /* ---\nsection: Type Utils\ntitle: Font Size gamma\norder: 5\n---\nA util to modify an element's font size to the that set in\n`$jigsass-sizes.gamma` and adjust its line-height\naccordingly.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-type, $modifier: gamma[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-type--gamma'>\n  This is <em>gamma</em> sized text.\n</p>\n```\n*/ }\n  @media (min-width: 80em) {\n    .u-type--gamma {\n      font-size: 4rem;\n      line-height: 5rem; } }\n\n.u-type--alpha {\n  font-size: 6.5rem;\n  line-height: 8rem;\n  /* ---\nsection: Type Utils\ntitle: Font Size alpha\norder: 6\n---\nA util to modify an element's font size to the that set in\n`$jigsass-sizes.alpha` and adjust its line-height\naccordingly.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-type, $modifier: alpha[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-type--alpha'>\n  This is <em>alpha</em> sized text.\n</p>\n```\n*/ }\n  @media (min-width: 80em) {\n    .u-type--alpha {\n      font-size: 6.2857142857rem;\n      line-height: 7rem; } }\n\n.u-type--zeta {\n  font-size: 2.6666666667rem;\n  line-height: 4rem;\n  /* ---\nsection: Type Utils\ntitle: Font Size zeta\norder: 7\n---\nA util to modify an element's font size to the that set in\n`$jigsass-sizes.zeta` and adjust its line-height\naccordingly.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-type, $modifier: zeta[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-type--zeta'>\n  This is <em>zeta</em> sized text.\n</p>\n```\n*/ }\n  @media (min-width: 80em) {\n    .u-type--zeta {\n      font-size: 2.5714285714rem;\n      line-height: 4rem; } }\n\n.u-type--beta {\n  font-size: 5.1666666667rem;\n  line-height: 6rem;\n  /* ---\nsection: Type Utils\ntitle: Font Size beta\norder: 8\n---\nA util to modify an element's font size to the that set in\n`$jigsass-sizes.beta` and adjust its line-height\naccordingly.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-type, $modifier: beta[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-type--beta'>\n  This is <em>beta</em> sized text.\n</p>\n```\n*/ }\n  @media (min-width: 80em) {\n    .u-type--beta {\n      font-size: 5rem;\n      line-height: 6rem; } }\n\n@media (min-width: 37.5em) {\n  .u-type--epsilon--from-s {\n    font-size: 3rem;\n    line-height: 4rem; } }\n\n@media (min-width: 80em) {\n  .u-type--epsilon--from-s {\n    font-size: 2.8571428571rem;\n    line-height: 4rem; } }\n\n@media (min-width: 37.5em) {\n  .u-type--milli--from-s {\n    font-size: 2.3333333333rem;\n    line-height: 3rem; } }\n\n@media (min-width: 80em) {\n  .u-type--milli--from-s {\n    font-size: 2.2857142857rem;\n    line-height: 3rem; } }\n\n@media (min-width: 37.5em) {\n  .u-type--gamma--from-s {\n    font-size: 4.1666666667rem;\n    line-height: 5rem; } }\n\n@media (min-width: 80em) {\n  .u-type--gamma--from-s {\n    font-size: 4rem;\n    line-height: 5rem; } }\n\n@media (min-width: 37.5em) {\n  .u-type--beta--from-s {\n    font-size: 5.1666666667rem;\n    line-height: 6rem; } }\n\n@media (min-width: 80em) {\n  .u-type--beta--from-s {\n    font-size: 5rem;\n    line-height: 6rem; } }\n\n@media (min-width: 48em) {\n  .u-type--beta--from-m {\n    font-size: 5.1666666667rem;\n    line-height: 6rem; } }\n\n@media (min-width: 80em) {\n  .u-type--beta--from-m {\n    font-size: 5rem;\n    line-height: 6rem; } }\n\n@media (min-width: 48em) {\n  .u-type--alpha--from-m {\n    font-size: 6.5rem;\n    line-height: 8rem; } }\n\n@media (min-width: 80em) {\n  .u-type--alpha--from-m {\n    font-size: 6.2857142857rem;\n    line-height: 7rem; } }\n\n@media (min-width: 64em) {\n  .u-type--delta--from-l {\n    font-size: 3.3333333333rem;\n    line-height: 4rem; } }\n\n@media (min-width: 80em) {\n  .u-type--delta--from-l {\n    font-size: 3.2857142857rem;\n    line-height: 4rem; } }\n\n@media (min-width: 64em) {\n  .u-type--milli--from-l {\n    font-size: 2.3333333333rem;\n    line-height: 3rem; } }\n\n@media (min-width: 80em) {\n  .u-type--milli--from-l {\n    font-size: 2.2857142857rem;\n    line-height: 3rem; } }\n\n@media (min-width: 80em) {\n  .u-type--micro--from-xl {\n    font-size: 2rem;\n    line-height: 3rem; } }\n\n@media (min-width: 80em) {\n  .u-type--milli--from-xl {\n    font-size: 2.2857142857rem;\n    line-height: 3rem; } }\n\n@media (max-width: 37.49em) {\n  .u-type--milli--until-s {\n    font-size: 2.3333333333rem;\n    line-height: 3rem; } }\n\n.u-fw--700 {\n  font-weight: 700;\n  /* ---\nsection: Type Utils\ntitle: Font Weight: 700\norder: 9\n---\nA util class for setting an element's font-weight to 700\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-fw, $modifier: 700[, $from, $until, $misc]);\n```\n\n#### example\n\n```example:html\n<p class=u-fw--700>\n  This element's font-weight is set to <code>700</code>.\n</p>\n```\n\n*/ }\n\n.u-fw--400 {\n  font-weight: 400;\n  /* ---\nsection: Type Utils\ntitle: Font Weight: 400\norder: 10\n---\nA util class for setting an element's font-weight to 400\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-fw, $modifier: 400[, $from, $until, $misc]);\n```\n\n#### example\n\n```example:html\n<p class=u-fw--400>\n  This element's font-weight is set to <code>400</code>.\n</p>\n```\n\n*/ }\n\n.u-ff--advert {\n  font-family: arial, sans-serif;\n  /* ---\nsection: Type Utils\ntitle: Font family: advert\norder: 11\n---\nA util class for setting an element's font-familly to the advert named stack\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-ff, $modifier: advert[, $from, $until, $misc]);\n```\n\n#### example\n\n```example:html\n<p class=u-ff--advert>\n  This element's font-family is set to the <code>advert</code> stack.\n</p>\n```\n\n*/ }\n\n.u-td--u\\:hover:hover {\n  text-decoration: underline; }\n\n.u-td--u\\:focus:focus {\n  text-decoration: underline; }\n\n.u-td--u {\n  text-decoration: underline; }\n\n/* ---\nsection: Visibility Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA collection of dynamically generated css visibility related utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\nE.g., the `visibility: hidden` utility class name is `.u-v--h` and\nthe `backface-visibility: visible` one is `.u-bfv--v`.\nIn the same vein, the `opacity: 0.5` class will be `.u-o--0\\.5` (It is automatically escaped).\n\n#### Available classes\n\n  - `.u-v--h` (visibility: hidden)\n  - `.u-v--v` (visibility: visible)\n  - `.u-v--inher` (visibility: inherit)\n  - `.u-c--init` (visibility: initial)\n  - `.u-v--un` (visibility: unset)\n\n  - `.u-bfv--h` (backface-visibility: hidden)\n  - `.u-bfv--v` (backface-visibility: visible)\n\n  - `.u-o--<level>` (opacity: <level>)\n\nAdditionally, JigSass Visibility provides the following stateful helpers:\n  - `.u-is-hidden`: Hides elements visually and from screen readers.\n  - `.u-is-visually-hidden`: Hides elements visually but leaves them accesible for screen readers.\n  - `.u-is-visually-hidden.u-is-focusable`: Reveal focusable visually hidden elements on focus\n    (with keyboard navigation or js).\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-visibility\n```\n\n#### Usage\nImport JigSass Utils Visibility into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-visibility/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Visibility does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual visibility\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-v, $modifier: h); // <-- visibility: hidden\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-bfv, $modifier: h);  // <-- backface-visibility: hidden\n  @include jigsass-util(\n    u-bfv,\n    $modifier: visible,\n    $from: large\n  ); // <-- backface-visibility: visible from large bp an on.\n\n  ...\n}\n```\n\n```scss\n// _c.baz.scss\n.baz {\n  @include jigsass-util(u-is-hidden, $from: medium); // <-- display: none from medium bp an on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Visibility partial was imported into the main file.\n\n\nJigSass Visibility classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a visibility class, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.u-v--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-v, $modifier: h);\n```\nwill generate the `.u-v--h` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-v, $modifier: h, $until: medium);\n```\n\nwill generate the `.u-v--h--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-v, $modifier: h, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-v--h--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-visibility.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-visibility\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-visibility.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-visibility\n*/\n.u-is-hidden {\n  display: none;\n  /* ---\nsection: Visibility Utils\ntitle: u-is-hidden\norder: 1 + 300\n---\nA util to hide elements visually and from screen readers.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-is-hidden [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-is-hidden>\n  This div is hidden both visually and from screen readers.\n</div>\n```\n*/ }\n\n@media (min-width: 37.5em) {\n  .u-is-hidden--from-s {\n    display: none; } }\n\n@media (min-width: 48em) {\n  .u-is-hidden--from-m {\n    display: none; } }\n\n@media (min-width: 64em) {\n  .u-is-hidden--from-l {\n    display: none; } }\n\n@media (max-width: 37.49em) {\n  .u-is-hidden--until-s {\n    display: none; } }\n\n@media (max-width: 47.99em) {\n  .u-is-hidden--until-m {\n    display: none; } }\n\n@media (max-width: 63.99em) {\n  .u-is-hidden--until-l {\n    display: none; } }\n\n@media (max-width: 79.99em) {\n  .u-is-hidden--until-xl {\n    display: none; } }\n\n.u-is-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  /* ---\nsection: Visibility Utils\ntitle: u-is-visually-hidden\norder: 2 + 300\n---\nA util to hide elements visually but leaves them accesible for screen readers.\n\nOptionally reveal focusable visually hidden elements on focus (with keyboard navigation or js),\nby attaching the `u-is-focusable` class to them.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-is-visually-hidden [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p>Tab-cycle inside the demo iFrame to reveal the focusable visually hidden element</p>\n<div tabindex='0' class='fpo [ u-is-visually-hidden u-is-focusable ]'>\n  This div is hidden visually but is available to screen readers.\n  It is revealed when focusd\n</div>\n```\n*/ }\n  .u-is-visually-hidden.u-is-focusable:active, .u-is-visually-hidden.u-is-focusable:focus {\n    clip: auto;\n    height: auto;\n    margin: 0;\n    overflow: visible;\n    position: static;\n    width: auto; }\n\n@media (min-width: 37.5em) {\n  .u-is-visually-hidden--from-s {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px; }\n    .u-is-visually-hidden--from-s.u-is-focusable:active, .u-is-visually-hidden--from-s.u-is-focusable:focus {\n      clip: auto;\n      height: auto;\n      margin: 0;\n      overflow: visible;\n      position: static;\n      width: auto; } }\n\n@media (max-width: 63.99em) {\n  .u-is-visually-hidden--until-l {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px; }\n    .u-is-visually-hidden--until-l.u-is-focusable:active, .u-is-visually-hidden--until-l.u-is-focusable:focus {\n      clip: auto;\n      height: auto;\n      margin: 0;\n      overflow: visible;\n      position: static;\n      width: auto; } }\n\n/* ---\nsection: Border Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated border utility classes.\n\nJigSass Utils Border works in tandem with\n[JigSass Tools typography](https://txhawks.github.io/jigsass-tools-typography),\nproviding utility classes which add borders that don't mess up vertical rhythm.\n\nBorder utils can be limited to a certain state (i.e., `hover`, `focus`,  etc.)\n\nThe syntax for generating a border util is: `$modifier: '<width-in-pixels>[(<rhythm-units>,<border-style>,<border-color>)][:state]'`\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions, e.g, bdb--1px(2,solid,#ccc) for setting border-bottom of 1px,\na padding-bottom of two typographic lines minus the border width, border-style\nof solid and border-color or #ccc.\n\n#### Available classes\n\n  **Border Width**<br />\n  - `u-bd--<width>` (example: u-bd--2px, sets a border of 2 pixels around an element)\n  - `u-bd--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px around an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n\n  - `u-bdt--<width>` (example: u-bd--2px, sets a border of 2 pixels above an element)\n  - `u-bdt--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px above an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n\n  - `u-bde--<width>` (example: u-bd--2px, sets a border of 2 pixels at the horizontal end an element)\n  - `u-bde--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px at the horizontal end of an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n\n  - `u-bdr--<width>` (example: u-bd--2px, sets a border of 2 pixels at the right end of an element)\n  - `u-bdr--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px at the right end of an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n\n  - `u-bdb--<width>` (example: u-bd--2px, sets a border of 2 pixels below an element)\n  - `u-bdb--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px below an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n\n  - `u-bds--<width>` (example: u-bd--2px, sets a border of 2 pixels at the horizontal start an element)\n  - `u-bds--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px at the horizontal start of an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n\n  - `u-bdl--<width>` (example: u-bd--2px, sets a border of 2 pixels at the left end of an element)\n  - `u-bdl--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px at the left end of an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n  **Border Radius**<br />\n  - `u-bdrs--<radius>` (example: u-bd--2px, sets a border of 2 pixels at the left end of an element)\n\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-border\n```\n\n#### Usage\n\nImport JigSass Utils Border into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-border/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Utils Border does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual border\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-bds, $modifier: '2px(1,solid,#4c4)');\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-bdb, $modifier: '1px(1,dotted,#4c4):hover');\n  @include jigsass-util(u-bdb, $modifier: '2px(1,dotted,#4c4):hover', $from: large);\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Utils Border partial was imported into the main file.\n\n\nJigSass Utils Border classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-bd-<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-bd, $modifier: 1px);\n```\nwill generate the `u-bd--1px` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-bd, $modifier: '1px(1,solid)', $until: medium);\n```\n\nwill generate the `u-bd--1px(1,solid)--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-bd, $modifier: 2px(2):focus, $from: large, $misc: landscape);\n```\n\nwill generate the `u-bd--2px(2):focus--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n.u-bdt--1px\\(2\\,solid\\,border-accented\\) {\n  border-top: 0.1666666667rem solid #bfe0e7;\n  padding-top: 1.8333333333rem;\n  /* ---\nsection: Border Utils\ntitle: u-bdt--1px(2,solid,border-accented)\norder: 101\n---\nA utility class to set an element's border-top\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bdt, $modifier: 1px(2,solid,border-accented) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bdt--1px(2,solid,border-accented)'></div>\n```\n*/ }\n\n.u-bdt--2rem\\(4\\,solid\\,event\\) {\n  border-top: 2rem solid #ed143d;\n  padding-top: 2rem;\n  /* ---\nsection: Border Utils\ntitle: u-bdt--2rem(4,solid,event)\norder: 102\n---\nA utility class to set an element's border-top\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bdt, $modifier: 2rem(4,solid,event) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bdt--2rem(4,solid,event)'></div>\n```\n*/ }\n\n.u-bdt--2rem\\(4\\,solid\\,venue\\) {\n  border-top: 2rem solid #f9b41a;\n  padding-top: 2rem;\n  /* ---\nsection: Border Utils\ntitle: u-bdt--2rem(4,solid,venue)\norder: 103\n---\nA utility class to set an element's border-top\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bdt, $modifier: 2rem(4,solid,venue) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bdt--2rem(4,solid,venue)'></div>\n```\n*/ }\n\n.u-bde--1px\\(1\\,solid\\,border-neutral-b\\) {\n  border-left: 0.1666666667rem solid #ababab;\n  padding-left: 0.8333333333rem;\n  /* ---\nsection: Border Utils\ntitle: u-bde--1px(1,solid,border-neutral-b)\norder: 204\n---\nA utility class to set an element's border-end\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bde, $modifier: 1px(1,solid,border-neutral-b) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bde--1px(1,solid,border-neutral-b)'></div>\n```\n*/ }\n  [dir=ltr] .u-bde--1px\\(1\\,solid\\,border-neutral-b\\) {\n    border-right: 0.1666666667rem solid #ababab;\n    padding-right: 0.8333333333rem; }\n  [dir=rtl] .u-bde--1px\\(1\\,solid\\,border-neutral-b\\) {\n    border-left: 0.1666666667rem solid #ababab;\n    padding-left: 0.8333333333rem; }\n\n.u-bdb--2px\\(1\\,solid\\) {\n  border-bottom: 0.3333333333rem solid;\n  padding-bottom: 0.6666666667rem;\n  /* ---\nsection: Border Utils\ntitle: u-bdb--2px(1,solid)\norder: 405\n---\nA utility class to set an element's border-bottom\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bdb, $modifier: 2px(1,solid) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bdb--2px(1,solid)'></div>\n```\n*/ }\n\n.u-bdb--1px\\(1\\,solid\\,border-neutral-b\\) {\n  border-bottom: 0.1666666667rem solid #ababab;\n  padding-bottom: 0.8333333333rem;\n  /* ---\nsection: Border Utils\ntitle: u-bdb--1px(1,solid,border-neutral-b)\norder: 406\n---\nA utility class to set an element's border-bottom\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bdb, $modifier: 1px(1,solid,border-neutral-b) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bdb--1px(1,solid,border-neutral-b)'></div>\n```\n*/ }\n\n.u-bdb--1px\\(1\\,solid\\,border-accented\\) {\n  border-bottom: 0.1666666667rem solid #bfe0e7;\n  padding-bottom: 0.8333333333rem;\n  /* ---\nsection: Border Utils\ntitle: u-bdb--1px(1,solid,border-accented)\norder: 407\n---\nA utility class to set an element's border-bottom\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bdb, $modifier: 1px(1,solid,border-accented) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bdb--1px(1,solid,border-accented)'></div>\n```\n*/ }\n\n.u-bdb--1rem\\(3\\,solid\\,border-accented\\) {\n  border-bottom: 1rem solid #bfe0e7;\n  padding-bottom: 2rem;\n  /* ---\nsection: Border Utils\ntitle: u-bdb--1rem(3,solid,border-accented)\norder: 408\n---\nA utility class to set an element's border-bottom\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bdb, $modifier: 1rem(3,solid,border-accented) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bdb--1rem(3,solid,border-accented)'></div>\n```\n*/ }\n\n.u-bdb--1px\\(2\\,solid\\,border-accented\\) {\n  border-bottom: 0.1666666667rem solid #bfe0e7;\n  padding-bottom: 1.8333333333rem;\n  /* ---\nsection: Border Utils\ntitle: u-bdb--1px(2,solid,border-accented)\norder: 409\n---\nA utility class to set an element's border-bottom\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bdb, $modifier: 1px(2,solid,border-accented) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bdb--1px(2,solid,border-accented)'></div>\n```\n*/ }\n\n.u-bdb--1px\\(1\\) {\n  border-bottom: 0.1666666667rem solid;\n  padding-bottom: 0.8333333333rem;\n  /* ---\nsection: Border Utils\ntitle: u-bdb--1px(1)\norder: 410\n---\nA utility class to set an element's border-bottom\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bdb, $modifier: 1px(1) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bdb--1px(1)'></div>\n```\n*/ }\n\n.u-bdb--1rem\\(1\\,solid\\,border-accented\\) {\n  border-bottom: 1rem solid #bfe0e7;\n  padding-bottom: 0rem;\n  /* ---\nsection: Border Utils\ntitle: u-bdb--1rem(1,solid,border-accented)\norder: 411\n---\nA utility class to set an element's border-bottom\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bdb, $modifier: 1rem(1,solid,border-accented) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bdb--1rem(1,solid,border-accented)'></div>\n```\n*/ }\n\n.u-bdb--1rem\\(1\\,solid\\,primary\\) {\n  border-bottom: 1rem solid #00829e;\n  padding-bottom: 0rem;\n  /* ---\nsection: Border Utils\ntitle: u-bdb--1rem(1,solid,primary)\norder: 412\n---\nA utility class to set an element's border-bottom\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bdb, $modifier: 1rem(1,solid,primary) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bdb--1rem(1,solid,primary)'></div>\n```\n*/ }\n\n.u-bds--2rem {\n  border-right: 2rem solid;\n  /* ---\nsection: Border Utils\ntitle: u-bds--2rem\norder: 513\n---\nA utility class to set an element's border-start\n\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bds, $modifier: 2rem [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bds--2rem'></div>\n```\n*/ }\n  [dir=ltr] .u-bds--2rem {\n    border-left: 2rem solid; }\n  [dir=rtl] .u-bds--2rem {\n    border-right: 2rem solid; }\n\n.u-bds--\\.5rem\\(1\\,solid\\,primary\\) {\n  border-right: 0.5rem solid #00829e;\n  padding-right: 0.5rem;\n  /* ---\nsection: Border Utils\ntitle: u-bds--.5rem(1,solid,primary)\norder: 514\n---\nA utility class to set an element's border-start\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bds, $modifier: .5rem(1,solid,primary) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bds--.5rem(1,solid,primary)'></div>\n```\n*/ }\n  [dir=ltr] .u-bds--\\.5rem\\(1\\,solid\\,primary\\) {\n    border-left: 0.5rem solid #00829e;\n    padding-left: 0.5rem; }\n  [dir=rtl] .u-bds--\\.5rem\\(1\\,solid\\,primary\\) {\n    border-right: 0.5rem solid #00829e;\n    padding-right: 0.5rem; }\n\n.u-bds--\\.5rem\\(2\\,solid\\,quinary\\) {\n  border-right: 0.5rem solid #0cc;\n  padding-right: 1.5rem;\n  /* ---\nsection: Border Utils\ntitle: u-bds--.5rem(2,solid,quinary)\norder: 515\n---\nA utility class to set an element's border-start\nand padding  so that it does not mess up the vertical rhythm\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bds, $modifier: .5rem(2,solid,quinary) [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  u-bds--.5rem(2,solid,quinary)'></div>\n```\n*/ }\n  [dir=ltr] .u-bds--\\.5rem\\(2\\,solid\\,quinary\\) {\n    border-left: 0.5rem solid #0cc;\n    padding-left: 1.5rem; }\n  [dir=rtl] .u-bds--\\.5rem\\(2\\,solid\\,quinary\\) {\n    border-right: 0.5rem solid #0cc;\n    padding-right: 1.5rem; }\n\n/* ---\nsection: Color Palette\norder: -100\n---\nUse the following colors for creating consistent UIs\n*/\n/* ---\nsection: Color Palette\ntitle: Brand Colors\norder: 1\n---\n\nThe basic brand identity colors\n\n```example:color\n@color: #000 @name: black\n@color: #fff @name: white\n@color: #2d2d2d @name: neutral\n@color: #00829e @name: primary\n@color: #ed143d @name: secondary\n@color: #f9b41a @name: tertiary\n@color: #00a064 @name: quaternary\n@color: #0cc @name: quinary\n\n```\n*/\n/* ---\nsection: Color Palette\ntitle: Color Use Cases\norder: 2\n---\n\nSpecific color use cases.\n\n```example:color\n@color: currentColor @name: current-color\n@color: #2d2d2d @name: text\n@color: #fff @name: text-inverse\n@color: #6c6c6c @name: text-pale\n@color: #b6b6b6 @name: text-muted\n@color: #956c10 @name: text-promoted\n@color: #cbcbcb @name: border-neutral\n@color: #ababab @name: border-neutral-b\n@color: #bfe0e7 @name: border-accented\n@color: #fff @name: border-inverse\n@color: #00829e @name: link\n@color: #e63d00 @name: sales\n@color: #fff @name: bg\n@color: #bfe0e7 @name: bg-accented\n@color: rgba(45, 45, 45, 0.95) @name: bg-dialog-overlay\n@color: #d9ecf0 @name: bg-form\n@color: whitesmoke @name: bg-neutral\n@color: #cbcbcb @name: bg-neutral-b\n@color: #e2e6e7 @name: bg-neutral-c\n@color: #2d2d2d @name: bg-neutral-dark\n@color: #e2e6e7 @name: has-card\n@color: #fff @name: card-bg\n@color: #ed143d @name: event\n@color: #f9b41a @name: venue\n@color: #00a064 @name: article\n@color: #2b2e8f @name: bezeq\n@color: #c1d8f2 @name: bezeq-pale\n\n```\n*/\n/* ---\nsection: Color Palette\ntitle: State\norder: 3\n---\n\nState-indicating colors\n\n```example:color\n@color: #cbcbcb @name: disabled\n@color: #ed143d @name: negative\n@color: #00a064 @name: positive\n@color: #f9b41a @name: warning\n\n```\n*/\n/* ---\nsection: Color Palette\ntitle: Social\norder: 4\n---\n\nSocial media brand colors\n\n```example:color\n@color: #3b5998 @name: facebook\n@color: #55acee @name: twitter\n@color: #d34836 @name: gplus\n@color: #25d366 @name: whatsapp\n\n```\n*/\n","// *************************************\n//\n// # jigsass-objects-media\n// -> A flexbox enabled version of\n//    @Stubbornella's media object\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-object)) {\n  @error '`jigsass-objects-media` has a dependency on `jigsass-tools-selectors`.\n    Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Media object\ntitle: Introduction\norder: -10\n---\n\nA flexbox enabled version of @Stubbornella's media object\n\n**[GitHub page](https://txhawks.github.io/jigsass-objects-media)**\n\nThe [media object](http://bit.ly/Ku2rqE), introduced by Nichole Sullivan, is a\nlayout abstraction for placing fixed width content and fluid content side by side.\n\nJigSass Media is a flexbox enabled implementation of the original, with optional fallback\n(See [Configuration](#configutation)).\n\n## Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-objects-media\n```\n\n## Usage\nFirst, import JigSass Objects Media to your main stylesheet:\n\n```scss\n@import 'path/to/jigsass-objects-media/scss/index';\n```\n\nAnd optionally [reconfigure](#configuration) the defaults to your liking.\n\nLike all other JigSass modules, JigSass Button does not automatically generate any CSS when imported.\nIn order to use its classes, you would have to first explicitly indicate your intention to use\nthem by enabling their generation in the associated [configurations map](#css-output), leaving\nus only with CSS we need:\n\nAll JigSass Media classes are responsive-enabled, using\n[JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/) and the breakpoints defined in the\n[$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)\nvariable.\n\nBased on enabled selectors in the [configuration map](#css-output), responsive modifiers are\ngenerated according to the following logic:\n\n```scss\n.o-media[--modifier][-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n$jigsass-media-obj-conf: (\n  no-breakpoint: (\n    bottom: true,\n  ),\n  until-medium: (\n    bottom: true,\n  ),\n  from-large-when-landscape: (\n    bottom: true,\n  ),\n)\n```\n\nwill generate the following classes:\n  - `.o-media--bottom`, which is not limited to any media-query.\n  - `.o-media--bottom--until-medium`, which will be in effect at\n    `(max-width: 37.49em)` and will override styles in the default class\n    until that point.\n  - `.o-media-bottom--from-large-when-landscape`, which will go into effect at\n    `(min-width: 64em) and (orientation: landscape)` and will override styles\n    in the default class under these  conditions.\n\n\n-----\n\n\nAt its simplest form, the media object is simply a fixed element next to a fluid element,\nfilling up available space:\n\n```example:html\n<div class='u-cf o-media'>\n  <figure class='o-media__fig'>\n    <div class='[ fpo fpo--b fpo--fig ]'></div>\n  </figure>\n  <div class='o-media__content fpo'>\n    <p style='text-align: center'<strong>.o-media__content</strong></p>\n  </div>\n</div>\n```\n\nLike all JigSass object,  JigSass Media is responsive-enabled, and an instance\nmay be set to stack vertically by using responsive modifier classes on the container\n(resize window to see object stacking and unstacking):\n\n```example:html\n<div class='u-cf [ o-media--from-small-until-medium o-media--from-large ]'>\n  <figure class='o-media__fig'>\n    <div class='[ fpo fpo--b fpo--fig ]'></div>\n  </figure>\n  <div class='o-media__content fpo'>\n    <p style='text-align: center'>\n      <strong>Media object only from small until medium and  from large on.</strong>\n    </p>\n  </div>\n</div>\n```\n\nOne of the media object's key features, is that it can be endlessly nested:\n\n```example:html\n<! -- First level -->\n<div class='u-cf o-media'>\n  <figure class='o-media__fig'>\n    <div class='[ fpo fpo--b fpo--fig ]'></div>\n  </figure>\n  <div class='o-media__content fpo'>\n    <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</span>\n\n    <! -- Second level -->\n    <div class='u-cf o-media--from-medium'>\n      <figure class='o-media__fig'><div class='[ fpo fpo--b fpo--fig ]'></div></figure>\n      <div class='o-media__content fpo fpo--c'>\n        <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim venia.</span>\n\n        <! -- Third level -->\n        <div class='u-cf o-media--from-medium'>\n          <figure class='o-media__fig'><div class='[ fpo fpo--b fpo--fig ]'></div></figure>\n          <div class='o-media__content fpo'>\n            <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit.</span>\n\n            <! -- fourth level -->\n            <div class='u-cf o-media--from-large'>\n              <figure class='o-media__fig'><div class='[ fpo fpo--b fpo--fig ]'></div></figure>\n              <div class='o-media__content fpo fpo--c'>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </div>\n            </div>\n            <div class='u-cf o-media--from-large o-media--rev--from-large'>\n              <figure class='o-media__fig'><div class='[ fpo fpo--b fpo--fig ]'></div></figure>\n              <div class='o-media__content fpo fpo--d'>\n                <strong>Media objects can also be reversed</strong> Media Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n```\n\nJigSass Media also offers vertical alignment modifiers ([middle](#middle-aligned),\n[bottem](#bottom-aligned)) and a [reverse](#reversed) modifier.\n\n\n**License:** MIT\n\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Media Object\ntitle: CSS Outpout\norder: -2\n---\nBy default, JigSass Media does not generate any CSS output when imported into\na stylesheet. CSS output must be enabled on a per-selector basis, inside the\ndedicated configuration map:\n\n\n```scss\n$jigsass-media-obj-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nmedia object and modifier classes.\n\n\n**Default:**\n```scss\n$jigsass-media-obj-conf: (\n  no-breakpoint: (\n    no-modifier: false,\n    middle: false,\n    bottom: false,\n    rev: false,\n  ),\n);\n```\n\n\n**Example:**\n```scss\n$jigsass-media-obj-conf: (\n  no-breakpoint: (\n    no-modifier: true,  // Enables generation of the `.o-media`\n                        // class outside of any media query.\n    foo: true,          // Enables generation of the `.o-media--foo`\n                        // modifier class outside of any media query.\n  ),\n  from-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-media--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n    foo: true,          // Enables generation of the `.o-media--foo--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  until-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-media--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  foo: true,          // Enables generation of the `.o-media--foo--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  when-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-media--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n    foo: true,          // Enables generation of the `.o-media--foo--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n*/\n// stylelint-enable\n\n/// Configuration map for enabling generation of\n/// media object and modifier classes.\n/// ---\n/// @example\n///\t\t$jigsass-media-obj-conf: (\n///    no-breakpoint: (\n///      no-modifier: true,  // Enables generation of the `.o-media`\n///                          // class outside of any media query.\n///      foo: true,          // Enables generation of the `.o-media--foo`\n///                          // modifier class outside of any media query.\n///    ),\n///    from-<bp-name>: (\n///      no-modifier: true,  // Enables generation of the `.o-media--from-<bp-name>`\n///                          // class inside a min-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///      foo: true,          // Enables generation of the `.o-media--foo--from-<bp-name>`\n///                          // class inside a min-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///    ),\n///    until-<bp-name>: (\n///      no-modifier: true,  // Enables generation of the `.o-media--until-<bp-name>`\n///                          // class inside a max-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///     foo: true,          // Enables generation of the `.o-media--foo--until-<bp-name>`\n///                          // class inside a max-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///    ),\n///    when-<bp-name>: (\n///      no-modifier: true,  // Enables generation of the `.o-media--when-<bp-name>`\n///                          // class inside a misc media query\n///                          // defined ins `$jigsass-breakpoints.features`.\n///      foo: true,          // Enables generation of the `.o-media--foo--when-<bp-name>`\n///                          // class inside a misc media query\n///                          // defined ins `$jigsass-breakpoints.features`.\n///    ),\n///    from-<bp-name>-until-<bp-name>: (...);\n///    from-<bp-name>-when-<bp-name>: (...);\n///    until-<bp-name>-when-<bp-name>: (...);\n///    from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n///  );\n/// ---\n/// @type {Map}\n/// ---\n$jigsass-media-obj-conf: (\n  no-breakpoint: (\n    no-modifier: false,\n    middle: false,\n    bottom: false,\n    rev: false,\n  ),\n) !default;\n\n\n\n// stylelint-disable\n/* ---\nsection: Media Object\ntitle: Configuration\norder: -1\n---\nJigSass Media allows for some modification through tweaking configuration variable.\nTo override the default values, predefine them to your own needs _before_ importing\nthis file.\n\n\n#### Flexbox support\n```scss\n$jigsass-media-flexbox\n```\n**Type:** `Boolean`\n\nDetermines if flexbox should be enabled, where relevant\n\n**Default:** `true`\n\n\n#### Flexbox Fallback\n```scss\n$jigsass-media-flexbox-fallback\n```\n**Type:** `Boolean` or `String`\n\nDetermines if flexbox fallback should be included and the qualifier class\nto use if so (e.g, `.no-flexbox` when using Modernizr defaults)\n\nSet to `false` to disable fallback altogether, and to a class-name\n(sans the leading `.`) used as the qualifier class if fallback is\ndesirable.\n\n**Default:** `'no-flexbox'`\n*/\n// stylelint-enable\n\n/// Determines if flexbox should be enabled, where relevant\n/// ---\n/// @type {Boolean}\n/// ---\n$jigsass-media-flexbox: true !default;\n\n/// Determines if flexbox fallback should be included and the qualifier class\n/// to use if so (e.g, `.no-flexbox` when using Modernizr defaults)\n///\n/// Set to `false` to disable fallback altogether, and to a class-name\n/// (sans the leading `.`) used as the qualifier class if fallback is\n/// desirable.\n/// ---\n/// @type {Boolean | String}\n/// ---\n$jigsass-media-flexbox-fallback: 'no-flexbox' !default;\n\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n\n\n\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object(o-media, $jigsass-media-obj-conf) {\n  // A flexbox enabled implementation of Nicole sullivan's\n  // [media object](http://bit.ly/Ku2rqE) with optional fallback\n  // ---\n  // 1. Needs to be clearfixed (`u-cf` class in the HTML)\n  // ---\n  @include jigsass-classname() {\n    @if ($jigsass-media-flexbox) {\n      display: flex;\n\n      > .o-media__content {\n        flex: 1 1 auto;\n      }\n\n      > .o-media__fig {\n        flex-grow: 0;\n        flex-shrink: 0;\n      }\n\n      @if ($jigsass-media-flexbox-fallback) {\n        .#{$jigsass-media-flexbox-fallback} & {\n          @include jigsass-util(u-cf);  // [1]\n\n          display: block;\n\n          > .o-media__fig {\n            @include jigsass-bidi(float, start);\n            display: block;\n\n            img {\n              vertical-align: top;\n            }\n          }\n\n          > .o-media__content {\n            display: table-cell;\n            max-width: 100%;\n            width: 100000px;\n          }\n        }\n      }\n    }\n    @else {\n      @include jigsass-util(u-cf);  // [1]\n\n      display: block;\n\n      > .o-media__fig {\n        @include jigsass-bidi(float, start);\n        display: block;\n\n        img {\n          vertical-align: top;\n        }\n      }\n\n      > .o-media__content {\n        display: table-cell;\n        max-width: 100%;\n        width: 100000px;\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n  /* ---\n  section: Media Object\n  title: Base\n  order: 1\n  ---\n  A flexbox enabled implementation of Nicole sullivan's\n  [media object](http://bit.ly/Ku2rqE) with optional fallback\n\n  Used to create a container with a fixed-width element at one end, and a fluid\n  width container next to it.\n\n  ```example:html\n  <div class='u-cf o-media'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'<strong>.o-media__content</strong></p>\n    </div>\n  </div>\n  ```\n\n  A media object may be set to stack vertically by using responsive modifier classes\n  on the container (resize window to see object stacking and unstacking):\n\n  ```example:html\n  <div class='u-cf [ o-media--from-small-until-medium o-media--from-large ]'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'>\n        <strong>Media object only from small until medium and  from large on.</strong>\n      </p>\n    </div>\n  </div>\n  ```\n\n\n  #### CSS Output\n\n  ```scss\n  // When flexbox is enabled\n  .o-media {\n    display: flex;\n  }\n  .o-media > .o-media__content {\n    flex: 1 1 auto;\n  }\n\n\n  // When flexbox fallback is enabled\n  .u-clearfix { ... }\n  .#{$jigsass-media-flexbox-fallback} .o-media {\n    display: block;\n  }\n\n  .#{$jigsass-media-flexbox-fallback} .o-media > .o-media__fig {\n    @include jigsass-bidi(float, start);\n    display: block;\n  }\n\n  .#{$jigsass-media-flexbox-fallback} .o-media > .o-media__fig img {\n    vertical-align: top;\n  }\n\n  .#{$jigsass-media-flexbox-fallback} .o-media > .o-media__content {\n    display: table-cell;\n    max-width: 100%;\n    width: 100000px;\n  }\n\n\n  // When flexbox is disabled\n  .u-clearfix { ... }\n\n  .o-media {\n    display: block;\n  }\n\n  .o-media > .o-media__fig {\n    @include jigsass-bidi(float, start);\n    display: block;\n  }\n\n  .o-media > .o-media__fig img {\n    vertical-align: top;\n  }\n\n  .o-media > .o-media__content {\n    display: table-cell;\n    max-width: 100%;\n    width: 100000px;\n  }\n  ```\n  */\n      //stylelint-enable\n    }\n  }\n\n\n  @include jigsass-classname($modifier: middle) {\n    @if ($jigsass-media-flexbox) {\n      align-items: center;\n\n      @if ($jigsass-media-flexbox-fallback) {\n        .#{$jigsass-media-flexbox-fallback} & {\n          display: table;\n\n          > .o-media__fig {\n            display: inline-block;\n            float: none;\n          }\n\n          > .o-media__fig,\n          > .o-media-content {\n            vertical-align: middle;\n          }\n        }\n      }\n    }\n    @else {\n      display: table;\n\n      > .o-media__fig {\n        display: inline-block;\n        float: none;\n      }\n\n      > .o-media__fig,\n      > .o-media-content {\n        vertical-align: middle;\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n\n      // stylelint-disable\n\n  /* ---\n  section: Media Object\n  title: Middle Aligned\n  order: 1\n  ---\n  A media object with items aligned to the vertical middle.\n\n  ```example:html\n  <div class='u-cf [ o-media o-media--middle ]'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'<strong>.o-media__content</strong></p>\n    </div>\n  </div>\n  ```\n\n  Can also be applying responsively:\n\n  ```example:html\n  <div class='u-cf [ o-media o-media--middle--from-small-until-medium o-media--middle--from-large ]'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'>\n        <strong>Middle aligned only from small until medium and  from large on.</strong>\n      </p>\n    </div>\n  </div>\n  ```\n\n\n  #### CSS Output\n\n  ```scss\n  // When flexbox is enabled\n  .o-media--middle { align-items: center; }\n\n  // When flexbox fallback is enabled\n  .#{$jigsass-media-flexbox-fallback} .o-media--middle { display: table; }\n\n  .#{$jigsass-media-flexbox-fallback} .o-media--middle > .o-media__fig {\n    display: inline-block;\n    float: none;\n  }\n  .#{$jigsass-media-flexbox-fallback} .o-media--middle > .o-media__fig,\n  .#{$jigsass-media-flexbox-fallback} .o-media--middle > .o-media__content {\n    vertical-align: middle;\n  }\n\n\n  // When flexbox is disabled\n  .o-media--middle { display: table; }\n\n  .o-media--middle > .o-media__fig {\n    display: inline-block;\n    float: none;\n  }\n  .o-media--middle > .o-media__fig,\n  .o-media--middle > .o-media__content {\n    vertical-align: middle;\n  }\n  ```\n  */\n      //stylelint-enable\n    }\n  }\n\n  @include jigsass-classname($modifier: bottom) {\n    @if ($jigsass-media-flexbox) {\n      align-items: flex-end;\n\n      @if ($jigsass-media-flexbox-fallback) {\n        .#{$jigsass-media-flexbox-fallback} & {\n          display: table;\n\n          > .o-media__fig {\n            display: inline-block;\n            float: none;\n          }\n\n          > .o-media__fig,\n          > .o-media-content {\n            vertical-align: bottom;\n          }\n        }\n      }\n    }\n    @else {\n      display: table;\n\n      > .o-media__fig {\n        display: inline-block;\n        float: none;\n      }\n\n      > .o-media__fig,\n      > .o-media-content {\n        vertical-align: bottom;\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n\n      // stylelint-disable\n\n  /* ---\n  section: Media Object\n  title: Bottom Aligned\n  order: 2\n  ---\n  A media object with items aligned to the vertical bottom.\n\n  ```example:html\n  <div class='u-cf [ o-media o-media--bottom ]'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'<strong>.o-media__content</strong></p>\n    </div>\n  </div>\n  ```\n\n  Can also be applying responsively:\n\n  ```example:html\n  <div class='u-cf [ o-media o-media--bottom--from-small-until-medium o-media--bottom--from-large ]'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'>\n        <strong>Bottom aligned only from small until medium and  from large on.</strong>\n      </p>\n    </div>\n  </div>\n  ```\n\n\n  #### CSS Output\n\n  ```scss\n  // When flexbox is enabled\n  .o-media--bottom { align-items: flex-end; }\n\n  // When flexbox fallback is enabled\n  .#{$jigsass-media-flexbox-fallback} .o-media--bottom { display: table; }\n\n  .#{$jigsass-media-flexbox-fallback} .o-media--bottom > .o-media__fig {\n    display: inline-block;\n    float: none;\n  }\n  .#{$jigsass-media-flexbox-fallback} .o-media--bottom > .o-media__fig,\n  .#{$jigsass-media-flexbox-fallback} .o-media--bottom > .o-media__content {\n    vertical-align: bottom;\n  }\n\n\n  // When flexbox is disabled\n  .o-media--bottom { display: table; }\n\n  .o-media--bottom > .o-media__fig {\n    display: inline-block;\n    float: none;\n  }\n  .o-media--bottom > .o-media__fig,\n  .o-media--bottom > .o-media__content {\n    vertical-align: bottom;\n  }\n  ```\n  */\n      //stylelint-enable\n    }\n  }\n\n\n  // A reversed media object\n  // ---\n  // 1. Reverse the container's direction\n  // 2. Restore direction of container's children\n  // ---\n  @include jigsass-classname($modifier: rev) {\n    @if ($jigsass-media-flexbox) {\n      flex-direction: row-reverse;\n\n      @if ($jigsass-media-flexbox-fallback) {\n        .#{$jigsass-media-flexbox-fallback} & {\n          @if (not mixin-exists(jigsass-bidi)) {\n            @error '`jigsass-objects-media` has a dependency on `jigsass-tools-bidi`.\n            Please import it.';\n          }\n\n          @include jigsass-bidi(direction, ets);      // [1]\n\n          > * {\n            @include jigsass-bidi(direction, ste);    // [2]\n          }\n        }\n      }\n\n      @else {\n        @if (not mixin-exists(jigsass-bidi)) {\n          @error '`jigsass-objects-media` has a dependency on `jigsass-tools-bidi`.\n          Please import it.';\n        }\n\n        @include jigsass-bidi(direction, ets);      // [1]\n\n        > * {\n          @include jigsass-bidi(direction, ste);    // [2]\n        }\n      }\n    }\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n\n      // stylelint-disable\n\n  /* ---\n  section: Media Object\n  title: Reversed\n  order: 3\n  ---\n  A media object in which elements are displayed opposite of their position in\n  the source order.\n\n  ```example:html\n  <div class='u-cf [ o-media o-media--rev ]'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'<strong>I am actually second in the source order</strong></p>\n    </div>\n  </div>\n  ```\n\n  Can also be applying responsively:\n\n  ```example:html\n  <div class='u-cf [ o-media o-media--rev--from-small-until-medium o-media--rev--from-large ]'>\n    <figure class='o-media__fig'>\n      <div class='[ fpo fpo--b fpo--fig ]'></div>\n    </figure>\n    <div class='o-media__content fpo'>\n      <p style='text-align: center'>\n        <strong>Reversed only from small until medium and  from large on.</strong><br />\n        I am actually second in the dource order...\n      </p>\n    </div>\n  </div>\n  ```\n\n\n  #### CSS Output\n\n  ```scss\n  // When flexbox is enabled\n  .o-media--rev { flex-direction: row-reverse; }\n\n  // When flexbox fallback is enabled\n  .#{$jigsass-media-flexbox-fallback} .o-media--rev { direction: (ltr|rtl); }\n  .#{$jigsass-media-flexbox-fallback} .o-media--rev > * { direction: (rtl|ltr); }\n\n  // When flexbox is disabled\n  .o-media--rev { direction: (ltr|rtl); }\n  .o-media--rev > * { direction: (rtl|ltr); }\n  ```\n  */\n\n      //stylelint-enable\n    }\n  }\n}\n","// *************************************\n//\n// # jigsass-tools-bidi\n// -> Painless bidirectional style authoring\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n//\n////\n/// @group bidi\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not function-exists(jigsass-str-replace)) {\n  @error '`jigsass-tools-bidi` has a dependency on `jigsass-tools-strings`. Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// The direction in which styles\n/// should be outputted\n/// ---\n/// @type String\n/// ---\n$jigsass-direction: ltr !default;\n\n/// Determines if `jigsass-bidi` will convert pixel values to `rem` by default when possible\n/// ---\n/// @type Boolean\n/// ---\n$jigsass-bidi-rem-default: if(\n  global-variable-exists($jigsass-default-unit),\n  $jigsass-default-unit == rem,\n  false\n) !default;\n\n\n\n\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n/// Translate `start` or `end` into either\n/// `left` or `right`, depending on the current\n/// value of `$jigsass-direction`;\n/// ---\n/// @param {String} $side\n///   The side to translate into `left` or `right`. Can be `start` or `end`.\n/// ---\n/// @return {String} - The translated value of `$side`. `left` or `right`\n/// ---\n@function _jigsass-get-side($side) {\n  @if (not index(start end, to-lower-case($side))) {\n    @error '_jigsass-get-side: `$side` may only be `start` or `end`, but you passed `#{$side}`';\n  }\n\n  @if (to-lower-case($jigsass-direction) == ltr) {\n    @return if(to-lower-case($side) == start, left, right);\n  }\n\n  @return if(to-lower-case($side) == start, right, left);\n}\n\n\n/// Helper for transforming direction-agnostic\n/// text/box-shadow values\n/// ---\n/// @param {List} $values\n///   A space-separated list of box-shadow values, or\n/// ---\n/// @return {List} Transformed box shadow values\n/// ---\n@function _jigsass-bidi-shadow($values) {\n  $h-offset-index: if(type-of(nth($values, 1)) == string, 2, 1);\n\n  @return set-nth(\n    $values,\n    $h-offset-index,\n    (-1 * nth($values, $h-offset-index))\n  );\n}\n\n\n/// Utility function to transform background-position\n/// values in a `start-to-end`, direction-agnostic manner\n@function _jigsass-bidi-bgp($position) {\n  $_rtl: to-lower-case($jigsass-direction) == rtl;\n  $_value-store: ();\n\n  @for $i from 1 through length($position) {\n    $_value: nth($position, $i);\n    $_type: type-of($_value);\n\n    @if (index(start end, $_value)) {\n      @if ($i != 1) {\n        @error 'jigsass-bidi: horizontal position must be passed before vertical ' +\n          '(When trying to set #{$position}).';\n      }\n      $_sides: (start: if($_rtl, right, left), end: if($_rtl, left, right));\n\n      $_value: map-get($_sides, $_value);\n    }\n\n    @else if ($_type == number and $_rtl) {\n      @if ($i == 1 and unit($_value) == '%') {\n        $_value: if(\n          length($position) == 1,\n          abs($_value - 100%) $_value,\n          abs($_value - 100%)\n        );\n      }\n    }\n\n    $_value-store: append($_value-store, $_value);\n  }\n\n  @return $_value-store;\n}\n\n\n/// A helper to convert direction agnostic\n/// transform functions' arguments\n/// ---\n/// @param {Number} $value - The value to transform\n/// ---\n/// @return {Number}\n/// ---\n/// @access private\n/// ---\n@function _jigsass-bidi-transform($value) {\n  $unit: unit($value);\n\n  @if (index('px' '%', $unit)) { @return $value * -1; }\n  @if ($unit == deg) { @return abs($value - 360); }\n  @if ($unit == turn) { @return abs($value - 1); }\n  @if ($unit == grad) { @return abs($value - 400); }\n  @if ($unit == rad) { @return abs($value - 6.2831853072); }\n}\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n/// Direction-agnostic styles\n///\n/// Ease the process of writing clean and maintainable bidirectional stylesheets by\n/// using a single mixin to handle transformation of all direction-related styles\n/// (values and/or properties) by interpreting directions as `start`\\`end`\n/// instead of `left`\\`right`.\n///\n/// Whether `start` is considered to be `left` or `right` depends on the direction\n/// set in `$jigsass-direction`.\n///\n/// **Caveats** (See Examples bellow):\n///   - The `background` shorthand is not supported. Set the `background-image`\n///     and `background-position` properties directly.\n///   - When multi-dimensional lists are passsed to to `$values` argument\n///     (e.g., to border-radius, box-shadow, text-shadow or background-position),\n///     They should be passed as space separated lists inside a comma-separated list.\n///   - The `X` argument of `backgrond-position` and `transform-origin` can be transformed\n///     only if set to `start`, `end` or a number in percentage (`%`).\n///     transforming non-relative widths requires knowledge of the container's dimensions.\n/// ---\n/// @param {String} $property\n/// @param {String | Number | List | Color} $values\n///   Values to process\n/// @param {String | List | Boolean} $bps [false]\n///   list of breakpoints to output the converted values in.\n///   `auto` iterates over the breakpoints defined in\n///   the `rhythm-unit` key of the sizes palette\n///   (from `jigsass-tools-typography`).\n///   `all` iterates over all length breakpoints.\n///   Only supports min-width media-queries.\n/// @param {Boolean} $rem [$jigsass-bidi-rem-default]\n///   Indicates if pixel values should be converted into rems\n/// ---\n/// @example scss - Direction (start to end)\n///   @include jigsass-bidi(diraction, ste); // -> ltr-mode: direction: ltr;\n///                                          //    rtl-mode: direction: rtl;\n///\n/// @example scss - Direction (end to start)\n///   @include jigsass-bidi(diraction, ets); // -> ltr-mode: direction: rtl;\n///                                          //    rtl-mode: direction: ltr;\n///\n/// @example scss - start/end property\n///   @include jigsass-bidi(margin-start, 6px); // -> ltr-mode: margin-left: 6px;\n///                                             //    rtl-mode: margin-right: 6px;\n///\n/// @example scss - start/end value\n///   @include jigsass-bidi(float, end); // -> ltr-mode: float: right;\n///                                      //    rtl-mode: float: left;\n///\n/// @example scss - List of numbers\n///   @include jigsass-bidi(margin, 0 8px 6px 12px); // -> ltr-mode: margin: 0 8px 6px 12px;\n///                                                  //    rtl-mode: margin: 0 12px 6px 8px;\n///\n/// @example scss - List of lists\n///   @include jigsass-bidi(\n///     border-radius,\n///     (8px 12px 6px, 12px 14px)\n///    ); // -> ltr-mode: border-radius: 8px 12px 16px / 12px 14px;\n///       // -> rtl-mode: border-radius: 12px 8px 12px 16px / 14px 14px;\n/// ---\n@mixin jigsass-bidi($property, $values, $bps: false, $rem: $jigsass-bidi-rem-default) {\n  @if (not index(ltr rtl, to-lower-case($jigsass-direction))) {\n    @error 'jigsass-bidi: `$jigsass-direction` must be either `ltr` or `rtl`, ' +\n      'but it is set to #{$jigsass-direction} (When setting #{$property}, #{$values}).';\n  }\n\n  // Dependencies\n  @if ($bps == auto and not function-exists(jigsass-merge-sizes)) {\n    @error '`jigsass-tools-bidi` has a dependency on `jigsass-tools-typography` for setting ' +\n      'rhythm-unit breakpoints. Please import it.';\n  }\n  @if ($rem and not mixin-exists(jigsass-rem)) {\n    @error '`jigsass-tools-bidi` has a dependency on `jigsass-tools-typography` ' +\n      'for converting pixel values to rem. Please import it.';\n  }\n\n  @if ($bps and mixin-exists(jigsass-mq)) {\n    $_bps: if(\n      $bps == auto,\n      map-keys(map-get(jigsass-merge-sizes(), rhythm-unit)),\n      if(\n        $bps == all,\n        map-keys(map-get($jigsass-breakpoints, lengths)),\n        $bps\n      )\n    );\n\n    @each $bp in $_bps {\n      @include jigsass-mq($bp) {\n        @include _jigsass-bidi($property, $values, $rem);\n      }\n    }\n  }\n\n  // Generate in current active breakpoint\n  @else {\n    @if ($bps and not mixin-exists(jigsass-mq)) {\n      @warn 'jigsass-rem: Can\\'t generate media queries - the `jigsass-mq` mixin does not exist.' +\n        ' Generating output outside a media query';\n    }\n\n    @include _jigsass-bidi($property, $values, $rem);\n  }\n}\n\n\n/// Temporarily set the direction for the context of\n/// the mixin's execution.\n/// ---\n/// @param {String} $direction\n/// ---\n/// @example scss - scss input\n///   $jigsass-direction: ltr;\n///\n///   .ltr-component {\n///     @include jigsass-bidi(margin-start, 12px);\n///   }\n///\n///   .rtl-component {\n///     @include jigsass-bidi-direction(rtl) {\n///       @include jigsass-bidi(margin-start, 12px);\n///     }\n///   }\n///\n/// @example css - CSS output\n///   .ltr-component {\n///     margin-left: 12px;\n///   }\n///\n///   .rtl-component {\n///     margin-right: 12px;\n///   }\n/// ---\n@mixin jigsass-bidi-direction($direction) {\n  // Locally cache current direction from global scope.\n  $_direction-cache: $jigsass-direction;\n\n  // Set temporary direction in global scope.\n  $jigsass-direction: $direction !global;\n\n  @content;\n\n  // Reset direction in global scope.\n  $jigsass-direction: $_direction-cache !global;\n}\n\n\n\n\n\n// -------------------------------------\n// Helper Mixins\n// -------------------------------------\n\n/// A utility mixin to call the correct transformer mixins\n/// based on the property or values that were passed.\n/// ---\n/// @access private\n/// ---\n@mixin _jigsass-bidi($property, $values, $rem) {\n  // Simple string transformations\n  @if (\n    (type-of($values) == string and index(start end, $values)) or\n    str-index($property, start) or\n    str-index($property, end)\n  ) {\n    @include _jigsass-bidi-simple($property, $values, $rem);\n  }\n  // Direction\n  @else if ($property == direction) {\n    @include _jigsass-bidi-direction($values);\n  }\n\n  // Border radius\n  @else if ($property == border-radius) {\n    @include _jigsass-bidi-bdrs($values, $rem);\n  }\n\n  // background-image\n  @else if ($property == background-image) {\n    @include _jigsass-bidi-bgi($values);\n  }\n\n  // background-position\n  @else if ($property == background-position) {\n    @include _jigsass-bidi-bgp($values, $rem);\n  }\n\n  // box/test-shadow\n  @else if (index(box-shadow text-shadow, $property)) {\n    @include _jigsass-bidi-shadow($property, $values, $rem);\n  }\n\n  // transform\n  @else if ($property == transform) {\n    @include _jigsass-bidi-transform($values, $rem);\n  }\n\n  // transform-origin\n  @else if ($property == transform-origin) {\n    @include _jigsass-bidi-transform-origin($values, $rem);\n  }\n\n  @else {\n    // List of numbers\n    $_list-of-numbers: true;\n    @if (type-of($values) == list) {\n\n      @each $value in $values {\n        $_list-of-numbers: $_list-of-numbers and type-of($value) == number;\n      }\n    }\n\n    @if ($_list-of-numbers and type-of($values) == list) {\n      @include _jigsass-bidi-sides($property, $values, $rem);\n    }\n\n    // Non direction related, just leave as is.\n    @else {\n      @if ($rem) { @include jigsass-rem($property, $values); }\n\n      @else { #{$property}: $values; }\n    }\n  }\n}\n\n\n/// Direction agnostic `direction`\n/// ---\n/// @param {String} $direction\n///   `ste` = start-to-end, `ets` = end-to-start.\n///   `rtl` and `ltr` will be printed as is, without\n///   trasformation, regardless of the JigSass direction context\n/// ---\n@mixin _jigsass-bidi-direction($direction) {\n  @if (not index(ltr rtl ste ets, $direction)) {\n    @error 'jigsass-bidi: #{$direction} is not a valid direction value. ' +\n      'Try `ste` (contextual - start-to-end), `ets` (contextual - end-to-start)' +\n      '`ltr` (absolute, will not be converted) or `rtl` (absolute, will not be converted).';\n  }\n\n  $_rtl: to-lower-case($jigsass-direction) == rtl;\n\n  @if ($direction == ste) { $direction: if($_rtl, rtl, ltr); }\n  @if ($direction == ets) { $direction: if($_rtl, ltr, rtl); }\n\n  direction: $direction;\n}\n\n\n/// Contextually convert `start` and `end` into `left` or `right.`\n/// ---\n/// @param {String} $property\n/// @param {Number | String | list | Color} $values\n/// ---\n/// @access private\n/// ---\n@mixin _jigsass-bidi-simple($property, $values, $rem) {\n  $_rtl: to-lower-case($jigsass-direction) == rtl;\n\n  $_prop: if(\n    str-index($property, start),\n    jigsass-str-replace($property, start, if($_rtl, right, left), $match-case: false),\n    if(\n      str-index($property, end),\n      jigsass-str-replace($property, end, if($_rtl, left, right), $match-case: false),\n      $property\n    )\n  );\n  $_value: if(index(start end, $values), _jigsass-get-side($values), $values);\n\n  @if ($rem) { @include jigsass-rem($_prop, $_value); }\n\n  @else { #{$_prop}: $_value; }\n}\n\n\n/// Contextually interpret lists of four values as\n/// `top-end-bottom-start` instead of 'top-right-bottom-left'.\n/// ---\n/// @param {String} $property\n/// @param {List} $values\n/// @param {Boolean} $rem\n///   Determines if pixel values will be converted into rems.\n/// ---\n/// @access private\n/// ---\n@mixin _jigsass-bidi-sides($property, $values, $rem) {\n  $_rtl: to-lower-case($jigsass-direction) == rtl;\n\n  @if ((length($values) == 4) and $_rtl) {\n    $values: nth($values, 1) nth($values, 4) nth($values, 3) nth($values, 2);\n  }\n\n  @if ($rem) { @include jigsass-rem($property, $values); }\n\n  @else { #{$property}: $values; }\n}\n\n\n/// Direction agnostic box/text-shadow authoring\n/// ---\n/// @param {String} $property\n///   `text-shadow` or `box-shadow`\n/// @param {List} $values\n///   A space-separated list of box-shadow values, or\n///   a comma-separated list of space-separated lists\n///   of box-shadow values\n/// @param {Boolean} $rem\n///   Determines if pixel values will be converted into rems.\n/// ---\n@mixin _jigsass-bidi-shadow($property, $values, $rem) {\n  $_rtl: to-lower-case($jigsass-direction) == rtl;\n  $_multi-shadows: list-separator($values) == comma;\n\n  $shadows: null;\n\n  @if ($_rtl) {\n    $shadows: ();\n\n    @if ($_multi-shadows) {\n      @each $shadow in $values {\n        $shadows: append($shadows, _jigsass-bidi-shadow($shadow));\n      }\n    }\n\n    $shadows: append($shadows, _jigsass-bidi-shadow($values));\n  }\n\n\n  @if ($rem) { @include jigsass-rem($property, $shadows or $values); }\n\n  @else { #{$property}: $shadows or $values; }\n}\n\n\n/// Helper to transform linear gradients as if they were written\n/// in a direction-agnostic manner (`start-to-end` and clockwise for ltr,\n/// counter-clockwise for rtl).\n/// ---\n/// @param {String | List} $values\n///   One or more strings to serve as background-image values.\n/// ---\n@mixin _jigsass-bidi-bgi($values) {\n  $_rtl: to-lower-case($jigsass-direction) == rtl;\n  $_values-store: ();\n\n  @each $value in $values {\n    @if (str-index($value, 'linear-gradient(')) {\n      @if (str-index($value, ' end') or str-index($value, ' start')) {\n        @if (str-index($value, ' end')) {\n          $value: jigsass-str-replace($value, ' end', if($_rtl, ' left', ' right'));\n        }\n        @if (str-index($value, ' start')) {\n          $value: jigsass-str-replace($value, ' start', if($_rtl, ' right', ' left'));\n        }\n      }\n\n      @else if ($_rtl) {\n        $value: str-slice($value, str-index($value, 'linear-gradient(') + 16);\n        $value: jigsass-str-trim($value, true, false);\n\n        $_angle: false;\n\n        @if (str-index($value, deg)) {\n          $_angle: map-merge((), (type: deg, index: str-index($value, deg)));\n        }\n        @else if (str-index($value, turn)) {\n          $_angle: map-merge((), (type: turn, index: str-index($value, turn)));\n        }\n        @else if (str-index($value, grad)) {\n          $_angle: map-merge((), (type: grad, index: str-index($value, grad)));\n        }\n        @else if (str-index($value, rad)) {\n          $_angle: map-merge((), (type: rad, index: str-index($value, rad)));\n        }\n\n\n        @if ($_angle) {\n          $_indx: map-get($_angle, index);\n          $_type: map-get($_angle, type);\n          $_end: $_indx - 1;\n\n          $num-str: str-slice($value, 1, $_end);\n\n          $num: jigsass-str-to-number($num-str);\n\n          @if ($_type == deg) { $num: abs($num - 360); }\n          @else if ($_type == turn) {\n            $num: abs($num - 1);\n          }\n          @else if ($_type == grad) { $num: abs($num - 400); }\n\n          // When `rad`\n          @else { $num: abs($num - 6.2831853072); }\n\n          $value: unquote('linear-gradient(') + $num + str-slice($value, $_end + 1);\n        }\n      }\n    }\n\n    $_values-store: append($_values-store, $value, comma);\n  }\n\n  background-image: $_values-store or $values;\n}\n\n\n/// Direction agnostic background-position\n///\n/// transforms background-position values in a\n/// `start-to-end`, direction-agnostic manner\n/// ---\n/// @param {String | Number | List} $values\n///   Only numbers specified in percentage units can be\n///   transformed, as other units require knowledge of the\n///   container's width.\n///\n///   For multiple positions (in cases of multiple background images),\n///   each _set_ of position values must be a space-separated list\n///   inside a comma-separated list.\n///\n///   For example, to get:\n///   '''css\n///     background-position: 25% 50%, left\n///   '''\n///\n///   The `$values` argument should be passed as:\n///   '''scss\n///     $values: (25% 50%, left)\n///   '''\n/// @param {Boolean} $rem\n///   Determines if pixel values will be converted into rems.\n/// ---\n/// @access private\n/// ---\n@mixin _jigsass-bidi-bgp($values, $rem) {\n  $_positions: ();\n\n  $_multi-bgs: list-separator($values) == comma;\n\n  @each $value in $values {\n    @if (length($value) > 2) {\n      @error 'jigsass-bidi: `background-position` only takes two arguments per' +\n        'position, but you are trying to pass #{length($value)}. Did you mean ' +\n        'to specify multiple positions?';\n    }\n  }\n\n  @if ($_multi-bgs) {\n    @each $position in $values {\n      $_positions: append($_positions, _jigsass-bidi-bgp($position), comma);\n    }\n  }\n  @else { $_positions: append($_positions, _jigsass-bidi-bgp($values), comma); }\n\n  @if ($rem) { @include jigsass-rem(background-position, $_positions); }\n  @else { background-position: $_positions; }\n}\n\n\n/// Direction agnostic transforms, with support\n/// for multiple transform functions.\n/// ---\n/// @param {String | List} $values\n///   A transform function or a list of transform functions.\n/// @param {Boolean} $rem\n///   Determines if pixel values will be converted into rems.\n/// ---\n/// @access private\n/// ---\n@mixin _jigsass-bidi-transform($values, $rem) {\n  @if (to-lower-case($jigsass-direction) == rtl) {\n    $funcs: ();\n\n    @each $func in $values {\n      @if (\n        str-index($func, 'translate(') or\n        str-index($func, 'translateX(') or\n        str-index($func, 'translate3d(') or\n        str-index($func, 'rotate(') or\n        str-index($func, 'rotateZ(') or\n        str-index($func, 'rotate3d(') or\n        str-index($func, 'skew(') or\n        str-index($func, 'skewX(')\n      ) {\n        $args-index: str-index($func, '(') + 1;\n        $args: jigsass-str-split(str-slice($func, $args-index, -2), ',');\n        $func-type: str-slice($func, 1, ($args-index - 2));\n\n        // If dealing with a `rotate3d` function,\n        // transform the `Z` axis\n        @if ($func-type == rotate3d) {\n          $z: jigsass-str-to-number(nth($args, 3));\n          $args: set-nth($args, 3, _jigsass-bidi-transform($z));\n        }\n\n        // transform the `X` axis\n        @else {\n          $x: jigsass-str-to-number(nth($args, 1));\n          $args: set-nth($args, 1, _jigsass-bidi-transform($x));\n        }\n\n        $func: $func-type + '(' + $args + ')';\n      }\n\n      $funcs: append($funcs, $func, space);\n    }\n\n    $values: $funcs;\n  }\n\n  @if ($rem) { @include jigsass-rem(transform, $values); }\n  @else { transform: $values; }\n}\n\n\n/// Direction agnostic transform-origin\n///\n/// transform transform-origin as if it were written start-to-end instead\n/// of right-to-left.\n/// **caveat:** Length values can only be transformed if they\n/// are in percentage, because transforming non-relative values\n/// requires knowledge of the container's dimensions.\n/// ---\n/// @access private\n/// ---\n@mixin _jigsass-bidi-transform-origin($values, $rem) {\n  $_rtl: to-lower-case($jigsass-direction) == rtl;\n\n  $second: length($values) > 1;\n\n  $x-index: if(\n    index(left right, nth($values, 1)),\n    1,\n    if(\n      $second and index(left right, nth($values, 2)),\n      2,\n      if(\n        $second and index(bottom top, nth($values, 1)),\n        2,\n        if(not $second and index(bottom top, nth($values, 1)), null, 1)\n      )\n    )\n  );\n\n  @if ($x-index) {\n    $x: nth($values, $x-index);\n    @if ($x == start) { $values: set-nth($values, $x-index, if($_rtl, right, left)); }\n    @else if ($x == end) { $values: set-nth($values, $x-index, if($_rtl, left, right)); }\n    @else if (unit(($x)) == '%' and $_rtl) { $values: set-nth($values, $x-index, abs($x - 100)); }\n  }\n\n  @if $rem { @include jigsass-rem(transform-origin, $values); }\n  @else { transform-origin: $values; }\n}\n\n\n/// Direction agnostic border radius\n/// @param {List} $values\n///   Instead of being processed left to right, values are\n///   processed `top-start`, `top-end`, `bottom-end`, `bottom-start`.\n///   with support for primary and optionally secondary border-radius\n///   values for border-radius.\n///\n///   When secondary values are set, each _set_ of radii must be a\n///   space-separated list inside a comma-separated list.\n///\n///   For example, to get:\n///   '''css\n///     border-radius: 12px 6px / 18px;\n///   '''\n///\n///   The `$values` argument should be passed as:\n///   '''scss\n///     $values: (12px 6px, 18px)\n///   '''\n/// @param {Boolean} $rem\n///   Determines if pixel values will be converted into rems.\n/// ---\n@mixin _jigsass-bidi-bdrs($values, $rem) {\n  $_has-secondary: if(list-separator($values) == comma, (), null);\n  $_rtl: to-lower-case($jigsass-direction) == rtl;\n\n  @if (length($values) > 4) {\n    @error 'jigsass-bidi: `border-radius` can have a maximum of 4 primary or ' +\n      'secondary values, you are trying to pass #{length($values)}. Are you ' +\n      'trying to set secondary (vertical) radii?';\n  }\n  @if ($_has-secondary and length($values) > 2) {\n    @error 'jigsass-bidi: `border-radius` can have a maximum of 2 **sets** of ' +\n      'of 4 values, but you are trying to set #{length($values)}.';\n  }\n  @if ($_has-secondary) {\n    @each $set in $values {\n      @if (length($set) > 4) {\n        @error 'jigsass-bidi: `border-radius` accepts a maximum of 4 primary or ' +\n          'secondary values, you are trying to pass #{length($set)}.';\n      }\n    }\n  }\n\n  $_primary: if($_has-secondary, nth($values, 1), $values);\n  $_secondary: if($_has-secondary, nth($values, 2), null);\n\n  $_p-length: length($_primary);\n  $_s-length: length($_secondary);\n\n  $top-start: nth($_primary, 1);\n  $top-end: if($_p-length > 1, nth($_primary, 2), false);\n  $bottom-end: if($_p-length > 2, nth($_primary, 3), false);\n  $bottom-start: if($_p-length > 3, nth($_primary, 4), false);\n\n  $top-start-v: if($_secondary, nth($_secondary, 1), false);\n  $top-end-v: if($_s-length > 1, nth($_secondary, 2), false);\n  $bottom-end-v: if($_s-length > 2, nth($_secondary, 3), false);\n  $bottom-start-v: if($_s-length > 3, nth($_secondary, 4), false);\n\n  // If no valid value is provided\n  @if (index(null '' false, $values)) {\n    border-radius: null;\n  }\n\n  @else {\n    $ordered-values: if(\n      $top-end,\n      if($_rtl, $top-end $top-start, $top-start $top-end),\n      $top-start\n    );\n\n    $bottom-values: ();\n\n    @if ($bottom-end) {\n      $bottom-values: if(\n        $_rtl,\n        ($bottom-start or $top-end) $bottom-end,\n        $bottom-end ($bottom-start or null)\n      );\n\n      @each $radius in $bottom-values {\n        $ordered-values: append($ordered-values, $radius, space);\n      }\n    }\n\n    @if ($_secondary) {\n      $top-values-v: if(\n        $top-end-v,\n        if($_rtl, $top-end-v $top-start-v, $top-start-v $top-end-v),\n        $top-start-v\n      );\n\n      $bottom-values-v: ();\n      @if ($bottom-end-v) {\n        $bottom-values-v: if(\n          $_rtl,\n          ($bottom-start-v or $top-end-v) $bottom-end-v,\n          $bottom-end-v ($bottom-start-v or null)\n        );\n      }\n\n      $ordered-values: append($ordered-values, unquote(' / '));\n\n      @each $radius in $top-values-v {\n        $ordered-values: append($ordered-values, $radius, space);\n      }\n\n      @each $radius in $bottom-values-v {\n        $ordered-values: append($ordered-values, $radius, space);\n      }\n    }\n\n    @if ($rem) { @include jigsass-rem(border-radius, $ordered-values); }\n\n    @else { border-radius: $ordered-values; }\n  }\n}\n","// *************************************\n//\n// # jigsass-objects-button\n// -> Unopinionated button object\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhawks.github.com/jigsass-objects-button\n// https://github.com/txhwaks/jigsass-objects-button/\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-object)) {\n  @error '`jigsass-objects-button` has a dependency on `jigsass-tools-selectors`.\n    Please import it before this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Buttons\ntitle: Introduction\norder: -10\n---\n\nUnopinionated and configurable button objects\n\nThe JigSass Button object is built for maximal flexibility, providing only very basic styles\nas default. JigSass Button objects are transparent by default, and are meant to be extended by\ntype-size, color and background-color utils, and by configurable button object modifiers.\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-objects-button\n```\n\n#### Usage\nFirst, you need to import JigSass Button:\n\n```scss\n@import 'path/to/jigsass-objects-button/scss/index';\n```\n\nAnd optionally [reconfigure](#configuration) the defaults to your liking.\n\nLike all other JigSass modules, JigSass Button does not automatically generate any CSS when imported.\nIn order to use its classes, you would have to first explicitly indicate your intention to use\nthem by enabling their generation in the associated [configurations map](#css-output), Leaving\nus only with CSS we need:\n\nAll JigSass Button classes are responsive-enabled, using\n[JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/) and the breakpoints defined in the\n[$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)\nvariable.\n\nBased enabled selectors in the [configuration map](#css-output), responsive modifiers are\ngenerated according to the following logic:\n\n```scss\n.o-btn[--modifier][-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n$jigsass-btn-conf: (\n  no-breakpoint: (\n    outline: true,\n  ),\n  until-medium: (\n    outline: true,\n  ),\n  from-large-when-landscape: (\n    facebook: true,\n  ),\n)\n```\n\nwill generate the following classes:\n  - `.o-btn--outline`, which is not limited to any media-query.\n  - `.o-btn--outline--until-medium`, which will be in effect at\n    `(max-width: 37.49em)` and will override styles in the default class\n    until that point.\n  - `.o-btn--facebook--from-large-when-landscape`, which will go into effect at\n    `(min-width: 64em) and (orientation: landscape)` and will override styles\n    in the default class under these  conditions.\n\n\n**License:** MIT\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Buttons\ntitle: CSS Outpout\norder: -2\n---\nBy default, JigSass Button does not generate any CSS output when imported into\na stylesheet. CSS output must be enabled on a per-selector basis, inside the\ndedicated configuration maps:\n\n#### Buttons and modifier classes\n```scss\n$jigsass-btn-conf\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nbutton  button modifier classes.\n\n\n**Default:** `()`\n\n\n**Example:**\n```scss\n$jigsass-btn-conf: (\n  no-breakpoint: (\n    no-modifier: true,  // Enables generation of the `.o-btn`\n                        // class outside of any media query.\n    foo: true,          // Enables generation of the `.o-btn--foo`\n                        // modifier class outside of any media query.\n  ),\n  from-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-btn--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n    foo: true,          // Enables generation of the `.o-btn--foo--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  until-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-btn--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  foo: true,          // Enables generation of the `.o-btn--foo--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  when-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-btn--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n    foo: true,          // Enables generation of the `.o-btn--foo--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n\n#### Disabled buttons\n```scss\n$jigsass-btn-disabled-conf\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\ndisabled button classes.\n\n\n**Default:** `()`\n\n\n**Example:**\n```scss\n$jigsass-btn-disabled-conf: (\n  no-breakpoint: (\n    no-modifier: true,  // Enables generation of the `.o-btn-is-disabled`\n                        // class outside of any media query.\n    foo: true,          // Enables generation of the `.o-btn-is-disabled--foo`\n                        // modifier class outside of any media query.\n  ),\n  from-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-btn-is-disabled--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n    foo: true,          // Enables generation of the `.o-btn-is-disabled--foo--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  until-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-btn-is-disabled--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  foo: true,          // Enables generation of the `.o-btn-is-disabled--foo--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  when-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-btn-is-disabled--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n    foo: true,          // Enables generation of the `.o-btn-is-disabled--foo--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n*/\n// stylelint-enable\n\n/// Configuration map for enabling generation of\n/// button and button modifier classes.\n/// ---\n/// @example\n///\t\t$jigsass-btn-conf: (\n///    no-breakpoint: (\n///      no-modifier: true,  // Enables generation of the `.o-btn`\n///                          // class outside of any media query.\n///      foo: true,          // Enables generation of the `.o-btn--foo`\n///                          // modifier class outside of any media query.\n///    ),\n///    from-<bp-name>: (\n///      no-modifier: true,  // Enables generation of the `.o-btn--from-<bp-name>`\n///                          // class inside a min-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///      foo: true,          // Enables generation of the `.o-btn--foo--from-<bp-name>`\n///                          // class inside a min-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///    ),\n///    until-<bp-name>: (\n///      no-modifier: true,  // Enables generation of the `.o-btn--until-<bp-name>`\n///                          // class inside a max-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///     foo: true,          // Enables generation of the `.o-btn--foo--until-<bp-name>`\n///                          // class inside a max-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///    ),\n///    when-<bp-name>: (\n///      no-modifier: true,  // Enables generation of the `.o-btn--when-<bp-name>`\n///                          // class inside a misc media query\n///                          // defined ins `$jigsass-breakpoints.features`.\n///      foo: true,          // Enables generation of the `.o-btn--foo--when-<bp-name>`\n///                          // class inside a misc media query\n///                          // defined ins `$jigsass-breakpoints.features`.\n///    ),\n///    from-<bp-name>-until-<bp-name>: (...);\n///    from-<bp-name>-when-<bp-name>: (...);\n///    until-<bp-name>-when-<bp-name>: (...);\n///    from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n///  );\n/// ---\n/// @type {Map}\n/// ---\n$jigsass-btn-conf: () !default;\n\n/// Configuration map for enabling generation of\n/// disabled button classes.\n/// ---\n/// @example\n///\t\t$jigsass-btn-disabled-conf: (\n///    no-breakpoint: (\n///      no-modifier: true,  // Enables generation of the `.o-btn-is-disabled`\n///                          // class outside of any media query.\n///      foo: true,          // Enables generation ofthe `.o-btn-is-disabled--foo`\n///                          // modifier class outside of any media query.\n///    ),\n///    from-<bp-name>: (\n///      no-modifier: true, // Enables generation of `.o-btn-is-disabled--from-<bp-name>`\n///                         // class inside a min-width media query\n///                         // defined ins `$jigsass-breakpoints.length`.\n///      foo: true,         // Enables generation of `.o-btn-is-disabled--foo--from-<bp-name>`\n///                         // class inside a min-width media query\n///                         // defined ins `$jigsass-breakpoints.length`.\n///    ),\n///    until-<bp-name>: (\n///      no-modifier: true, // Enables generation of `.o-btn-is-disabled--until-<bp-name>`\n///                         // class inside a max-width media query\n///                         // defined ins `$jigsass-breakpoints.length`.\n///     foo: true,          // Enables generation of `.o-btn-is-disabled--foo--until-<bp-name>`\n///                         // class inside a max-width media query\n///                         // defined ins `$jigsass-breakpoints.length`.\n///    ),\n///    when-<bp-name>: (\n///      no-modifier: true, // Enables generation of `.o-btn-is-disabled--when-<bp-name>`\n///                         // class inside a misc media query\n///                         // defined ins `$jigsass-breakpoints.features`.\n///      foo: true,         // Enables generation of `.o-btn-is-disabled--foo--when-<bp-name>`\n///                         // class inside a misc media query\n///                         // defined ins `$jigsass-breakpoints.features`.\n///    ),\n///    from-<bp-name>-until-<bp-name>: (...);\n///    from-<bp-name>-when-<bp-name>: (...);\n///    until-<bp-name>-when-<bp-name>: (...);\n///    from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n///  );\n/// ---\n/// @type {Map}\n/// ---\n$jigsass-btn-disabled-conf: () !default;\n\n\n/* ---\nsection: Buttons\ntitle: Configuration\norder: -1\n---\nJigSass Button allows for some modification through configuration variables.\nRedefine them to your liking _before_ importing JigSass Buttons.\n\n#### Button Padding\n```scss\n$jigsass-btn-padding\n```\n\n**Type:** `Map`\n\nA map of button padding modifiers, each key should contain a list of two\nunitless numbers, representing the number of rhythm units used as padding\non the horizontal and vertical axes, respectively.\n\n**Default:** `(default: 2 1)`\n\n**Properties:**\n\nName | Description | Type | Default Value\n--- | --- | --- | ---\ndefault | Sets the padding of default button object | List | 2 1\n\n<p></p>\n\n**Example:**\n```scss\n$jigsass-btn-padding: (\n  default: 2 1,\n  small: 1 0.5,\n  large: 3 3,\n);\n```\n\n\n#### Button Outline\n```scss\n$jigsass-btn-outline\n```\n\n**Type:** `List`\n\nThe border width and style (and optionally color) of outlined buttons (`.o-btn--outline`)\n\n**Default:** `1px solid`\n\n\n#### Button Style\n```scss\n$jigsass-btn-style\n```\n\n**Type:** `Map`\n\nStyle declarations to add to the `.o-btn` class.\n\n**Default:** `()`\n\n**Example:**\n```scss\n$jigsass-btn-style: (\n  transition: all 0.25s ease-out,\n);\n```\n\n\n#### Button Modifiers\n```scss\n$jigsass-btn-modifiers\n```\n\n**Type:** `Map`\n\nCSS declarations for button modifiers, with each modifier being a nested\nmap at the first level.\n\n**Default:** `()`\n\n**Example:**\n```scss\n$jigsass-btn-modifiers: (\n  primary: (\n    background-color: #09a5d9,\n    color: #fff,\n\n    '&:hover, &:focus, &:active': (\n      background-color: darken(#09a5d9, 5%),\n    )\n  ),\n  facebook: (\n    background-color: #3b5998,\n    color: #fff,\n\n    '&:hover, &:focus, &:active': (\n      background-color: darken(#3b5998, 5%),\n    )\n  ),\n  twitter: (\n    background-color: #55acee,\n    color: #fff,\n\n    '&:hover, &:focus, &:active': (\n      background-color: darken(#55acee, 5%),\n    )\n  ),\n  gplus: (\n    background-color: #dc4e41,\n    color: #fff,\n\n    '&:hover, &:focus, &:active': (\n      background-color: darken(#dc4e41, 5%),\n    )\n  ),\n);\n```\n\n\n#### Disabled Buttons\n```scss\n$jigsass-btn-disabled\n```\n\n**Type:** `Map`\n\nStyle declarations for the `.o-btn-is-disabled` class.\n\n**Default:** `\n```scss\n(\n  opacity: 0.4,\n  cursor: default,\n)\n```\n*/\n// stylelint-enable\n\n/// Configuration map for enabling generation of\n/// button classes.\n/// ---\n/// @example\n///\t\t$jigsass-btn-conf: (\n///    no-breakpoint: (\n///      no-modifier: true,  // Enables generation of the `.o-btn`\n///                          // class outside of any media query.\n///      foo: true,          // Enables generation of the `.o-btn--foo`\n///                          // modifier class outside of any media query.\n///    ),\n///    from-<bp-name>: (\n///      no-modifier: true,  // Enables generation of the `.o-btn--from-<bp-name>`\n///                          // class inside a min-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///      foo: true,          // Enables generation of the `.o-btn--foo--from-<bp-name>`\n///                          // class inside a min-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///    ),\n///    until-<bp-name>: (\n///      no-modifier: true,  // Enables generation of the `.o-btn--until-<bp-name>`\n///                          // class inside a max-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///     foo: true,          // Enables generation of the `.o-btn--foo--until-<bp-name>`\n///                          // class inside a max-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///    ),\n///    when-<bp-name>: (\n///      no-modifier: true,  // Enables generation of the `.o-btn--when-<bp-name>`\n///                          // class inside a misc media query\n///                          // defined ins `$jigsass-breakpoints.features`.\n///      foo: true,          // Enables generation of the `.o-btn--foo--when-<bp-name>`\n///                          // class inside a misc media query\n///                          // defined ins `$jigsass-breakpoints.features`.\n///    ),\n///    from-<bp-name>-until-<bp-name>: (...);\n///    from-<bp-name>-when-<bp-name>: (...);\n///    until-<bp-name>-when-<bp-name>: (...);\n///    from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n///  );\n/// ---\n/// @type {Map}\n/// ---\n$jigsass-btn-conf: () !default;\n\n/// Configuration map for enabling generation of\n/// disabled button classes.\n/// ---\n/// @example\n///\t\t$jigsass-btn-disabled-conf: (\n///    no-breakpoint: (\n///      no-modifier: true,  // Enables generation of the `.o-btn-is-disabled`\n///                          // class outside of any media query.\n///      foo: true,          // Enables generation ofthe `.o-btn-is-disabled--foo`\n///                          // modifier class outside of any media query.\n///    ),\n///    from-<bp-name>: (\n///      no-modifier: true, // Enables generation of `.o-btn-is-disabled--from-<bp-name>`\n///                         // class inside a min-width media query\n///                         // defined ins `$jigsass-breakpoints.length`.\n///      foo: true,         // Enables generation of `.o-btn-is-disabled--foo--from-<bp-name>`\n///                         // class inside a min-width media query\n///                         // defined ins `$jigsass-breakpoints.length`.\n///    ),\n///    until-<bp-name>: (\n///      no-modifier: true, // Enables generation of `.o-btn-is-disabled--until-<bp-name>`\n///                         // class inside a max-width media query\n///                         // defined ins `$jigsass-breakpoints.length`.\n///     foo: true,          // Enables generation of `.o-btn-is-disabled--foo--until-<bp-name>`\n///                         // class inside a max-width media query\n///                         // defined ins `$jigsass-breakpoints.length`.\n///    ),\n///    when-<bp-name>: (\n///      no-modifier: true, // Enables generation of `.o-btn-is-disabled--when-<bp-name>`\n///                         // class inside a misc media query\n///                         // defined ins `$jigsass-breakpoints.features`.\n///      foo: true,         // Enables generation of `.o-btn-is-disabled--foo--when-<bp-name>`\n///                         // class inside a misc media query\n///                         // defined ins `$jigsass-breakpoints.features`.\n///    ),\n///    from-<bp-name>-until-<bp-name>: (...);\n///    from-<bp-name>-when-<bp-name>: (...);\n///    until-<bp-name>-when-<bp-name>: (...);\n///    from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n///  );\n/// ---\n/// @type {Map}\n/// ---\n$jigsass-btn-disabled-conf: () !default;\n\n/// Button padding modifiers\n///\n/// A map of button padding modifiers, each key should contain a list of two\n/// unitless numbers, representing the number of rhythm units used as padding\n/// on the horizontal and vertical axes, respectively.\n/// ---\n/// @prop {List} default\n///   Sets the padding of default button object.\n/// ---\n/// @example\n///   $jigsass-btn-padding: (\n///     default: 2 1,\n///     small: 1 0.5,\n///     large: 3 3,\n///   );\n/// ---\n/// @type Map\n/// ---\n$jigsass-btn-padding: (\n  default: 2 1,\n) !default;\n\n\n/// The border width and style (and optionally color) of\n/// outlined buttons\n/// ---\n/// @type {List}\n$jigsass-btn-outline: 1px solid !default;\n\n\n/// Style declarations to add to the `.o-btn` class.\n/// ---\n/// @example\n///   $jigsass-btn-style: (\n///     transition: all 0.25s ease-out,\n///   );\n/// ---\n/// @type Map\n/// ---\n$jigsass-btn-style: () !default;\n\n\n/// Button modifiers\n///\n/// CSS declarations for button modifiers, with each modifier being a nested\n/// map at the first level.\n/// ---\n/// @example\n/// $jigsass-btn-modifiers: (\n///   primary: (\n///     background-color: #09a5d9,\n///     color: #fff,\n///\n///     '&:hover, &:focus, &:active': (\n///       background-color: darken(#09a5d9, 5%),\n///     )\n///   ),\n///   facebook: (\n///     background-color: #3b5998,\n///     color: #fff,\n///\n///     '&:hover, &:focus, &:active': (\n///       background-color: darken(#3b5998, 5%),\n///     )\n///   ),\n///   twitter: (\n///     background-color: #55acee,\n///     color: #fff,\n///\n///     '&:hover, &:focus, &:active': (\n///       background-color: darken(#55acee, 5%),\n///     )\n///   ),\n///   gplus: (\n///     background-color: #dc4e41,\n///     color: #fff,\n///\n///     '&:hover, &:focus, &:active': (\n///       background-color: darken(#dc4e41, 5%),\n///     )\n///   ),\n/// );\n/// ---\n/// @type Map\n/// ---\n$jigsass-btn-modifiers: () !default;\n\n/// Style declarations for the `.o-btn-is-disabled` class.\n/// ---\n/// @type Map\n/// ---\n$jigsass-btn-disabled: (\n  cursor: default,\n  opacity: .4,\n) !default;\n\n\n\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-button-i: 1;\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object(o-btn, $jigsass-btn-conf) {\n  @include jigsass-classname() {\n    $border-width: nth($jigsass-btn-outline, 1);\n    $padding: map-get($jigsass-btn-padding, default);\n    @if ($padding) {\n      $h-padding: nth($padding, 1);\n      $v-padding: if(\n        length($padding) > 1,\n        nth($padding, 2),\n        $h-padding\n      );\n\n      @if ($h-padding == $v-padding) {\n        @include jigsass-borders(\n          $width: $border-width,\n          $lines: $h-padding,\n          $style: solid transparent\n        );\n      }\n      @else {\n        @include jigsass-border-horizontal(\n          $width: $border-width,\n          $lines: $v-padding,\n          $style: solid transparent\n        );\n        @include jigsass-border(\n          $side: left,\n          $width: $border-width,\n          $lines: $h-padding,\n          $style: solid transparent\n        );\n        @include jigsass-border(\n          $side: right,\n          $width: $border-width,\n          $lines: $h-padding,\n          $style: solid transparent\n        );\n      }\n    }\n\n    appearance: none;\n    background-color: transparent;\n    box-sizing: border-box;\n    color: inherit;\n    cursor: pointer;\n    display: inline-block;\n    font: inherit;\n    margin: 0;\n    text-align: center;\n    vertical-align: middle;\n    white-space: nowrap;\n\n    &,\n    &:hover,\n    &:focus,\n    &:active {\n      text-decoration: none;\n    }\n\n    @if (length($jigsass-btn-style) > 0) {\n      @include jigsass-map2styles($jigsass-btn-style); // [1]\n    }\n\n    &::moz-focus-inner {\n      border: 0;\n      padding: 0;\n    }\n\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Buttons\ntitle: Button (base)\norder: #{$_jigsass-button-i}\n---\n**.o-btn**\n\nAn actionable piece of UI\n\nBy default, `o-btn` elements are transparent and are meant to be extended by\ntype-size, color and background-color utils, and by configurable button object modifiers.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn'>A `button` element</button>\n  <a href=\"#\" class='o-btn'>An `a` element</a>\n  <input type='button' class='o-btn'value='An `input` element' />\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-button-i: $_jigsass-button-i + 1 !global;\n    }\n  }\n\n  // ----- Size Modifiers ----- //\n  @each $modifier, $values in $jigsass-btn-padding {\n    @if ($modifier != default) {\n      @include jigsass-classname($modifier: $modifier) {\n        $modifier: $jigsass-obj-modifier;\n        $border-width: nth($jigsass-btn-outline, 1);\n        $padding: map-get($jigsass-btn-padding, $modifier);\n        @if ($padding) {\n          $h-padding: nth($padding, 1);\n          $v-padding: if(\n            length($padding) > 1,\n            nth($padding, 2),\n            $h-padding\n          );\n\n          @if ($h-padding == $v-padding) {\n            @include jigsass-borders(\n              $width: $border-width,\n              $lines: $h-padding,\n              $style: solid transparent\n            );\n          }\n          @else {\n            @include jigsass-border-horizontal(\n              $width: $border-width,\n              $lines: $v-padding,\n              $style: solid transparent\n            );\n            @include jigsass-border(\n              $side: left,\n              $width: $border-width,\n              $lines: $h-padding,\n              $style: solid transparent\n            );\n            @include jigsass-border(\n              $side: right,\n              $width: $border-width,\n              $lines: $h-padding,\n              $style: solid transparent\n            );\n          }\n        }\n\n        $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n        @if (not index($_doclet-store, $_doclet)) {\n          $_doclet-store: append($_doclet-store, $_doclet) !global;\n          // stylelint-disable\n/* ---\nsection: Buttons\ntitle: Button (#{$modifier})\norder: #{$_jigsass-button-i + 10}\n---\n\n**.o-btn--#{$jigsass-obj-modifier}**\n\nA `#{$modifier}` button.\n\nChanges the padding of the button, text size should be modified using type-size utils.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--#{$modifier}'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--#{$modifier}'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--#{$modifier}' />\n</div>\n```\n*/\n          // stylelint-enable\n          $_jigsass-button-i: $_jigsass-button-i + 1 !global;\n        }\n      }\n    }\n  }\n\n\n  // ----- Outline Modifier ----- //\n  @include jigsass-classname($modifier: outline) {\n\n    $style: nth($jigsass-btn-outline, 2);\n    $color: if(length($jigsass-btn-style) == 3, nth($jigsass-btn-style, 3), false);\n\n    border-color: $color or currentColor;\n    border-style: $style;\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Buttons\ntitle: Button (outlined)\norder: #{$_jigsass-button-i + 100}\n---\n\n**.o-btn--#{$jigsass-obj-modifier}**\n\nAn outlined button, extends `.o-btn` in the markup.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--outline demo-crimson'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--outline demo-teal'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--outline  demo-deeppink' />\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-button-i: $_jigsass-button-i + 1 !global;\n    }\n  }\n\n\n  // ----- Rounded Modifier ----- //\n  @include jigsass-classname($modifier: round) {\n\n    border-radius: 100px;\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Buttons\ntitle: Button (rounded)\norder: #{$_jigsass-button-i + 150}\n---\n\n**.o-btn--#{$jigsass-obj-modifier}**\n\nA rounded button, extends `.o-btn` in the markup.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--round  demo-bgc'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--round  demo-bgc'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--round  demo-bgc' />\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-button-i: $_jigsass-button-i + 1 !global;\n    }\n  }\n\n\n  // ----- Style Modifiers ----- //\n  @each $modifier, $ruleset in $jigsass-btn-modifiers {\n    @include jigsass-classname($modifier: $modifier) {\n      $modifier: $jigsass-obj-modifier;\n      $ruleset: map-get($jigsass-btn-modifiers, $modifier);\n\n      @include jigsass-map2styles($ruleset);\n\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n        // stylelint-disable\n/* ---\nsection: Buttons\ntitle: Button (#{$modifier})\norder: #{$_jigsass-button-i + 200}\n---\n\n**.o-btn--#{$jigsass-obj-modifier}**\n\nA `#{$modifier}` modifier, extends `.o-btn` in the markup.\n\nStyle is defined in the `#{$modifier}` key of the `$jigsass-btn-modifiers` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn--#{$modifier}'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn--#{$modifier}'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn--#{$modifier}' />\n</div>\n```\n*/\n        // stylelint-enable\n        $_jigsass-button-i: $_jigsass-button-i + 1 !global;\n      }\n    }\n  }\n}\n\n// ----- State ----- //\n\n@include jigsass-object(o-btn-is-disabled, $jigsass-btn-disabled-conf) {\n  @include jigsass-classname {\n    @if (length($jigsass-btn-disabled) > 0) {\n      @include jigsass-map2styles($jigsass-btn-disabled);\n    }\n  }\n\n  $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n/* ---\nsection: Buttons\ntitle: Disabled Button\norder: #{$_jigsass-button-i + 500}\n---\n\n**.o-btn-is-disabled**\n\nA disabled button.\n\nStyle is defined in the `$jigsass-btn-disabled` variable.\n\n```example:html\n<div class='demo-wrapper'>\n  <button type='button' class='o-btn o-btn-is-disabled'>A `button` element</button>\n  <a href=\"#\"  class='o-btn o-btn-is-disabled  demo-crimson'>An `a` element</a>\n  <input type='button' value='An `input` element' class='o-btn o-btn-is-disabled  demo-teal' />\n</div>\n```\n*/\n    // stylelint-enable\n    $_jigsass-button-i: $_jigsass-button-i + 1 !global;\n  }\n}\n","// *************************************\n//\n// ANIMATION-SETTINGS\n// -> Settings for normalize.css\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// Animation / transition durations, easings etc.\n/// ---\n/// @type map\n/// ---\n/// @prop {Map} duration\n///   Normalized animation durations\n/// @prop {Number} duration.name\n///   A time.\n///\n/// @prop {Map} easing\n/// @prop {String} easing.name\n///   A named timing function or a cubic-bezier\n/// ---\n$animation: (\n  duration: (\n    xxlong: 2s,\n    xlong: 1.5s,\n    long: 1s,\n    mid: .5s,\n    short: .25s,\n    brief: .15s,\n  ),\n  easing: (\n    linear: linear,\n    swift-in: cubic-bezier(0, 0, .2, 0),\n    swift-out: cubic-bezier(.55, 0, .1, 1),\n    in: ease-in,\n    out: ease-out,\n    in-out: ease-in-out,\n  ),\n);\n\n/* ---\nsection: Animation\ntitle: get-anim()\n---\nUse the `get-anim` function to get normalized animation\ntiming and timing functions:\n\n```scss\nget-anim(\n  $duration: <duration-name|time>,\n  $easing: <timing-function>,\n  $delay: <duration-name|time>\n)\n```\n\nNamed durations are:\n`long`: #{map-get(map-get($animation, duration), long)}\n`mid`: #{map-get(map-get($animation, duration), mid)}\n`short`: #{map-get(map-get($animation, duration), short)}\n`brief`: #{map-get(map-get($animation, duration), brief)}\n\nNamed timing functions are:\n`swift-out`: #{map-get(map-get($animation, easing), swift-out)}\n`swift-in`: #{map-get(map-get($animation, easing), swift-in)}\n`in`: #{map-get(map-get($animation, easing), in)}\n`out`: #{map-get(map-get($animation, easing), out)}\n`in-out`: #{map-get(map-get($animation, easing), in-out)}\n*/\n\n\n/// Get animation values.\n/// ---\n/// @param {String | Boolean} $duration\n///   Searches for a named time in `$animation.duration`\n/// @param {String | Boolean} $easing\n///   Searches for a named timing function in `$animation.easing`\n/// @param {String | Boolean} $delay\n///   Searches for a named time in `$animation.duration`\n/// ---\n/// @return {Null | List}\n/// ---\n@function get-anim($duration: false, $easing: false, $delay: false) {\n  @if ($duration or $easing or $delay) {\n    $value: ();\n\n    $duration: if(\n      type-of($duration) == number and index(s ms, unit($duration)),\n      $duration,\n      map-get(map-get($animation, duration), $duration)\n    );\n    $delay: if(\n      type-of($delay) == number and index(s ms, unit($delay)),\n      $delay,\n      map-get(map-get($animation, duration), $delay)\n    );\n    $easing: map-get(map-get($animation, easing), $easing);\n\n    @if ($duration) { $value: append($value, $duration); }\n    @if ($delay) { $value: append($value, $delay); }\n    @if ($easing) { $value: append($value, $easing); }\n\n    @if (length($value) == 0) {\n      @warn 'No animation values were found for: ' +\n        if(\n          $duration,\n          '`$duration`: #{$duration}  ',\n          ''\n        ) +\n        if(\n          $delay,\n          '`$delay`: #{$delay}  ',\n          ''\n        ) +\n        if(\n          $easing,\n          '`$easing`: #{$easing}  ',\n          ''\n        );\n\n      @return null;\n    }\n\n    @return $value;\n  }\n}\n","// *************************************\n//\n// # JigSass Selectors Map2styles\n// -> Convert a Sass map into CSS rulesets\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n//\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n/// Convert Sass maps in to CSS rulesets\n/// ---\n/// @param {Map} $ruleset-map\n///   The map to convert to a ruleset.\n///   Supports nested maps for nested selectors\n/// ---\n/// @example scss - SCSS Input\n///   $foo-styles: (\n///     display: block,\n///     '& > .bar': (\n///       color: red\n///     )\n///   );\n///\n///   .foo {\n///     @inlcude jigsass-map2styles($foo-styles);\n///   }\n///\n/// @example scss - CSS Output\n///   .foo {\n///     display: block;\n///   }\n///     .foo > .bar {\n///       color: red\n///     }\n/// ---\n/// @requires jigsass-bidi\n///   Used for transforming bidirectional values\n///   https://txhawks.github.io/jigsass-tools-bidi/#mixin-jigsass-bidi\n/// ---\n/// @group Selectors - 04 Define\n/// ---\n@mixin jigsass-map2styles($ruleset-map) {\n  @if (not mixin-exists(jigsass-bidi)) {\n    @error '`jigsass-map2styles` from `jigsass-tools-selectors` has a dependency on ' +\n      '`jigsass-tools-bidi`. Please import it.';\n  }\n\n  @each $item, $value in $ruleset-map {\n    // If nested ruleset\n    @if (type-of($value) == map) {\n      $selectors: $item;\n      $declaration-block: $value;\n\n      #{$selectors} {\n        @include jigsass-map2styles($declaration-block);\n      }\n    }\n\n    @else {\n      $property: $item;\n\n      @include jigsass-bidi($property, $value);\n    }\n  }\n}\n","// *************************************\n//\n// Z-INDEX-SETTINGS\n// -> Stacking context settings\n//\n////\n/// @group z-index\n////\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// An hierarchical representation of the stacking order\n/// ---\n/// @type map\n/// ---\n/// @example scss\n///   below:          -1,\n///   above:           1,\n///\n///   context-a:      10,\n///\n///   context-b:     100,\n///     context-b__el1:   -1,\n///     context-b__el2:   10,\n///\n///   context-c:    1000,\n/// )\n/// ---\n$z-stack: (\n  modal:                    1000,\n  hero-search:              900,\n  above:                    1,\n  base:                     0,\n  below:                    -1,\n  hero-search-bg:           -2,\n  l-two-cols__aside-rule:   -3,\n);\n\n\n\n\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n/// Get a layer's place in the stacking order\n/// ---\n/// @param {String} $layer\n///   The name of the layer to look for in the stacking context.\n/// ---\n/// @return {Number}\n/// ---\n@function z-index($layer) {\n  $index: map-get($z-stack, $layer);\n\n  @if (not $index) {\n    @warn '`#{$layer}` is not a defined stacking layer in `$z-stack`';\n    @return null;\n  }\n\n  @return $index;\n}\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n/// Get a layer's place in the stacking order\n/// ---\n/// @param {String} $layer\n///   The name of the layer to look for in the stacking context.\n/// ---\n@mixin z-index($layer) {\n  z-index: z-index($layer);\n}\n","// *************************************\n//\n// #CARD-SETTINGS\n//\n// *************************************\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (\n  not (\n    global-variable-exists(jigsass-colors) and\n    length($jigsass-colors) > 0 and\n    function-exists(jigsass-color)\n  )\n) {\n  @error 'Card settings depend on color definitions. Please import ' +\n    '`jigsass-tools-color` and `_settings.color.scss` before ' +\n    'importing `_settings.card.scss`';\n}\n\n@if (not function-exists(get-anim)) {\n  @error 'Card settings depend on animation definitions. Please import ' +\n    '`_settings.animation` before importing `_settings.card.scss`';\n}\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n// The background color of elements containing cards.\n//\n// Used for setting the background color of\n// the `.o-has-card` contextual modifier.\n$jigsass-has-card-bgc: jigsass-color('has-card');\n\n// CSS declarations to apply to cards.\n//\n// Since cards are such a prevalent UI pattern, yet with so\n// many variations, subtle or otherwise, JigSass Cards come with defaults that\n// are configurable to the last value and declaration. Don't like our defaults?\n// Make your own.\n// ---\n// @type Map\n// ---\n$jigsass-card-defaults: (\n  background-color: jigsass-color('card-bg'),\n);\n\n// Card modifiers\n//\n// CSS declarations for card modifiers, with each modifier being a nested\n// map at the first level.\n// ---\n// @type Map\n// ---\n$jigsass-card-modifiers: (\n  raised: (\n    box-shadow: 0 4px 5px -3px rgba(#333, .5),\n    position: relative,\n    transform-origin: bottom,\n    transition: transform get-anim(brief, swift-out),\n\n    '&:after': (\n      bottom: 0,\n      box-shadow: 0 6px 6px -5px rgba(#333, .3),\n      content: '',\n      left: 0,\n      opacity: 0,\n      position: absolute,\n      right: 0,\n      top: 0,\n      transition: opacity get-anim(brief, swift-out),\n      z-index: -1,\n    ),\n\n    '&:focus, &:hover, &:active': (\n      transform: translateY(-1px),\n\n      '&:after': (\n        opacity: 1,\n      ),\n    ),\n  ),\n  'has-hidden-btn': (\n    overflow: hidden,\n    position: relative,\n\n    '> .o-card__body': (\n      background-color: jigsass-color('card-bg'),\n      position: relative,\n      transform: translateY(0),\n      transition: all get-anim($duration: short, $easing: swift-out),\n      z-index: z-index(above),\n    ),\n\n    '> .o-card__hidden-btn': (\n      bottom: jigsass-rhythm(-5),\n      position: absolute,\n      transform: translateY(0),\n      transition: all get-anim($duration: short, $easing: swift-out),\n      width: 100%,\n      z-index: z-index(above),\n    ),\n\n    '&:focus, &:hover, &:active': (\n      '> .o-card__body, > .o-card__hidden-btn': (\n        transform: translateY(jigsass-rhythm(-5)),\n      ),\n    ),\n  ),\n  'underlined': (\n    '> .o-card__footer:after': (\n      background-color: currentColor,\n      bottom: 0,\n      content: '',\n      height: 1px,\n      position: absolute,\n      start: 0,\n      transform: scale3d(0, 1, 1),\n      transform-origin: 50% 0%,\n      transition: all get-anim($duration: 'brief', $easing: 'swift-out', $delay: 'short'),\n      width: 100%,\n    ),\n\n    '&:hover > .o-card__footer:after': (\n      transform: scale3d(1, 1, 1),\n      transition-timing-function: get-anim($easing: 'swift-in'),\n    ),\n  ),\n);\n\n// Border style of a card section\n//\n// A list in the format of `length` `style` `color`\n// ---\n// @type List\n// ---\n$jigsass-card-section-border: 1px solid jigsass-color(border-neutral);\n","// *************************************\n//\n// # jigsass-objects-card\n// -> An individual piece of distinguished UI\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhwaks.github.io/jigsass-objects-card/\n// https://github.com/txhwaks/jigsass-objects-card/\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-object)) {\n  @error '`jigsass-objects-card` has a dependency on `jigsass-tools-selectors`.\n    Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Card\ntitle: Introduction\norder: -10\n---\n\nAn unopinionated, configurable implementation of the card UI pattern.\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-objects-card\n```\n\n#### Usage\nFirst, you need to import JigSass Card:\n\n```scss\n@import 'path/to/jigsass-objects-card/scss/index';\n```\n\nAnd optionally [reconfigure](#configuration) the defaults to your liking.\n\nLike all other JigSass modules, JigSass Card does not automatically generate any CSS when imported.\nIn order to use its classes, you would have to first explicitly indicate your intention to use\nthem by enabling their generation in the associated [configurations map](#css-output), Leaving\nus only with CSS we need:\n\nAll JigSass Card classes are responsive-enabled, using\n[JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/) and the breakpoints defined in the\n[$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)\nvariable.\n\nBased on enabled selectors in the [configuration map](#css-output), responsive modifiers are\ngenerated according to the following logic:\n\n```scss\n.o-card[--modifier][-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n\n```scss\n$jigsass-card-conf: (\n  no-breakpoint: (\n    raised: true,\n  ),\n  until-medium: (\n    raised: true,\n  ),\n  from-large-when-landscape: (\n    raised: true,\n  ),\n)\n```\n\nwill generate the following classes:\n  - `.o-card--raised`, which is not limited to any media-query.\n  - `.o-card--raised--until-medium`, which will be in effect at\n    `(max-width: 37.49em)` and will override styles in the default class\n    until that point.\n  - `.o-card--raised--from-large-when-landscape`, which will go into effect at\n    `(min-width: 64em) and (orientation: landscape)` and will override styles\n    in the default class under these  conditions.\n\n**License:** MIT\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Card\ntitle: CSS Outpout\norder: -2\n---\nBy default, JigSass Card does not generate any CSS output when imported into\na stylesheet. CSS output must be enabled on a per-selector basis, inside the\ndedicated configuration maps:\n\n#### Card and modifier classes\n```scss\n$jigsass-card-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\ncard and card modifier classes.\n\n\n**Default:** `()`\n\n\n**Example:**\n```scss\n$jigsass-card-conf: (\n  no-breakpoint: (\n    no-modifier: true,  // Enables generation of the `.o-card`\n                        // class outside of any media query.\n    foo: true,          // Enables generation of the `.o-card--foo`\n                        // modifier class outside of any media query.\n  ),\n  from-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-card--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n    foo: true,          // Enables generation of the `.o-card--foo--from-<bp-name>`\n                        // class inside a min-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  until-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-card--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  foo: true,          // Enables generation of the `.o-card--foo--until-<bp-name>`\n                        // class inside a max-width media query\n                        // defined ins `$jigsass-breakpoints.length`.\n  ),\n  when-<bp-name>: (\n    no-modifier: true,  // Enables generation of the `.o-card--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n    foo: true,          // Enables generation of the `.o-card--foo--when-<bp-name>`\n                        // class inside a misc media query\n                        // defined ins `$jigsass-breakpoints.features`.\n  ),\n  from-<bp-name>-until-<bp-name>: (...);\n  from-<bp-name>-when-<bp-name>: (...);\n  until-<bp-name>-when-<bp-name>: (...);\n  from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n);\n```\n\n#### Card Items\n```scss\n$jigsass-card-items-config: (item-name: ());\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\ncard item classes.\n\n\n**Default:** `()`\n\n\n**Example:**\n```scss\n$jigsass-card-items-conf: (\n  section: (\n    no-breakpoint: (\n      // Enables generation of the `.o-card__section`\n      // class outside of any media query.\n      no-modifier: true,\n\n      // Enables generation of the `.o-card__section--foo`\n      // modifier class outside of any media query.\n      foo: true,\n    ),\n    from-<bp-name>: (\n      // Enables generation of the `.o-card__section--from-<bp-name>`\n      // class inside a min-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      no-modifier: true,\n\n      // Enables generation of the `.o-card__section--foo--from-<bp-name>`\n      // class inside a min-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      foo: true,\n    ),\n    until-<bp-name>: (\n      // Enables generation of the `.o-card__section--until-<bp-name>`\n      // class inside a max-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      no-modifier: true,\n\n      // Enables generation of the `.o-card__section--foo--until-<bp-name>`\n      // class inside a max-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      foo: true,\n    ),\n    when-<bp-name>: (\n      // Enables generation of the `.o-card__section--when-<bp-name>`\n      // class inside a misc media query\n      // defined ins `$jigsass-breakpoints.features`.\n      no-modifier: true,\n\n      // Enables generation of the `.o-card__section--foo--when-<bp-name>`\n      // class inside a misc media query\n      // defined ins `$jigsass-breakpoints.features`.\n      foo: true,\n    ),\n    from-<bp-name>-until-<bp-name>: (...);\n    from-<bp-name>-when-<bp-name>: (...);\n    until-<bp-name>-when-<bp-name>: (...);\n    from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n  ),\n);\n```\n\n\n#### Context classes\n```scss\n$jigsass-card-context-config: (item-name: ());\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\ncard context classes.\n\n\n**Default:** `()`\n\n\n**Example:**\n```scss\n$jigsass-card-context-conf: (\n  has-card: (\n    no-breakpoint: (\n      // Enables generation of the `.o-has-card`\n      // class outside of any media query.\n      no-modifier: true,\n\n      // Enables generation of the `.o-has-card--foo`\n      // modifier class outside of any media query.\n      foo: true,\n    ),\n    from-<bp-name>: (\n      // Enables generation of the `.o-has-card--from-<bp-name>`\n      // class inside a min-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      no-modifier: true,\n\n      // Enables generation of the `.o-has-card--foo--from-<bp-name>`\n      // class inside a min-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      foo: true,\n    ),\n    until-<bp-name>: (\n      // Enables generation of the `.o-has-card--until-<bp-name>`\n      // class inside a max-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      no-modifier: true,\n\n      // Enables generation of the `.o-has-card--foo--until-<bp-name>`\n      // class inside a max-width media query\n      // defined ins `$jigsass-breakpoints.length`.\n      foo: true,\n    ),\n    when-<bp-name>: (\n      // Enables generation of the `.o-has-card--when-<bp-name>`\n      // class inside a misc media query\n      // defined ins `$jigsass-breakpoints.features`.\n      no-modifier: true,\n\n      // Enables generation of the `.o-has-card--foo--when-<bp-name>`\n      // class inside a misc media query\n      // defined ins `$jigsass-breakpoints.features`.\n      foo: true,\n    ),\n    from-<bp-name>-until-<bp-name>: (...);\n    from-<bp-name>-when-<bp-name>: (...);\n    until-<bp-name>-when-<bp-name>: (...);\n    from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n  ),\n);\n```\n*/\n\n/// Configuration map for enabling generation of\n/// card and card modifier classes.\n/// ---\n/// @example\n///\t\t$jigsass-card-conf: (\n///    no-breakpoint: (\n///      no-modifier: true,  // Enables generation of the `.o-card`\n///                          // class outside of any media query.\n///      foo: true,          // Enables generation of the `.o-card--foo`\n///                          // modifier class outside of any media query.\n///    ),\n///    from-<bp-name>: (\n///      no-modifier: true,  // Enables generation of the `.o-card--from-<bp-name>`\n///                          // class inside a min-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///      foo: true,          // Enables generation of the `.o-card--foo--from-<bp-name>`\n///                          // class inside a min-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///    ),\n///    until-<bp-name>: (\n///      no-modifier: true,  // Enables generation of the `.o-card--until-<bp-name>`\n///                          // class inside a max-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///     foo: true,          // Enables generation of the `.o-card--foo--until-<bp-name>`\n///                          // class inside a max-width media query\n///                          // defined ins `$jigsass-breakpoints.length`.\n///    ),\n///    when-<bp-name>: (\n///      no-modifier: true,  // Enables generation of the `.o-card--when-<bp-name>`\n///                          // class inside a misc media query\n///                          // defined ins `$jigsass-breakpoints.features`.\n///      foo: true,          // Enables generation of the `.o-card--foo--when-<bp-name>`\n///                          // class inside a misc media query\n///                          // defined ins `$jigsass-breakpoints.features`.\n///    ),\n///    from-<bp-name>-until-<bp-name>: (...);\n///    from-<bp-name>-when-<bp-name>: (...);\n///    until-<bp-name>-when-<bp-name>: (...);\n///    from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n///  );\n/// ---\n/// @type {Map}\n/// ---\n$jigsass-card-conf: () !default;\n\n/// Configuration map for enabling generation of\n/// card item classes.\n/// ---\n/// @example\n///   $jigsass-card-items-conf: (\n///     section: (\n///       no-breakpoint: (\n///         // Enables generation of the `.o-card__section`\n///         // class outside of any media query.\n///         no-modifier: true,\n///\n///         // Enables generation of the `.o-card__section--foo`\n///         // modifier class outside of any media query.\n///         foo: true,\n///       ),\n///       from-<bp-name>: (\n///         // Enables generation of the `.o-card__section--from-<bp-name>`\n///         // class inside a min-width media query\n///         // defined ins `$jigsass-breakpoints.length`.\n///         no-modifier: true,\n///\n///         // Enables generation of the `.o-card__section--foo--from-<bp-name>`\n///         // class inside a min-width media query\n///         // defined ins `$jigsass-breakpoints.length`.\n///         foo: true,\n///       ),\n///       until-<bp-name>: (\n///         // Enables generation of the `.o-card__section--until-<bp-name>`\n///         // class inside a max-width media query\n///         // defined ins `$jigsass-breakpoints.length`.\n///         no-modifier: true,\n///\n///         // Enables generation of the `.o-card__section--foo--until-<bp-name>`\n///         // class inside a max-width media query\n///         // defined ins `$jigsass-breakpoints.length`.\n///         foo: true,\n///       ),\n///       when-<bp-name>: (\n///         // Enables generation of the `.o-card__section--when-<bp-name>`\n///         // class inside a misc media query\n///         // defined ins `$jigsass-breakpoints.features`.\n///         no-modifier: true,\n///\n///         // Enables generation of the `.o-card__section--foo--when-<bp-name>`\n///         // class inside a misc media query\n///         // defined ins `$jigsass-breakpoints.features`.\n///         foo: true,\n///       ),\n///       from-<bp-name>-until-<bp-name>: (...);\n///       from-<bp-name>-when-<bp-name>: (...);\n///       until-<bp-name>-when-<bp-name>: (...);\n///       from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n///     ),\n///   );\n/// ---\n/// @type {Map}\n/// ---\n$jigsass-card-items-conf: () !default;\n\n/// Configuration map for enabling generation of\n/// card context classes\n/// ---\n/// @example\n///   $jigsass-card-context-conf: (\n///     has-card: (\n///       no-breakpoint: (\n///         // Enables generation of the `.o-has-card`\n///         // class outside of any media query.\n///         no-modifier: true,\n///\n///         // Enables generation of the `.o-has-card--foo`\n///         // modifier class outside of any media query.\n///         foo: true,\n///       ),\n///       from-<bp-name>: (\n///         // Enables generation of the `.o-has-card--from-<bp-name>`\n///         // class inside a min-width media query\n///         // defined ins `$jigsass-breakpoints.length`.\n///         no-modifier: true,\n///\n///         // Enables generation of the `.o-has-card--foo--from-<bp-name>`\n///         // class inside a min-width media query\n///         // defined ins `$jigsass-breakpoints.length`.\n///         foo: true,\n///       ),\n///       until-<bp-name>: (\n///         // Enables generation of the `.o-has-card--until-<bp-name>`\n///         // class inside a max-width media query\n///         // defined ins `$jigsass-breakpoints.length`.\n///         no-modifier: true,\n///\n///         // Enables generation of the `.o-has-card--foo--until-<bp-name>`\n///         // class inside a max-width media query\n///         // defined ins `$jigsass-breakpoints.length`.\n///         foo: true,\n///       ),\n///       when-<bp-name>: (\n///         // Enables generation of the `.o-has-card--when-<bp-name>`\n///         // class inside a misc media query\n///         // defined ins `$jigsass-breakpoints.features`.\n///         no-modifier: true,\n///\n///         // Enables generation of the `.o-has-card--foo--when-<bp-name>`\n///         // class inside a misc media query\n///         // defined ins `$jigsass-breakpoints.features`.\n///         foo: true,\n///       ),\n///       from-<bp-name>-until-<bp-name>: (...);\n///       from-<bp-name>-when-<bp-name>: (...);\n///       until-<bp-name>-when-<bp-name>: (...);\n///       from-<bp-name>-until-<bp-name>-when-<bp-name>: (...);\n///     ),\n///   );\n/// ---\n/// @type {Map}\n/// ---\n$jigsass-card-context-conf: () !default;\n\n\n/* ---\nsection: Card\ntitle: Configuration\norder: -1\n---\nBecause of the many style variations cards could have throughout different designs\nand implementations, JigSass Card allows for complete modification through\nconfiguration variables.\n\n\n#### Container Background\n```scss\n$jigsass-has-card-bgc\n```\n\n**Type:** `Color`\n\nThe background color of elements containing cards.\n\nUsed for setting the background color of\nthe `.o-has-card` contextual modifier.\n\n**Default:** `#ebebeb`\n\n\n#### Card Style\n```scss\n$jigsass-card-defaults\n```\n\n**Type:** `Map`\n\nCSS declarations to apply to cards.\n\nSince cards are such a prevalent UI pattern, yet with so\nmany variations, subtle or otherwise, JigSass Cards come with defaults that\nare configurable to the last value and declaration. Don't like our defaults?\nMake your own.\n\n**Default:** `(background-color: #f0f0f0)`\n\n\n#### Card Modifiers\n```scss\n$jigsass-card-modifiers\n```\n\n **Type:** `Map`\n\nCSS declarations for card modifiers, with each modifier being a nested map at the first level.\n\n**Default:**\n```scss\n(\n  raised: (\n    box-shadow: 0 4px 5px -2px rgba(#333, .5),\n    position: relative,\n    transition: .15s transform linear,\n\n    '&:after': (\n      bottom: 0,\n      box-shadow: 0 8px 6px -3px rgba(#333, .3),\n      content: '',\n      left: 0,\n      opacity: 0,\n      position: absolute,\n      right: 0,\n      top: 0,\n      transition: .15s opacity linear,\n      z-index: -1,\n    ),\n\n    '&:hover': (\n      transform: translatey(-4px) scale(1.01),\n\n      '&:after': (\n        opacity: 1,\n      ),\n    ),\n  )\n)\n```\n\n\n#### Section Border\n\n```scss\n$jigsass-card-section-border\n```\n\n**Type:** List\n\nBorder style of a card section\n\nA list in the format of `length` `style` `color`\n\n**Default:** 1px solid #ccc !default;\n*/\n// stylelint-enable\n\n/// The background color of elements containing cards.\n///\n/// Used for setting the background color of\n/// the `.o-has-card` contextual modifier.\n$jigsass-has-card-bgc: #f0f0f0 !default;\n\n/// CSS declarations to apply to cards.\n///\n/// Since cards are such a prevalent UI pattern, yet with so\n/// many variations, subtle or otherwise, JigSass Cards come with defaults that\n/// are configurable to the last value and declaration. Don't like our defaults?\n/// Make your own.\n/// ---\n/// @type Map\n/// ---\n$jigsass-card-defaults: (\n  background-color: #fff,\n) !default;\n\n/// Card modifiers\n///\n/// CSS declarations for card modifiers, with each modifier being a nested\n/// map at the first level.\n/// ---\n/// @type Map\n/// ---\n$jigsass-card-modifiers: (\n  raised: (\n    box-shadow: 0 4px 5px -2px rgba(#333, .5),\n    position: relative,\n    transition: .15s transform linear,\n\n    '&:after': (\n      bottom: 0,\n      box-shadow: 0 8px 6px -3px rgba(#333, .3),\n      content: '',\n      left: 0,\n      opacity: 0,\n      position: absolute,\n      right: 0,\n      top: 0,\n      transition: .15s opacity linear,\n      z-index: -1,\n    ),\n\n    '&:hover': (\n      transform: translatey(-4px) scale(1.01),\n\n      '&:after': (\n        opacity: 1,\n      ),\n    ),\n  )\n) !default;\n\n/// Border style of a card section\n///\n/// A list in the format of `length` `style` `color`\n/// ---\n/// @type List\n/// ---\n$jigsass-card-section-border: 1px solid #ccc !default;\n\n\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-card-i: 1;\n\n\n\n\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object(o-card, $jigsass-card-conf) {\n  // An individual piece of distinguished UI\n  // ---\n  // 1. Include user defined styles\n  // ---\n  @if (length($jigsass-card-defaults) > 0) {\n    @include jigsass-classname() {\n      @if (not mixin-exists(jigsass-map2styles)) {\n        @error '`jigsass-objects-card` has a dependency on `jigsass-tools-selectors`.\n          Please import it.';\n      }\n\n      @include jigsass-map2styles($jigsass-card-defaults); // [1]\n\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n        // stylelint-disable\n  /* ---\n  section: Card\n  title: Base\n  order: #{$_jigsass-card-i}\n  ---\n  An individual piece of distinguished UI\n\n  Cards can be used to set apart pieces of content in an effective\n  yet geeric manner. It can contain an Image, headline, texts and\n  interactive elements.\n\n  ```example:html\n  <article class='o-card u-mb--4 u-pb--4 u-as--4'>\n    <figure>\n      <img src='https://unsplash.it/600/300?random' />\n    </figure>\n\n    <header class='u-ph--4'>\n      <h3>This is a card</h3>\n      <p><strong>A piece of distinguished UI</strong></p>\n    </header>\n\n    <p class='u-ph--4'>\n      Cards can be used to set apart pieces of content in an effective\n      yet geeric manner. It can contain an Image, headline, texts and\n      interactive elements.\n    </p>\n  </article>\n  ```\n  */\n        // stylelint-enable\n      }\n    }\n  }\n\n\n  // Modifiers\n  @each $mod, $rules in $jigsass-card-modifiers {\n    $_jigsass-card-i: $_jigsass-card-i + 1 !global;\n    @include jigsass-classname($modifier: $mod) {\n      @if (not mixin-exists(jigsass-map2styles)) {\n        @error '`jigsass-objects-card` has a dependency on `jigsass-tools-selectors`.\n          Please import it.';\n      }\n\n      @include jigsass-map2styles($rules);\n\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n        // stylelint-disable\n  /* ---\n  section: Card\n  title: Modifier: #{$mod}\n  order: #{$_jigsass-card-i + 100}\n  ---\n  ```example:html\n  <article class='[ o-card o-card--#{$mod} ]  u-mb--4 u-pb--4 u-as--4'>\n    <figure>\n      <img src='https://unsplash.it/600/300?random' />\n    </figure>\n\n    <header class='u-ph--4'>\n      <h3>This is a card with a `#{$mod}` modifier</h3>\n      <p><strong>A piece of distinguished UI</strong></p>\n    </header>\n\n    <p class='u-ph--4'>\n      Cards can be used to set apart pieces of contenet in an effective\n      yet geeric manner. It can contain an Image, headline, texts and\n      interactive elements.\n    </p>\n  </article>\n  ```\n  */\n        // stylelint-enable\n      }\n\n    }\n  }\n}\n\n\n\n\n\n// -------------------------------------\n// Items\n// -------------------------------------\n\n// A distinct section within a card\n// ---\n@include jigsass-object(o-card__section, map-get($jigsass-card-items-conf, section) or ()) {\n  @include jigsass-classname() {\n    display: block;\n    position: relative;\n\n    * + &:before {\n      border-top: $jigsass-card-section-border;\n      content: '';\n      left: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      $_jigsass-card-i: $_jigsass-card-i + 1 !global;\n      // stylelint-disable\n  /* ---\n  section: Card\n  title: Item: Section\n  order: #{$_jigsass-card-i + 200}\n  ---\n  A distinct section within a card\n\n  ```example:html\n  <article class='o-card u-mb--4 u-pb--4 u-as--4'>\n    <figure><img src='https://unsplash.it/600/200?random' /></figure>\n\n    <h3 class='u-ph--4'>This is a card with with sub sections</h3>\n\n    <ul class='o-card__section u-as--2'>\n      <li class='u-ph--4 u-pt--2 o-card__section'>\n        <p>Cards can also have sub sections</p>\n      </li>\n      <li class='u-ph--4 u-pt--2 o-card__section'>\n        <p>Which could be useful, for instance, for crealing lists</p>\n      </li>\n      <li class='u-ph--4 u-pt--2 o-card__section'>\n        <p>Of related, scanable content</p>\n      </li>\n    </ul>\n  </article\n  ```\n  */\n      // stylelint-enable\n    }\n  }\n}\n\n\n\n\n\n// -------------------------------------\n// Context\n// -------------------------------------\n\n@include jigsass-object(o-has-card, map-get($jigsass-card-context-conf, has-card) or ()) {\n  @include jigsass-classname() {\n    background-color: $jigsass-has-card-bgc;\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      $_jigsass-card-i: $_jigsass-card-i + 1 !global;\n      // stylelint-disable\n  /* ---\n  section: Card\n  title: Context: has-card\n  order: #{$_jigsass-card-i + 300}\n  ---\n  Sets the background color of elements containing cards to the one defined in\n  [$jigsass-has-card-bgc](#container-background).\n\n  Automatically generated when generating any card related class (`o-card`, a modifier or an item).\n  */\n      // stylelint-enable\n    }\n  }\n}\n","// *************************************\n//\n// # jigsass-objects-grid Config\n// -> Configuration variables\n//\n////\n/// @group Grid - 01 - Grid container\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not function-exists(jigsass-get)) {\n  @error '`jigsass-objects-grid` has a dependency on `jigsass-tools-maps. Please import it.';\n}\n@if (not mixin-exists(jigsass-mq)) {\n  @error '`jigsass-objects-grid` has a dependency on `jigsass-tools-mq. Please import it.';\n}\n@if (not function-exists(jigsass-rhythm)) {\n  @error '`jigsass-objects-grid` has a dependency on `jigsass-tools-typography`. Please import it.';\n}\n@if (not mixin-exists(jigsass-bidi)) {\n  @error '`jigsass-objects-grid` has a dependency on `jigsass-tools-bidi`. Please import it.';\n}\n@if (not mixin-exists(jigsass-object)) {\n  @error '`jigsass-objects-grid` has a dependency on `jigsass-tools-selectors. Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Private Helper Mixins\n// -------------------------------------\n\n/// Outputs fallback styles for grid containers when flexbox isn't available\n/// and falling back to `display: inline-block` grid items is required.\n/// ---\n/// 1. Ensures consistent default alignment of items.\n/// 2. An attempt to remove whitespace between `display: inline-block`\n///    grid item elements.\n///    Works with all non-monospaced fonts. When using a monospace font-face\n///    as your base font, set the grid container's font-family to `sans-serif`\n///    and re-apply your default font to grid items.\n///    alternatively, comment out whitespace between grid items.\n/// 3. Fixes WebKit bug.\n/// ---\n@mixin _jigsass-grid-flaxbox-fallback-styles() {\n  @if (not mixin-exists(jigsass-bidi)) {\n    @error '`jigsass-objects-grid` has a dependency on `jigsass-tools-bidi`. Please import it.';\n  }\n  @include jigsass-bidi(text-align, start); // [1]\n  display: block;\n  letter-spacing: -0.31em;  // [2]\n  text-rendering: optimizespeed; // [3]\n\n  // Old-Opera hack\n  opera:-o-prefocus &,\n  & {\n    word-spacing: -.043em;  // [3]\n  }\n}\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object($jigsass-grid-class, $jigsass-grid-conf) {\n  // Add namespace to class names\n  $_ns: if($jigsass-namespace == '', '', #{$jigsass-namespace}-);\n  $_grid-class: #{$_ns}#{$jigsass-grid-class};\n  $_item-class: #{$_ns}#{$jigsass-grid-item-class};\n\n  // Grid container\n  // ---\n  // 1. Allows lists to be grids.\n  // 2. Negative margins to compensate for first and last columns' gutter\n  // 3. Apply default column gutter.\n  //    Targets direct descendants using the universal selector\n  //    instead of actual grid items in order to keep\n  //    specificity low. This works, as only grid items are\n  //    legitimate children of grid containers.\n  // 4. Align grid items to top by default.\n  // ---\n  @include jigsass-classname() {\n    @include jigsass-bidi(margin-start, -1 * jigsass-rhythm($jigsass-grid-default-gutter)); // [1]\n    list-style: none; // [1]\n    margin-left: jigsass-rhythm($jigsass-grid-default-gutter) / -2; // [2]\n    margin-right: jigsass-rhythm($jigsass-grid-default-gutter) / -2; // [2]\n\n    @if ($jigsass-grid-flexbox) {\n      display: flex;\n      flex: 0 1 auto;\n      flex-direction: row;\n      flex-wrap: wrap;\n\n      & > * {\n        padding-left: jigsass-rhythm($jigsass-grid-default-gutter) / 2; // [3]\n        padding-right: jigsass-rhythm($jigsass-grid-default-gutter) / 2; // [3]\n        vertical-align: top;\n      }\n\n      @if ($jigsass-grid-flexbox-fallback) {\n        // Use the defined qualifier selector for flexbox fallback\n        // (e.g., when using modernizer).\n        .#{$jigsass-grid-flexbox-fallback} & {\n          @include _jigsass-grid-flaxbox-fallback-styles;\n        }\n      }\n    }\n    @else {\n      @include _jigsass-grid-flaxbox-fallback-styles;\n    }\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Grid Container\n  title: #{$_grid-class}\n  order: 0\n  ---\n  Any HTML element (including lists) may serve as a grid container,\n  however, grid containers may contain no other elements other than\n  grid items.\n\n  A grid element has negative margins the length of half a gutter at its left and right,\n  to compensate of the first and last column's gutter and ease calculations.\n\n  Unless `#{$_item-class}`s are given a width modifier class,\n  all grid items will be equally distributed along a single row.\n\n\n  #### Related variables:\n\n  - `$jigsass-grid-class` (default: `grid`): Determines the class-name used\n    for grid containers.\n  - `$jigsass-grid-flexbox` (default: `true`): Determines whether to use flexbox or not.\n  - `$jigsass-grid-flexbox-fallback` (default: `no-flaxwrap`): Determines if to include a\n    flexbox fallback and the qualifier class to use if so (e.g, `.no-flexwrap`\n    when using Modernizr defaults). Set to `false` to disable fallback altogether,\n    and to a class-name (sans the leading `.`) used as the qualifier class if fallback\n    is desirable.\n  - `$jigsass-grid-default-gutter` (default: `4`): A unitless number used to determine number of\n    base rhythm units (as defined in `$jigsass-sizes.rhythm-unit`) to use as gutter length\n    between grid items in the default grid container.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class}'>\n    <!-- first row -->\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo'> 1 of 3 </div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo'> 1 of 3 </div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo'> 1 of 3 </div>\n    </div>\n    <!-- second row -->\n    <div class='#{$_item-class}'>\n      <div class='fpo'>auto-sized</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>auto-sized</div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_grid-class} {\n    display: flexbox;\n    flex: 0 1 auto;\n    flex-direction: row;\n    flex-wrap: wrap;\n    list-style: none;\n    margin-left: -2rem;\n    margin-right: -2rem;\n  }\n\n  // Targets direct descendants using the universal selector\n  // instead of actual grid items in order to keep\n  // specificity low. This works, as only grid items are\n  // legitimate children of grid containers.\n  .#{$_grid-class} > * {\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n\n  // When `$jigsass-grid-flexbox-fallback` is set to `no-flexwrap`\n  .no-flexwrap .#{$_grid-class} {\n    display: block;\n    letter-spacing: -.043em;\n    text-align: (left|right);\n  }\n\n  // When `$jigsass-grid-flexbox` is disabled\n  .#{$_grid-class} {\n    display: block;\n    letter-spacing: -.043em;\n    list-style: none;\n    margin-left: -2rem;\n    margin-right: -2rem;\n    text-align: (left|right);\n  }\n  .#{$_grid-class} > * {\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n\n\n\n\n  // -------------------------------------\n  // Horizontal Alignment Modifiers\n  // -------------------------------------\n\n  // Align items to grid-container's horizontal start\n  // ---\n  @include jigsass-classname($modifier: start) {\n    // When flexbox is enabled\n    @if ($jigsass-grid-flexbox) {\n      justify-content: flex-start;\n\n      // When support for flexbox fallback is needed\n      @if ($jigsass-grid-flexbox-fallback) {\n        .#{$jigsass-grid-flexbox-fallback} & {\n          @include jigsass-bidi(text-align, start);\n        }\n      }\n    }\n\n    // When flexbox is disabled\n    @else {\n      @include jigsass-bidi(text-align, start);\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Grid Container\n  title: #{$_grid-class}--start\n  order: 1\n  ---\n  Aligns grid items to horizontal start of the grid container.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--start'>\n    <div class='#{$_item-class} #{$_item-class}--3-of-12'>\n      <div class='fpo'>1 of 4</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--3-of-12'>\n      <div class='fpo'>1 of 4</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--8-of-12'>\n      <div class='fpo'>2 of 3</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--10-of-12'>\n      <div class='fpo'>5 of 6</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--12-of-12'>\n      <div class='fpo'>1 of 1</div>\n    </div>\n  </section>\n  ```\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_grid-class}--start {\n    justify-content: flex-start;\n  }\n\n  // When `$jigsass-grid-flexbox-fallback` is set to `no-flexwrap`\n  .no-flexwrap .#{$_grid-class}--start {\n    text-align: (left|right);\n}\n\n  // When `$jigsass-grid-flexbox` is disabled\n  .#{$_grid-class}--start {\n    text-align: (left|right);\n  }\n\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n  // Align items to grid-container's horizontal center\n  // ---\n  // 1. Reset text alignment.\n  // ---\n  @include jigsass-classname($modifier: center) {\n    // When flexbox is enabled\n    @if ($jigsass-grid-flexbox) {\n      justify-content: center;\n\n      // When support for flexbox fallback is needed\n      @if ($jigsass-grid-flexbox-fallback) {\n        .#{$jigsass-grid-flexbox-fallback} & {\n          text-align: center;\n        }\n      }\n\n    }\n\n    // When flexbox is disabled\n    @else {\n      text-align: center;\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Grid Container\n  title: #{$_grid-class}--center\n  order: 2\n  ---\n  Aligns grid items to horizontal center of the grid container.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--center'>\n    <div class='#{$_item-class} #{$_item-class}--3-of-12'>\n      <div class='fpo'>1 of 4</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--3-of-12'>\n      <div class='fpo'>1 of 4</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--8-of-12'>\n      <div class='fpo'>2 of 3</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--10-of-12'>\n      <div class='fpo'>5 of 6</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--12-of-12'>\n      <div class='fpo'>1 of 1</div>\n    </div>\n  </section>\n  ```\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_grid-class}--center {\n    justify-content: center;\n  }\n\n  // When `$jigsass-grid-flexbox-fallback` is set to `no-flexwrap`\n  .no-flexwrap .#{$_grid-class}--center {\n    text-align: center;\n  }\n\n  // When `$jigsass-grid-flexbox` is disabled\n  .#{$_grid-class}--center {\n    text-align: center;\n  }\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n  // Align items to grid-container's horizontal end\n  // ---\n  // 1. Reset text alignment.\n  // ---\n  @include jigsass-classname($modifier: end) {\n    // When flexbox is enabled\n    @if ($jigsass-grid-flexbox) {\n      justify-content: flex-end;\n\n      // When support for flexbox fallback is needed\n      @if ($jigsass-grid-flexbox-fallback) {\n        .#{$jigsass-grid-flexbox-fallback} & {\n          @include jigsass-bidi(text-align, end);\n        }\n      }\n\n    }\n\n    // When flexbox is disabled\n    @else {\n      @include jigsass-bidi(text-align, end);\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Grid Container\n  title: #{$_grid-class}--end\n  order: 3\n  ---\n  Aligns grid items to horizontal end of the grid container.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--end'>\n    <div class='#{$_item-class} #{$_item-class}--3-of-12'>\n      <div class='fpo'>1 of 4</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--3-of-12'>\n      <div class='fpo'>1 of 4</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--8-of-12'>\n      <div class='fpo'>2 of 3</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--10-of-12'>\n      <div class='fpo'>5 of 6</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--12-of-12'>\n      <div class='fpo'>1 of 1</div>\n    </div>\n  </section>\n  ```\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_grid-class}--end {\n    justify-content: flex-end;\n  }\n\n  // When `$jigsass-grid-flexbox-fallback` is set to `no-flexwrap`\n  .no-flexwrap .#{$_grid-class}--end {\n    text-align: (left|right);\n  }\n  // When `$jigsass-grid-flexbox` is disabled\n  .#{$_grid-class}--end {\n    text-align: (left|right);\n  }\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n  // Reverse the display order grid items\n  // ---\n  // 1. Reverse the `direction` when not using flexbox, so that items are drawn\n  //    opposite to the document's general direction.\n  // 2. Reset the direction of grid items when not using flexbox\n  // ---\n  @include jigsass-classname($modifier: rev) {\n    // When flexbox is enabled\n    @if ($jigsass-grid-flexbox) {\n      flex-direction: row-reverse;\n\n      // When support for flexbox fallback is needed\n      @if ($jigsass-grid-flexbox-fallback) {\n        .#{$jigsass-grid-flexbox-fallback} & {\n          @include jigsass-bidi(direction, ets);  // [1]\n\n          > .#{$_item-class} {\n            @include jigsass-bidi(direction, ste);  // [2]\n          }\n        }\n      }\n    }\n\n    // When flexbox is disabled\n    @else {\n      @include jigsass-bidi(direction, ets);  // [1]\n\n      > .#{$_item-class} {\n        @include jigsass-bidi(direction, ste);  // [2]\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Grid Container\n  title: #{$_grid-class}--rev\n  order: 4\n  ---\n  Reversed grid.\n\n  items 1, 2, 3, 4 in the markup will be visually displayed in 4, 3, 2, 1 order.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--rev'>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 1</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 2</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 3</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 4</div>\n    </div>\n  </section>\n  ```\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_grid-class}--rev {\n    flex-direction: row-reverse;\n  }\n\n  // When `$jigsass-grid-flexbox-fallback` is set to `no-flexwrap`\n  .no-flexwrap .#{$_grid-class}--start {\n    direction: (rtl|ltr);\n  }\n\n  .no-flexwrap .#{$_grid-class}--rev > .#{$_item-class} {\n    direction: (rtl|ltr); // Opposite of the above\n  }\n\n  // When `$jigsass-grid-flexbox` is disabled\n  .#{$_grid-class}--start {\n    direction: (rtl|ltr);\n  }\n\n  .#{$_grid-class}--rev > .#{$_item-class} {\n    direction: (rtl|ltr); // Opposite of the above\n  }\n\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n\n\n\n\n  // -------------------------------------\n  // Vertical Alignment Modifiers\n  // -------------------------------------\n\n  // Equal height grid cells\n  // ---\n  // Only available with flexbox\n  @if ($jigsass-grid-flexbox) {\n\n    @include jigsass-classname($modifier: equal-height) {\n      > .#{$_item-class} {\n        display: flex;\n      }\n\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        // stylelint-disable\n  /* ---\n  section: Grid Container\n  title: #{$_grid-class}--equal-height\n  order: 5\n  ---\n  Stretch all grid items on a single row to the height of the tallest grid item.\n\n  Only works with flexbox, no fallback available.\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--equal-height'>\n    <!-- first row -->\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo'>\n        1 of 3<br />\n        Stretches to fill height by default, despite its content not filling the space\n      </div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo'>\n        1 of 3<br />\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum mollis\n        velit non gravida venenatis. Praesent consequat lectus purus, ut scelerisque\n        velit condimentum eu.\n      </div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo'>\n        1 of 3<br />\n        Stretches to fill height by default, despite its content not filling the space\n      </div>\n    </div>\n    <!-- second row -->\n    <div class='#{$_item-class}'>\n      <div class='fpo'>auto-sized</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>auto-sized</div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_grid-class}--equal-height > #{$_item-class} {\n    display: flex;\n  }\n\n  ```\n  */\n        // stylelint-enable\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n      }\n    }\n  }\n\n\n  // Top-aligned grid-cells\n  // ---\n  @include jigsass-classname($modifier: top) {\n    align-items: flex-start;\n\n    > .#{$_item-class} {\n      verticle-align: top;\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Grid Container\n  title: #{$_grid-class}--top\n  order: 6\n  ---\n  Top aligned grid items\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--top'>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 1</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 2</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo fpo--tall'>Item 3</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 4</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 5</div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .#{$_grid-class}--top {\n    align-items: flex-start;\n  }\n\n  .#{$_grid-class}--top > * {\n    vertical-align: top;\n  }\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n\n  // Middle-alligned grid-cells\n  // ---\n  @include jigsass-classname($modifier: middle) {\n    align-items: center;\n\n    > * {\n      verticle-align: middle;\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Grid Container\n  title: #{$_grid-class}--middle\n  order: 7\n  ---\n  Middle aligned grid items\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--middle'>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 1</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 2</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo fpo--tall'>Item 3</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 4</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 5</div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .#{$_grid-class}--middle {\n    align-items: center;\n  }\n\n  .#{$_grid-class}--middle >  * {\n    vertical-align: middle;\n  }\n\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n\n  // Bottom-alligned grid-cells\n  // ---\n  @include jigsass-classname($modifier: bottom) {\n    align-items: flex-end;\n\n    > * {\n      verticle-align: bottom;\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Grid Container\n  title: #{$_grid-class}--bottom\n  order: 8\n  ---\n  Bottom aligned grid items\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--bottom'>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 1</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 2</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo fpo--tall'>Item 3</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 4</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 5</div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .#{$_grid-class}--bottom {\n    align-items: flex-end;\n  }\n\n  .#{$_grid-class}--bottom > * {\n    vertical-align: bottom;\n  }\n\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n\n\n\n\n  // -------------------------------------\n  // Horizontal Distribution Modifiers\n  // -------------------------------------\n\n  // Equally distributed grid items\n  //\n  // Only available when flexbox is enabled\n  // ---\n  @if ($jigsass-grid-flexbox) {\n    @include jigsass-classname($modifier: space-between) {\n      justify-content: space-between;\n\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        // stylelint-disable\n  /* ---\n  section: Grid Container\n  title: #{$_grid-class}--space-between\n  order: 9\n  ---\n  Distribute grid items equally across the main flex axis.\n\n  ** Use with care. Only available with flexbox. No fallback. **\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--space-between'>\n    <div class='#{$_item-class} #{$_item-class}--3-of-12'>\n      <div class='fpo'>Item 1</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--3-of-12'>\n      <div class='fpo'>Item 2</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--3-of-12'>\n      <div class='fpo'>Item 3</div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_grid-class}--space-between {\n    justify-content: space-between\n  }\n  ```\n  */\n        // stylelint-enable\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n      }\n    }\n  }\n\n  // Equally distribute space around grid items\n  //\n  // Only available when flexbox is enabled\n  // ---\n  @if ($jigsass-grid-flexbox) {\n    @include jigsass-classname($modifier: space-around) {\n      justify-content: space-around;\n\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        // stylelint-disable\n  /* ---\n  section: Grid Container\n  title: #{$_grid-class}--space-around\n  order: 10\n  ---\n  Equally distribute space around grid items across the main flex axis, meaning,\n  including before the first item and after the last.\n\n  ** Use with care. Only available with flexbox. No fallback. **\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--space-around'>\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo'>Item 1</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo'>Item 2</div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_grid-class}--space-around {\n    justify-content: space-around\n  }\n  ```\n  */\n        // stylelint-enable\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n      }\n    }\n  }\n\n\n\n\n\n  // -------------------------------------\n  // Gutter Width Modifiers\n  // -------------------------------------\n\n  @each $gutter-modifier, $gutter-spacing in $jigsass-grid-gutter-modifiers {\n    @if (unitless($gutter-spacing)) {\n      $_jigsass-current-gutter: jigsass-rhythm($gutter-spacing) !global;\n      $_jigsass-current-width-description: unquote(\n        'that of #{$gutter-spacing} base rhythm units'\n      ) !global;\n    }\n    @else {\n      $_jigsass-current-gutter-gutter: jigsass-convert-length($gutter-spacing) !global;\n      $_jigsass-current-width-description: unquote('#{$gutter-spacing}') !global;\n    }\n\n    // 1. Modify gutter widths.\n    //    Targets direct descendants using the universal selector\n    //    instead of actual grid items in order to keep\n    //    specificity low. This works, as only grid items are\n    //    legitimate children of grid containers.\n    @include jigsass-classname($modifier: #{$gutter-modifier}) {\n      margin-left: $_jigsass-current-gutter / -2;\n      margin-right: $_jigsass-current-gutter / -2;\n\n      & > * {  // [1]\n        padding-left: $_jigsass-current-gutter / 2;\n        padding-right: $_jigsass-current-gutter / 2;\n      }\n\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        // stylelint-disable\n  /* ---\n  section: Grid Container\n  title: #{$_grid-class}--#{$gutter-modifier}\n  order: 11\n  ---\n  Modify the width of column gutters to #{$_jigsass-current-width-description}\n\n\n  #### Related Variables:\n  - `$jigsass-grid-gutter-modifiers`: Specifies the gutter-width modifiers that can be generated.\n    A map of modifiers, where each key is a modifier's name and value is a unitless numbers\n    denoting amounts of rhythm units to serve as gutter-width in each modifier.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--#{$gutter-modifier}'>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 1</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 2</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>Item 3</div>\n    </div>\n  </section>\n  ```\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .#{$_grid-class}--#{$gutter-modifier} {\n    margin-left: #{$_jigsass-current-gutter / -2};\n    margin-right: #{$_jigsass-current-gutter / -2};\n  }\n\n  // Targets direct descendants using the universal selector\n  // instead of #{$_item-class} in order to keep\n  // specificity low. This works, as only grid items are\n  // legitimate children of #{$_grid-class}.\n  .#{$_grid-class}--#{$gutter-modifier} > * {\n    padding-left: #{$_jigsass-current-gutter / 2};\n    padding-right: #{$_jigsass-current-gutter / 2};\n  }\n  ```\n  */\n        // stylelint-enable\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n      }\n    }\n    $_jigsass-current-gutter-gutter: null !global;\n  }\n}\n","// *************************************\n//\n// # jigsass-objects-grid Config\n// -> Configuration variables\n//\n////\n/// @group Grid - 01 - Grid container\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not function-exists(jigsass-get)) {\n  @error '`jigsass-objects-grid` has a dependency on `jigsass-tools-maps. Please import it.';\n}\n@if (not mixin-exists(jigsass-mq)) {\n  @error '`jigsass-objects-grid` has a dependency on `jigsass-tools-mq. Please import it.';\n}\n@if (not function-exists(jigsass-rhythm)) {\n  @error '`jigsass-objects-grid` has a dependency on `jigsass-tools-typography`. Please import it.';\n}\n@if (not mixin-exists(jigsass-bidi)) {\n  @error '`jigsass-objects-grid` has a dependency on `jigsass-tools-bidi`. Please import it.';\n}\n@if (not mixin-exists(jigsass-object)) {\n  @error '`jigsass-objects-grid` has a dependency on `jigsass-tools-selectors. Please import it.';\n}\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n//\n\n\n\n\n// -------------------------------------\n// Private Helper Mixins\n// -------------------------------------\n\n/// Outputs fallback styles for grid items when flexbox isn't available\n/// and falling back to `display: inline-block` grid items is required.\n/// ---\n/// 1. Keep content aligned with the document's direction.\n/// 2. Establish a non-float grid system, which\n///    allows vertical alignment of content.\n/// 3. Reset text defaults changed by the grid container.\n/// ---\n@mixin _jigsass-grid-item-flaxbox-fallback-styles() {\n  @include jigsass-bidi(text-align, start); // [1]\n\n  display: inline-block;  // [2]\n  letter-spacing: normal; // [3]\n  text-rendering: auto;   // [3]\n  word-spacing: normal;   // [3]\n}\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object($jigsass-grid-item-class, $jigsass-grid-item-conf) {\n  // Add namespace to class names\n  $_ns: if($jigsass-namespace == '', '', #{$jigsass-namespace}-);\n  $_grid-class: #{$_ns}#{$jigsass-grid-class};\n  $_item-class: #{$_ns}#{$jigsass-grid-item-class};\n\n  // Grid Item\n  // ---\n  // 1. Include gutter width in total width calculation\n  // 2. Allows lists to be grids.\n  // ---\n  @include jigsass-classname() {\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n\n    box-sizing: border-box; // [1]\n    list-style: none; // [2]\n\n    @if ($jigsass-grid-flexbox) {\n      flex-basis: auto;\n      flex-grow: 1;\n      flex-shrink: 1;\n\n      @if ($jigsass-grid-flexbox-fallback) {\n        // Use the defined qualifier selector for flexbox fallback\n        // (e.g., when using modernizer).\n        .#{$jigsass-grid-flexbox-fallback} & {\n          @include _jigsass-grid-item-flaxbox-fallback-styles;\n        }\n      }\n    }\n    @else {\n      @include _jigsass-grid-flaxbox-fallback-styles;\n    }\n    @if (not index($_doclet-store, $_doclet)) {\n    // stylelint-disable\n  /* ---\n  section: Grid Item\n  title: #{$_item-class}\n  order: 1\n  ---\n  Any HTML element (including lists) may serve as a grid item, however, grid items\n  must only be placed as the *direct* descendants of a grid container.\n\n  Each grid item has padding the length of half a single gutter at its left and right edges,\n  creating a gap between the different items. The gutter's width can de modified at the\n  grid level, or overriden on a per-grid item basis.\n\n  Grid items are set to `box-sizing: border-box`, so that the padding used to form gutters\n  is taken into consideration when setting item widths.\n\n  Unless grid items are given a width modifier class, and as long as flexbox is available,\n  all grid items will be equally distributed along a single row.\n\n\n  #### Flexbox fallback caveat:\n  When flexbox isn't available, JigSass Grid can be set to fall back to using a\n  `display: inline-block` based grid system. Using a `display: inline-block` based\n  gird system has many advantages over traditional, `float` based grid systems,\n  but also one notable drawback: whitespace between grid items, which are inline elements,\n  is rendered, and can break your grid.\n  JigSass Grid tries to take care of that for you by setting the gird container's\n  `letter-spacing` to `-0.31em`, which eliminates white-space between grid cells\n  with all non-monospaced fonts. When using a monospace font-face as your base font,\n  set the grid container's font-family to `sans-serif` and re-apply your default\n  font to grid items.\n\n  The safest option is to comment out the whitespace between grid items:\n\n  ```html\n  <section class='#{$_grid-class}'>\n    <div class='#{$_item-class}'>\n      ...\n    </div><!--\n    --><div class='#{$_item-class}'>\n      ...\n    </div>\n  </section>\n  ```\n\n\n  #### Related variables:\n  - `$jigsass-grid-item-class` (default: `#{$jigsass-grid-class}__item`): Determines the\n    class-name used for grid containers.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class}'>\n    <!-- First row -->\n    <div class='#{$_item-class}'>\n      <div class='fpo'>auto-sized</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>auto-sized</div>\n    </div>\n    <!-- Second row -->\n    <div class='#{$_item-class} #{$_item-class}--12-of-12'>\n      <div class='fpo'> 1 of 1 </div>\n    </div>\n    <!-- Third row -->\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo'> 1 of 3 </div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo'> 1 of 3 </div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--4-of-12'>\n      <div class='fpo'> 1 of 3 </div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_item-class} {\n    box-sizing: border-box;\n    list-style: none;\n    flex-basis: auto;\n    flex-grow: 1;\n    flex-shrink: 1;\n  }\n\n  // When `$jigsass-grid-flexbox-fallback` is set to `no-flexwrap`\n  .no-flexwrap .#{$_grid-class} {\n    display: inline-block;\n    letter-spacing: normal;\n    text-align: (left|right);\n    text-rendering: auto;\n    word-spacing: normal;\n  }\n\n  // When `$jigsass-grid-flexbox` is disabled\n  .#{$_grid-class} {\n    box-sizing: border-box;\n    display: inline-block;\n    letter-spacing: normal;\n    list-style: none;\n    text-align: (left|right);\n    text-rendering: auto;\n    word-spacing: normal;\n  }\n\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n\n\n\n\n  // -------------------------------------\n  // Modifiers\n  // -------------------------------------\n\n  // Sets a grid item's main flex axis to vertical.\n  // ---\n  @if ($jigsass-grid-flexbox) {\n    @include jigsass-classname($modifier: col) {\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n\n      flex-direction: column;\n\n      @if (not index($_doclet-store, $_doclet)) {\n    // stylelint-disable\n  /* ---\n  section: Grid Item\n  title: #{$_item-class}--col\n  order: 2\n  ---\n  Sets a grid item's main flex axis to vertical. Often useful when used in conjuction with the\n  `--equal-height` grid container modifier.\n\n  Only available when flexbox is supported.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--equal-height'>\n    <!-- first row -->\n    <div class='#{$_item-class}\n                #{$_item-class}--col\n                #{$_item-class}--6-of-12'\n    >\n      <div class='fpo'></div>\n      <div class='fpo'>These boxes are in a column</div>\n      <div class='fpo'></div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--6-of-12'>\n      <div class='fpo'></div>\n      <div class='fpo'></div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_item-class}--col {\n    flex-direction: row;\n  }\n\n  ```\n  */\n    // stylelint-enable\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n      }\n    }\n  }\n\n  // Prevents a grid item from growing or shrinking\n  // ---\n  @if ($jigsass-grid-flexbox) {\n    @include jigsass-classname($modifier: col) {\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n\n      flex-grow: 0;\n      flex-shrink: 0;\n\n      @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Grid Item\n  title: #{$_item-class}--fixed\n  order: 3\n  ---\n  Allows a grid column to be of fixed size, allowing other items to\n  fill the remaining space.\n\n  Depends on utility classes setting max-width and flex-basis.\n\n  Only available when flexbox is supported.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--equal-height'>\n    <!-- first row -->\n    <aside class='\n        #{$_item-class}\n        #{$_item-class}--fixed\n        #{$_item-class}--col\n        u-mw--200px u-fxb--200px\n    '>\n      <div class='fpo'>200px</div>\n      <div class='fpo'>Fixed</div>\n      <div class='fpo'>Width</div>\n    </aside>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>F</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>l</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>u</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>i</div>\n    </div>\n    <div class='#{$_item-class}'>\n      <div class='fpo'>d</div>\n    </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_item-class}--fixed {\n    flex-grow: 0;\n    flex-shrink: 0;\n  }\n  ```\n  */\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n      }\n      // stylelint-enable\n    }\n  }\n\n\n  // Prevents a grid item from growing or shrinking\n  // ---\n  @include jigsass-classname($modifier: center) {\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n\n    @if (not index($_doclet-store, $_doclet)) {\n    // stylelint-disable\n  /* ---\n  section: Grid Item\n  title: #{$_item-class}--center\n  order: 4\n  ---\n  Horizontaly centers a single grid inside it's grid container.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class}'>\n    <div class='#{$_item-class} #{$_item-class}--7-of-12'>\n      <div class='fpo'></div>\n    </div>\n    <div class='\n      #{$_item-class}\n      #{$_item-class}--center\n      #{$_item-class}--7-of-12\n    '>\n      <div class='fpo'>Centered</div>\n    </div>\n    <div class='#{$_item-class} #{$_item-class}--7-of-12'>\n      <div class='fpo'></div>\n    </div>\n  </section>\n  ```\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_item-class}--center {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  ```\n  */\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n    // stylelint-enable\n  }\n\n\n\n\n\n  // -------------------------------------\n  // Gutter Width Modifiers\n  // -------------------------------------\n\n  @each $gutter-modifier, $gutter-spacing in $jigsass-grid-gutter-modifiers {\n    @if (unitless($gutter-spacing)) {\n      $_jigsass-current-gutter: jigsass-rhythm($gutter-spacing) !global;\n      $_jigsass-current-width-description: unquote(\n        'that of #{$gutter-spacing} base rhythm units'\n      ) !global;\n    }\n    @else {\n      $_jigsass-current-gutter: jigsass-convert-length($gutter-spacing) !global;\n      $_jigsass-current-width-description: unquote('#{$gutter-spacing}') !global;\n    }\n\n    // Modify item-level gutter widths\n    @include jigsass-classname($modifier: #{$gutter-modifier}) {\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n\n      @include jigsass-bidi(padding-end, $_jigsass-current-gutter / 2);\n\n      & + * { @include jigsass-bidi(padding-start, $_jigsass-current-gutter / 2); }\n\n      @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Grid Item\n  title: #{$_item-class}--#{$gutter-modifier}\n  order: 5\n  ---\n  Modify the width of a gutter between an individual grid item\n  and the next one to #{$_jigsass-current-width-description}.\n\n  ** Do not set item-level gutter modifiers on items in the last column of a grid. **\n\n\n  #### Related Variables:\n  - `$jigsass-grid-gutter-modifiers`: Specifies the gutter-width modifiers that can be generated.\n    A map of modifiers, where each key is a modifier's name and value is a unitless numbers\n    denoting amounts of rhythm units to serve as gutter-width in each modifier.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class}'>\n  <div class='#{$_item-class}'>\n  <div class='fpo'>Item 1</div>\n  </div>\n  <div class='#{$_item-class} #{$_item-class}--#{$gutter-modifier}'>\n  <div class='fpo'>Item 2</div>\n  </div>\n  <div class='#{$_item-class}'>\n  <div class='fpo'>Item 3</div>\n  </div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .#{$_item-class}--#{$gutter-modifier} {\n    padding-left: #{$_jigsass-current-gutter / 2};\n    padding-right: #{$_jigsass-current-gutter / 2};\n  }\n  ```\n  */\n    // stylelint-enable\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n      }\n    }\n\n    $_jigsass-current-gutter: null !global;\n    $_jigsass-current-width-description: null !global;\n  }\n\n\n\n\n\n  // -------------------------------------\n  // Width Modifiers\n  // -------------------------------------\n\n  @each $ratio in $jigsass-grid-cols {\n    $_doclet: $ratio + '-cols-ratio';\n    // stylelint-disable\n    $_html: '<section class=\"#{$_grid-class}\">';\n    // stylelint-enable\n\n    @for $i from 1 through $ratio {\n      @include jigsass-classname($modifier: #{$i}-of-#{$ratio}) {\n        $percent: $i / $ratio  * 100%;\n        // When flexbox is enabled\n        @if ($jigsass-grid-flexbox) {\n          flex-basis: $percent;\n          max-width: $percent;\n\n          // When support for flexbox fallback is needed\n          @if ($jigsass-grid-flexbox-fallback) {\n            .#{$jigsass-grid-flexbox-fallback} & {\n              width: $percent;\n            }\n          }\n        }\n\n        // When flexbox is disabled\n        @else {\n          width: $percent;\n        }\n      }\n\n      // Create HTML example:\n      $_base-class: '#{$_item-class} ';\n      $_classes: '';\n\n      @if ($i == $ratio) {\n        $_classes: $_base-class + '#{$_item-class}--#{$ratio}-of-#{$ratio} ';\n\n        // stylelint-disable\n        $_html: $_html + '\n          <div class=\"#{unquote($_classes)}\"><div class=\"fpo\"></div></div>';\n        // stylelint-enable\n      }\n      @else if ($i % 2 == 0) {\n        $_classes: $_base-class +\n          '#{$_item-class}--#{$ratio}-of-#{$ratio} ' +\n          '#{$_item-class}--#{$i}-of-#{$ratio}--from-medium';\n\n        // stylelint-disable\n        $_html: $_html + '\n          <div class=\"#{unquote($_classes)}\"><div class=\"fpo\"></div></div>';\n        // stylelint-enable\n\n        $_classes: $_base-class +\n          '#{$_item-class}--#{$ratio}-of-#{$ratio} ' +\n          '#{$_item-class}--#{$ratio - $i}-of-#{$ratio}--from-medium';\n\n        // stylelint-disable\n        $_html: $_html + '\n          <div class=\"#{unquote($_classes)}\"><div class=\"fpo\"></div></div>';\n        // stylelint-enable\n      }\n      @else {\n        $_classes: $_base-class +\n          '#{$_item-class}--#{$ratio}-of-#{$ratio} ' +\n          '#{$_item-class}--#{$ratio - $i}-of-#{$ratio}--from-medium';\n\n        // stylelint-disable\n        $_html: $_html + '\n          <div class=\"#{unquote($_classes)}\"><div class=\"fpo\"></div></div>';\n        // stylelint-enable\n\n        $_classes: $_base-class +\n          '#{$_item-class}--#{$ratio}-of-#{$ratio} ' +\n          '#{$_item-class}--#{$i}-of-#{$ratio}--from-medium';\n\n        // stylelint-disable\n        $_html: $_html + '\n          <div class=\"#{unquote($_classes)}\"><div class=\"fpo\"></div></div>';\n        // stylelint-enable\n      }\n    }\n\n    $_html: $_html + '\n    </section>';\n\n    @if (not index($_doclet-store, $_doclet)) {\n    // stylelint-disable\n  /* ---\n  section: Grid Item\n  title: #{$_item-class}--X-of-#{$ratio}\n  order: 6\n  ---\n  Set the width of a grid item as a ratio of `X` parts of #{$ratio} columns.\n\n  All JigSass Grid elements (grid cotainer, grid item and all their modifiers) are completly\n  responsive using [JigSass MQ](https://www.github.com/txhawks/jigsass-tools-mq) and the\n  breakpoints defined in [$jigsass-breakpoints]\n  (https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)`, though the most\n  common use case is with item-width modifiers.\n\n  Based on the arguments passed to the `jigsass-grid-item` mixin, responsive modifiers are\n  generated according to the following logic:\n  .#{$_item-class}--modifier-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]\n\n  So, assuming the `medium`, `large` and `landscape` breakpoints are defined in\n  `$jigsass-breakpoints` as `600px`, `1024px` and `(orientation: landscape)` respectively,\n  `@include jigsass-grid-item(1-of-#{$ratio})` will generate the `.#{item-class}--1-of#{$ratio}`\n  class, which is the default, and is not limitted to any media-query.\n\n  `@include jigsass-grid-item(1-of-#{$ratio}, $until: medium)` will generate the\n  `.#{item-class}--1-of#{$ratio}--until-medium` class, which will go into effect at\n  `(max-width: 37.49em)` and will override styles in the default class until that point.\n\n  `@include jigsass-grid-item(1-of-#{$ratio}, $from: large, $misc: landscape)` will\n  generate the `.#{item-class}--1-of#{$ratio}--from-large-when-landscape` class, which will\n  go into effect at `(min-width: 64em) and (orientation: landscape)` and will override styles in\n  the default class from that point on.\n\n  Regardless of how many times a class is included, or where, it will only be generated once, where\n  `jigsass-objects-grid` was imported, leaving us with a css file as small as possible,\n  and a predictable cascade.\n\n\n  #### Related Variables:\n  - `$jigsass-grid-cols` (defalut: `12`): Holds a list of unitless numbers, each number is an\n    available column count. E.g., if `$jigsass-grid-cols: 10 12;`, you will be able to create\n    `x`-of-10 and `x`-of-12 classes.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  #{unquote($_html)}\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is enabled\n  .#{$_item-class}--#{$ratio / 2}-of-#{$ratio} {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  // When `$jigsass-grid-flexbox-fallback` is set to `no-flexwrap`\n  .#{$jigsass-grid-flexbox-fallback} .#{$_item-class}--#{$ratio / 2}-of-#{$ratio} {\n    width: 50%;\n  }\n\n  // When `$jigsass-grid-flexbox` is disabled\n  .#{$_item-class}--#{$ratio / 2}-of-#{$ratio} {\n    width: 50%;\n  }\n  ```\n  */\n    // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n\n\n\n\n  // -------------------------------------\n  // Offset Modifiers\n  // -------------------------------------\n\n  @each $ratio in $jigsass-grid-cols {\n    $_doclet: 'offsets-' + $ratio + '-offset';\n    // stylelint-disable\n    $_html: '<section class=\"#{$_grid-class}\">';\n    // stylelint-enable\n\n    @for $i from 1 through $ratio {\n      @include jigsass-classname($modifier: offset-#{$i}-of-#{$ratio}) {\n        $percent: $i / $ratio  * 100%;\n\n        @include jigsass-bidi(margin-start, $percent);\n      }\n\n      // Create HTML example:\n      $_base-class: '#{$_item-class} ';\n      $_classes: '';\n\n      @if ($i != $ratio) {\n        $_classes: $_base-class +\n          '#{$_item-class}--#{$i}-of-#{$ratio} ' +\n          '#{$_item-class}--offset-#{$ratio - $i}-of-#{$ratio}';\n\n        // stylelint-disable\n        $_html: $_html + '\n          <div class=\"#{unquote($_classes)}\"><div class=\"fpo\"></div></div>';\n        // stylelint-enable\n      }\n    }\n\n    $_html: $_html + '\n    </section>';\n\n    @if (not index($_doclet-store, $_doclet)) {\n    // stylelint-disable\n  /* ---\n  section: Grid Item\n  title: #{$_item-class}--offset-X-of-#{$ratio}\n  order: 7\n  ---\n  Offset a grid item by X of #{$ratio} columns.\n\n\n  #### Related Variables:\n  - `$jigsass-grid-cols` (defalut: `12`): Holds a list of unitless numbers, each number is an\n    available column count. E.g., if `$jigsass-grid-cols: 10 12;`, you will be able to create\n    `x`-of-10 and `x`-of-12 classes.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  #{unquote($_html)}\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  // When `$jigsass-grid-flexbox` is disabled\n  .#{$_item-class}--#{$ratio / 2}-of-#{$ratio} {\n    margin-(left|right): 50%;\n  }\n  ```\n  */\n    // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n\n\n\n\n  // -------------------------------------\n  // Gutter rules\n  // -------------------------------------\n\n  @each $rule-modifier, $rule-style in $jigsass-grid-gutter-rules {\n    @include jigsass-classname($modifier: #{$rule-modifier}) {\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n\n      // Create positioning context for column rule pseudo element\n      position: relative;\n\n      &:before {\n        border-left: $rule-style;\n        bottom: 0;\n        content: '';\n        display: block;\n        height: 100%;\n        left: 0;\n        position: absolute;\n        top: 0;\n      }\n\n      @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Grid Item\n  title: #{$_item-class}--#{$rule-modifier}\n  order: 8\n  ---\n  Set a gutter rule on a grid item, visually setting it apart from the preciding grid item.\n\n\n  #### Related Variables:\n  - `$jigsass-grid-gutter-rules`: Specifies styles for column rule modifiers<br />\n    A map where each key is a modifier's name, and its value is\n    the border style to apply to that modifier's column rule.\n\n\n  #### Usage example:\n  ```example:html\n  <!-- In HTML -->\n  <section class='#{$_grid-class} #{$_grid-class}--equal-height'>\n  <div class='#{$_item-class}'><div class='fpo fpo--b'>No rule</div></div>\n\n  <div class='#{$_item-class} #{$_item-class}--#{$rule-modifier}'>\n    <div class='fpo fpo--b'>Has rule</div>\n  </div>\n\n  <div class='#{$_item-class}'><div class='fpo fpo--b'>No rule</div></div>\n  </section>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .#{$_item-class}--#{$rule-modifier} {\n    // Create positioning context for column rule pseudo element\n    position: relative;\n\n    #{&}:before {\n      border-left: #{$rule-style};\n      bottom: 0;\n      content: '';\n      display: block;\n      height: 100%;\n      left: 0;\n      position: absolute;\n      top: 0;\n    }\n  }\n  ```\n  */\n    // stylelint-enable\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n      }\n    }\n  }\n}\n","// *************************************\n//\n// # Bare List\n// -> Removes list decorations\n//\n////\n/// @group Lists\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n// @if (check if dependency was imported) {\n//   @error '`jigsass-objects-lists` has a dependency on `****`. Please import it.'\n// }\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object(o-bare-list, $jigsass-list-bare-conf) {\n  @include jigsass-classname() {\n    list-style: none;\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Lists\n  title: Bare List\n  order: 1\n  ---\n  Strip lists of their default decoration (bullets, numbers, etc.) and spacing.\n\n\n  #### Usage example:\n  ```example:html\n  <ul class='bare-list'>\n    <li>item 1</li>\n    <li>item 2</li>\n    <li>item 3</li>\n    <li>item 4</li>\n    <li>item 5</li>\n  </ul>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .o-bare-list {\n    list-style: none;\n  }\n  ```\n  */\n      //stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n}\n","// *************************************\n//\n// # Inline List\n// -> Inline list items side by side.\n//\n////\n/// @group Lists\n////\n//\n// *************************************\n\n@charset 'UTF-8';\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object(o-inline-list, $jigsass-list-inline-conf) {\n  // Inline list items side by side.\n  // ---\n  // 1. List element can only hold list items.\n  //    Use universal selector to keep specificity low.\n  // 2. Set list items side by side.\n  // ---\n  @include jigsass-classname() {\n    > * {                           // [1]\n      display: inline-block;        // [2]\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Lists\n  title: Inline List\n  order: 2\n  ---\n  Place list (or fuax-list) elements side by side instead of stacked one on top of each other.\n\n\n  #### Usage example:\n  ```example:html\n  <ul class='inline-list'>\n    <li>item 1</li>\n    <li>item 2</li>\n    <li>item 3</li>\n    <li>item 4</li>\n    <li>item 5</li>\n  </ul>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .o-inline-list > * {\n    display: inline-block;\n  }\n  ```\n  */\n      //stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n\n  // Delimit an inline-list by the string defined in `$jigsass-lists-inline-delimiter`\n  // 1. An attempt to remove whitespace between `display: inline-block`\n  //    list items.\n  //    Works with all non-monospaced fonts. When using a monospace font-face\n  //    as your base font, set the font-family on `.o-inline-list` to `sans-serif`\n  //    and re-apply your default font to its direct descendants.\n  //    alternatively, comment out whitespace between list items.\n  // 2. Fix webkit bug related to `[2]`.\n  // 3. Old Opera hack.\n  // 4. List element can only hold list items.\n  //    Use universal selector to keep specificity low.\n  // 5. Reset text defaults changed to eliminate whitespace.\n  // 6. Insert delimiter as a pseudo element of all list items except the last one.\n  // 7. Override delimiter with the one defined in `[data-jigsass-list-delimiter]`.\n  //    Bare in mind that characters should be escaped in the HTML when using this\n  //    method:\n  //    ```html\n  //    <ul class\"[ o-inline-list o-inline-list--delimited ]\">\n  //      <li data-jigsass-delimiter=\",&nbsp;\"> item 1</li>\n  //      <li data-jigsass-delimiter=\",&nbsp;\"> item 2</li>\n  //      <li data-jigsass-delimiter=\",&nbsp;\"> item 3</li>\n  //    </ul>\n  //    ```\n  @include jigsass-classname($modifier: delimited) {\n    letter-spacing: -0.31em;        // [1]\n    text-rendering: optimizespeed;  // [2]\n\n    opera:-o-prefocus &,\n    & {\n      word-spacing: -.043em;        // [3]\n    }\n\n    > * {                           // [4]\n      letter-spacing: normal;       // [5]\n      text-rendering: auto;         // [5]\n      word-spacing: normal;         // [5]\n\n      &:not(:last-child):after {   // [6]\n        content: $jigsass-lists-inline-delimiter;\n      }\n\n      &[data-jigsass-delimiter]:not(:last-child):after {   // [7]\n        content: attr(data-jigsass-delimiter);\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Lists\n  title: Delimited Inline List\n  order: 3\n  ---\n  Delimit an inline-list by the string defined in `$jigsass-lists-inline-delimiter`\n\n  Override the delimiter of individual list items by setting the `data-jigsass-delimiter`\n  property in the HTML to the overriding delimitier:\n\n\n  #### Related Variables\n    - `$jigsass-lists-inline-delimiter` (default: `'\\2002|\\2002'`):\n      The default delimiter to use with `.o-inline-list--delimited`.\n\n  #### Usage example\n  ```example:html\n  <ul class='[ o-inline-list o-inline-list--delimited ]'>\n    <li data-jigsass-delimiter=':&nbsp;'><strong>Default delimiters</strong></li>\n    <li>item 2</li>\n    <li>item 3</li>\n    <li>item 4</li>\n    <li>item 5</li>\n  </ul>\n\n  <ul class='[ o-inline-list o-inline-list--delimited ]'>\n    <li data-jigsass-delimiter=':&nbsp;'><strong>Custom delimiters</strong></li>\n    <li data-jigsass-delimiter=',&nbsp'>item 2</li>\n    <li data-jigsass-delimiter=',&nbsp'>item 3</li>\n    <li data-jigsass-delimiter=',&nbsp'>item 4</li>\n    <li data-jigsass-delimiter=',&nbsp'>item 5</li>\n  </ul>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n  .o-inline-list--delimited {\n    letter-spacing: -0.31em;\n    text-rendering: optimizespeed;\n  }\n\n  opera:-o-prefocus .o-inline-list--delimited,\n  .o-inline-list--delimited {\n    word-spacing: -.043em;\n  }\n\n    .o-inline-list--delimited > * {\n      display: inline-block;\n      letter-spacing: normal;\n      text-rendering: auto;\n      word-spacing: normal;\n    }\n\n    .o-inline-list--delimited > *:not(:last-child):after {\n      content: $jigsass-lists-inline-delimiter;\n    }\n\n    .o-inline-list--delimited > *[data-jigsass-delimiter]:not(:last-child):after {\n      content: attr(data-jigsass-delimiter);\n    }\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n\n  // Push all items in an inline list past the\n  // first one to the horizontal end of the container.\n  @include jigsass-classname($modifier: split-first) {\n    // When flexbox is enabled\n    @if ($jigsass-lists-flexbox) {\n      display: flex;\n\n      > * {\n        flex-grow: 0;\n\n        &:first-child {\n          @include jigsass-bidi(margin-end, auto);\n        }\n      }\n\n      // When support for flexbox fallback is needed\n      @if ($jigsass-lists-flexbox-fallback) {\n        .#{$jigsass-lists-flexbox-fallback} & {\n          display: table;\n\n          > * {\n            display: table-cell;\n            white-space: nowrap;\n\n            &:first-child {\n              max-width: 100%;\n              width: 10000px;\n            }\n          }\n        }\n      }\n    }\n\n    // When flexbox is disabled\n    @else {\n      display: table;\n\n      > * {\n        display: table-cell;\n        white-space: nowrap;\n\n        &:first-child {\n          max-width: 100%;\n          width: 10000px;\n        }\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Lists\n  title: Split Inline List (first)\n  order: 4\n  ---\n  Push all items in an inline list past the first one to the horizontal end of the container.\n\n\n  #### Related Variables\n    - '$jigsass-lists-flexbox' (default: true):\n      Determines if flexbox should be enables, where relevant\n    - '$jigsass-lists-flexbox-fallback' (default: 'no-flexbox'):\n      Determines if flexbox fallback should be included and the qualifier class\n      to use if so (e.g, `.no-flexbox` when using Modernizr defaults)\n      Set to `false` to disable fallback altogether, and to a class-name\n      (sans the leading `.`) used as the qualifier class if fallback is\n      desirable.\n\n\n  #### Usage example:\n  ```example:html\n  <ul class='u-maw--600px [ fpo fpo--b ]  [ o-inline-list o-inline-list--split-first ]'>\n  <li><strong>Pushed to the edge</strong></li>\n    <li>item 2</li>\n    <li>item 3</li>\n    <li>item 4</li>\n    <li>item 5</li>\n  </ul>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n\n  // When flexbox is enabled\n  .o-inline-list--split-first {\n    display: flex;\n  }\n\n    .o-inline-list--split-first > * {\n      flex-grow: 0;\n    }\n\n    .o-inline-list--split-first > *:first-child {\n      margin-(left|right): auto;\n    }\n\n  // When support for flexbox fallback is needed\n  .#{$jigsass-lists-flexbox-fallback} .o-inline-list--split-first {\n    display: table;\n  }\n\n    .#{$jigsass-lists-flexbox-fallback} .o-inline-list--split-first > * {\n      display: table-cell;\n      white-space: nowrap;\n    }\n\n    .#{$jigsass-lists-flexbox-fallback} .o-inline-list--split-first > *:first-child {\n      max-width: 100%;\n      width: 10000px;\n    }\n\n  // When flexbox is disabled\n  .o-inline-list--split-first {\n    display: table;\n  }\n\n    .o-inline-list--split-first > * {\n      display: table-cell;\n      white-space: nowrap;\n    }\n\n    .o-inline-list--split-first > *:first-child {\n      max-width: 100%;\n      width: 10000px;\n    }\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n\n  // Push the last item in an inline list\n  // to the horizontal end of the container.\n  @include jigsass-classname($modifier: split-last) {\n    // When flexbox is enabled\n    @if ($jigsass-lists-flexbox) {\n      display: flex;\n\n      > * {\n        flex-grow: 0;\n\n        &:last-child {\n          @include jigsass-bidi(margin-start, auto);\n        }\n      }\n\n      // When support for flexbox fallback is needed\n      @if ($jigsass-lists-flexbox-fallback) {\n        .#{$jigsass-lists-flexbox-fallback} & {\n          display: table;\n\n          > * {\n            display: table-cell;\n            white-space: nowrap;\n\n            &:last-child {\n              @include jigsass-bidi(text-align, end);\n              max-width: 100%;\n              width: 10000px;\n            }\n          }\n        }\n      }\n    }\n\n    // When flexbox is disabled\n    @else {\n      display: table;\n\n      > * {\n        display: table-cell;\n        white-space: nowrap;\n\n        &:last-child {\n          @include jigsass-bidi(text-align, end);\n          max-width: 100%;\n          width: 10000px;\n        }\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Lists\n  title: Split Inline List (last)\n  order: 5\n  ---\n  Push the last item in an inline list to the horizontal end of the container.\n\n\n  #### Related Variables\n    - '$jigsass-lists-flexbox' (default: true):\n      Determines if flexbox should be enables, where relevant\n    - '$jigsass-lists-flexbox-fallback' (default: 'no-flexbox'):\n      Determines if flexbox fallback should be included and the qualifier class\n      to use if so (e.g, `.no-flexbox` when using Modernizr defaults)\n      Set to `false` to disable fallback altogether, and to a class-name\n      (sans the leading `.`) used as the qualifier class if fallback is\n      desirable.\n\n\n  #### Usage example:\n  ```example:html\n  <ul class='u-maw--600px [ fpo fpo--b ]  [ o-inline-list o-inline-list--split-last ]'>\n    <li>item 1</li>\n    <li>item 2</li>\n    <li>item 3</li>\n    <li>item 4</li>\n    <li><strong>Pushed to the edge</strong></li>\n  </ul>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n\n  // When flexbox is enabled\n  .o-inline-list--split-last {\n    display: flex;\n  }\n\n    .o-inline-list--split-last > * {\n      flex-grow: 0;\n    }\n\n    .o-inline-list--split-last > *:last-child {\n      margin-(left|right): auto;\n    }\n\n  // When support for flexbox fallback is needed\n  .#{$jigsass-lists-flexbox-fallback} .o-inline-list--split-last {\n    display: table;\n  }\n\n    .#{$jigsass-lists-flexbox-fallback} .o-inline-list--split-last > * {\n      display: table-cell;\n      white-space: nowrap;\n    }\n\n    .#{$jigsass-lists-flexbox-fallback} .o-inline-list--split-last > *:last-child {\n      max-width: 100%;\n      text-align: (left|right);\n      width: 10000px;\n    }\n\n  // When flexbox is disabled\n  .o-inline-list--split-last {\n    display: table;\n  }\n\n    .o-inline-list--split-last > * {\n      display: table-cell;\n      white-space: nowrap;\n    }\n\n    .o-inline-list--split-last > *:last-child {\n      max-width: 100%;\n      text-align: (left|right);\n      width: 10000px;\n    }\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n\n\n  // Equally spread list items to fill the full (fluid)\n  // width of their container\n  // ---\n  // 1. Equally size children.\n  // ---\n  @include jigsass-classname($modifier: spread) {\n    width: 100%;\n\n    // When flexbox is enabled\n    @if ($jigsass-lists-flexbox) {\n      display: flex;\n      flex-basis: 100%;\n      flex-wrap: nowrap;\n\n      > * {\n        flex-grow: 1;\n        flex-shrink: 1;\n      }\n\n      // When support for flexbox fallback is needed\n      @if ($jigsass-lists-flexbox-fallback) {\n        .#{$jigsass-lists-flexbox-fallback} & {\n          display: table;\n          table-layout: fixed; // [1]\n\n          > * {\n            display: table-cell;\n          }\n        }\n      }\n    }\n\n    // When flexbox is disabled\n    @else {\n      display: table;\n      table-layout: fixed; // [1]\n\n      > * {\n        display: table-cell;\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      // stylelint-disable\n  /* ---\n  section: Lists\n  title: Spread out Inline List\n  order: 6\n  ---\n  // Equally spread list items to fill the full (fluid)\n  // width of their container\n  Push all items in an inline list past the first one to the horizontal end of the container.\n\n\n  #### Related Variables\n    - '$jigsass-lists-flexbox' (default: true):\n      Determines if flexbox should be enables, where relevant\n    - '$jigsass-lists-flexbox-fallback' (default: 'no-flexbox'):\n      Determines if flexbox fallback should be included and the qualifier class\n      to use if so (e.g, `.no-flexbox` when using Modernizr defaults)\n      Set to `false` to disable fallback altogether, and to a class-name\n      (sans the leading `.`) used as the qualifier class if fallback is\n      desirable.\n\n\n  #### Usage example:\n  ```example:html\n  <ul class='[ o-inline-list o-inline-list--spread ]'>\n    <li class='fpo'>item 1</li>\n    <li class='fpo'>item 2</li>\n    <li class='fpo'>\n      <strong>I'm much longer than the others, two lines I will take</strong>\n    </li>\n    <li class='fpo'>item 3</li>\n    <li class='fpo'>item 4</li>\n  </ul>\n  ```\n\n\n  ** CSS output: **\n\n  ```scss\n  // --- CSS --- //\n\n  // When flexbox is enabled\n  .o-inline-list--spread {\n    display: flex;\n    flex-basis: 100%;\n    flex-wrap: nowrap;\n  }\n\n    .o-inline-list--spread > * {\n      flex-grow: 1;\n      flex-shrink: 1;\n    }\n\n  // When support for flexbox fallback is needed\n  .#{$jigsass-lists-flexbox-fallback} .o-inline-list--spread {\n    display: table;\n    table-layout: fixed;\n  }\n\n    .#{$jigsass-lists-flexbox-fallback} .o-inline-list--spread > * {\n      display: table-cell;\n    }\n\n  // When flexbox is disabled\n  .o-inline-list--spread {\n    display: table;\n    table-layout: fixed;\n  }\n\n    .o-inline-list--spread > * {\n      display: table-cell;\n    }\n  ```\n  */\n      // stylelint-enable\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n    }\n  }\n}\n","// *************************************\n//\n// #OBJECTS-INPUT\n// -> Styles for form inputs\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n$_o-input-i: 0;\n$_o-input--radio-keyframe-generated: false;\n$_o-input--checkbox-keyframe-generated: false;\n\n/* ---\nsection: Form Inputs\ntitle: CSS Output\norder: #{$_o-input-i + 1}\n---\n```scss\n$o-input-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nicon classes and modifier classes.\n\n**Default:**\n```scss\n$o-input-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    raised: false,\n    large: false,\n    is-error: false,\n\n    select: false,\n    radio: false,\n    checkbox: false,\n  ),\n);\n```\n\n\n#### Elements\n```scss\n$o-input-item-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nform input classes and modifier classes.\n\n**Default:**\n$o-input-item-config: (\n  note: (\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n  label: (\n    no-breakpoint: (\n      no-modifier: true,\n    ),\n  ),\n);\n*/\n$_o-input-i: $_o-input-i + 1;\n\n\n/// Configuration map for enabling generation of\n/// icon classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-input-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    raised: false,\n\n    // Size modifiers\n    large: false,\n\n    // State modifiers\n    is-error: false,\n    is-disabled: false,\n\n    // Non-text form widgets\n    select: false,\n    radio: false,\n    checkbox: false,\n  ),\n) !default;\n\n\n/// Configuration map for enabling generation of\n/// form input classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-input-item-config: (\n  note: (\n    no-breakpoint: (\n      no-modifier: true,\n    ),\n  ),\n  label: (\n    no-breakpoint: (\n      no-modifier: true,\n    ),\n  ),\n) !default;\n\n\n\n/* ---\nsection: Form Inputs\ntitle: Configuration\norder: #{$_o-input-i + 1}\n---\n```scss\n$o-input--radio-color\n```\n\n\n**Type:** `Map`\n\nColor settings for radio button inputs.\n\n**Default:**\n```scss\n$o-input--radio-color: (\n  base: jigsass-color('border-neutral'),\n  focused: jigsass-color('border-accented' (jigsass-shade: 4)),\n  selected: jigsass-color:('primary'),\n);\n```\n\n\n```scss\n$o-input--checkbox-color\n```\n\n**Type:** `Map`\n\nColor settings for checkbox button inputs.\n\n**Default:**\n```scss\n$o-input--checkbox-color: (\n  base: jigsass-color('border-neutral'),\n  focused: jigsass-color('border-accented' (jigsass-shade: 4)),\n  selected: jigsass-color:('primary'),\n);\n```\n*/\n$_o-input-i: $_o-input-i + 1;\n\n/// Color settings for radio button inputs.\n/// ---\n/// @type Map\n/// ---\n$o-input--radio-color: (\n  base: jigsass-color('border-neutral'),\n  focused: jigsass-color('border-accented' (jigsass-shade: 4)),\n  selected: jigsass-color('primary'),\n) !default;\n\n\n\n/// Color settings for checkbox button inputs.\n/// ---\n/// @type Map\n/// ---\n$o-input--checkbox-color: (\n  base: jigsass-color('border-neutral-b'),\n  focused: jigsass-color('primary'),\n  selected: jigsass-color('primary'),\n) !default;\n\n\n\n\n\n// -------------------------------------\n// Base\n// -------------------------------------\n\n@include jigsass-object('o-input', $o-input-config) {\n  // Basic form input styling.\n  // ---\n  @include jigsass-classname {\n    appearance: none;\n    background-color: jigsass-color('bg-form');\n    border: 0;\n    border-radius: 0;\n    color: jigsass-color('primary');\n    transition: all get-anim($duration: 'short', $easing: 'swift-out');\n    vertical-align: middle;\n    width: 100%;\n\n    @include jigsass-rem(padding, jigsass-rhythm(.5, $unit: 'px') jigsass-rhythm(1, $unit: 'px'));\n    @include jigsass-border-bottom(1px, .5, dashed jigsass-color('quinary'));\n\n    @each $placeholder in\n      '::-webkit-input-placeholder' '::-moz-placeholder' ':ms-input-placeholder' '::placeholder'\n    {\n      &#{$placeholder} {\n        color: jigsass-color('primary');\n        opacity: 1;\n      }\n    }\n\n    &:focus {\n      background-color: jigsass-color('bg-accented');\n      border-bottom-color: jigsass-color('primary');\n      border-bottom-style: solid;\n      outline: none;\n      transtion-timing-function: get-anim($easing: 'swift-in');\n\n      @each $placeholder in\n        '::-webkit-input-placeholder' '::-moz-placeholder' ':ms-input-placeholder' '::placeholder'\n      {\n        &#{$placeholder} {\n          color: jigsass-color('text-pale');\n        }\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Form Inputs\ntitle: Base\norder: #{$_o-input-i + 1}\n\nA basic form input.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label>\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/\n      // stylelint-enable\n      $_o-input-i: $_o-input-i + 1;\n    }\n  }\n\n\n\n\n\n  // -------------------------------------\n  // Modifiers\n  // -------------------------------------\n\n  // Form fields that are elevated above their containers (have box-shadow)\n  // ---\n  @include jigsass-classname($modifier: 'raised') {\n    box-shadow: 0 2px 3px -2px rgba(#333, .5);\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Form Inputs\ntitle: Raised inputs\norder: #{$_o-input-i + 1}\n\nForm fields that are elevated above their containers (have box-shadow)\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label>\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input o-input--raised\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/\n      // stylelint-enable\n      $_o-input-i: $_o-input-i + 1;\n    }\n  }\n\n  // Larger (more spaced) form fields.\n  // ---\n  @include jigsass-classname($modifier: 'large') {\n    @include jigsass-rem(padding, jigsass-rhythm(1, $unit: 'px'));\n    @include jigsass-border-bottom(1px, 1, dashed jigsass-color('quinary'));\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Form Inputs\ntitle: Large inputs\norder: #{$_o-input-i + 1}\n\nLarger (more spaced) form fields.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label>\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/\n      // stylelint-enable\n      $_o-input-i: $_o-input-i + 1;\n    }\n  }\n\n\n  // Erronous inputs. Should be attached to the element wrapping the input,\n  // So that styling also affects notes.\n  // ---\n  @include jigsass-classname($modifier: 'is-error') {\n    *,\n    & *:focus,\n    & *,\n    &.o-input--select:after {\n      color: jigsass-color('negative');\n    }\n\n    & .o-input {\n      background-color: jigsass-color('negative' (jigsass-tint: 18));\n      border-bottom-color: jigsass-color('negative');\n      border-bottom-style: solid;\n\n      &:focus {\n        background-color: jigsass-color('negative' (jigsass-tint: 15));\n      }\n\n      @each $placeholder in (\n        '::-webkit-input-placeholder',\n        '::-moz-placeholder',\n        ':ms-input-placeholder',\n        '::placeholder',\n      ) {\n        &#{$placeholder},\n        &#{$placeholder}:focus {\n          color: jigsass-color('negative' (jigsass-tint: 4)) !important;\n        }\n      }\n    }\n\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Form Inputs\ntitle: Invalid input\norder: #{$_o-input-i + 1}\n\nIndicates an erronous form field.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label class=\"o-input--is-error\">\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/\n      // stylelint-enable\n      $_o-input-i: $_o-input-i + 1;\n    }\n  }\n\n  // Disabled inputs. Should be attached to the element wrapping the input,\n  // So that styling also affects notes.\n  // ---\n  @include jigsass-classname($modifier: 'is-disabled') {\n    *,\n    & *:focus,\n    & *,\n    &.o-input--select:after {\n      color: jigsass-color('disabled');\n      cursor: default;\n    }\n\n    & .o-input {\n      background-color: jigsass-color('disabled' (jigsass-tint: 18));\n      border-bottom-color: jigsass-color('disabled');\n\n      &:focus {\n        background-color: jigsass-color('disabled' (jigsass-tint: 18));\n        border-bottom-color: jigsass-color('disabled');\n      }\n\n      @each $placeholder in (\n        '::-webkit-input-placeholder',\n        '::-moz-placeholder',\n        ':ms-input-placeholder',\n        '::placeholder',\n      ) {\n        &#{$placeholder},\n        &#{$placeholder}:focus {\n          color: jigsass-color('disabled' (jigsass-tint: 4)) !important;\n        }\n      }\n    }\n\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Form Inputs\ntitle: disabled inputs\norder: #{$_o-input-i + 1}\n\nIndicates a disabled form field.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label class=\"o-input--is-disabled\">\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/\n      // stylelint-enable\n      $_o-input-i: $_o-input-i + 1;\n    }\n  }\n  // A styled select. Applied to the `select` element's container\n  // ---\n  // 1. Provide positioning context for arrow\n  // ---\n  @include jigsass-classname($modifier: 'select') {\n    position: relative; // [1]\n\n    // Arrow\n    &:after {\n      @include jigsass-bidi(end, jigsass-rhythm(1));\n\n      border: 1rem solid transparent;\n      border-top-color: currentColor;\n      color: jigsass-color('primary');\n      content: '';\n      display: inline-block;\n      height: 0;\n      pointer-events: none;\n      position: absolute;\n      top: 50%;\n      touch-events: none;\n      transform: translateY(-25%);\n      width: 0;\n\n      // IE 9 hack\n      @media screen and (min-width: 0\\0) {\n        display: none;\n      }\n\n      @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n        display: inline-block;\n      }\n    }\n\n    .o-input,\n    select {\n      @include jigsass-bidi(padding-end, jigsass-rhythm(2));\n\n      cursor: pointer;\n\n      &:-ms-expand {\n        display: none;\n      }\n    }\n\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Form Inputs\ntitle: Custom select\norder: #{$_o-input-i + 1}\n\nA styled select. Applied to the `select` element's container\n\n---\n#### Usage:\n```example:html\n<form>\n  <div class=\"o-input--select\">\n    <label>\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <select class=\"o-input\" aria-describesby=\"noteId\">\n        <option>select an option</option>\n        <option>Option 1</option>\n        <option>Option 2</option>\n        <option>Option 3</option>\n      </select>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/\n      // stylelint-enable\n      $_o-input-i: $_o-input-i + 1;\n    }\n  }\n\n  // A styled radio button. Applied to the radio-button element's\n  // container (Usually a `label` element)\n  // ---\n  @include jigsass-classname($modifier: 'radio') {\n    @include jigsass-bidi(padding-start, 1.2em);\n    cursor: pointer;\n    position: relative;\n\n    &,\n    & * {\n      -webkit-tap-highlight-color: transparent;\n\n      &:focus {\n        outline: none;\n      }\n    }\n\n    [type='radio'] {\n      @include jigsass-util('u-is-visually-hidden');\n\n      &:focus {\n        & ~ .o-input__label {\n          color: jigsass-color('text');\n        }\n      }\n    }\n\n    &__faux-check {\n      @include jigsass-bidi(start, 0);\n\n      background-color: transparent;\n      border: 2px solid;\n      color: map-get($o-input--radio-color, 'base');\n      content: '';\n      display: block;\n      height: 1em;\n      pointer-events: none;\n      top: 50%;\n      touch-events: none;\n      transform: translateY(-50%);\n      transition: all get-anim($duration: 'brief', $easing: 'swift-out');\n      width: 1em;\n\n      &,\n      &:before,\n      &:after {\n        border-radius: 50%;\n        content: '';\n        position: absolute;\n      }\n\n      &:after {\n        @include z-index('below');\n        background-color: map-get($o-input--radio-color, 'selected');\n        display: block;\n        height: 100%;\n        opacity: 0;\n        transform: scale(0);\n        transition: all get-anim($duration: 'short', $easing: 'swift-out');\n        width: 100%;\n      }\n\n      &:before {\n        @include z-index('below');\n        background-color: jigsass-color('disabled');\n        display: block;\n        height: 500%;\n        left: 50%;\n        opacity: 0;\n        top: 50%;\n        transform: translate(-50%, -50%) scale(0);\n        transition: all get-anim($duration: 'short', $easing: 'swift-out');\n        width: 500%;\n      }\n\n      :focus ~ & {\n        border-width: 3px;\n        color: map-get($o-input--radio-color, 'focused');\n\n        &:before {\n          animation: o-input--radio-in-out get-anim($duration: 'mid') linear;\n        }\n      }\n\n      :checked ~ & {\n        color: map-get($o-input--radio-color, 'selected');\n\n        &:after {\n          opacity: 1;\n          transform: scale(.6);\n        }\n      }\n    }\n\n    @if (not $_o-input--radio-keyframe-generated) {\n      @at-root (without: all) {\n        @keyframes o-input--radio-in-out {\n          0% {\n            opacity: 0;\n            transform: translate(-50%, -50%) scale(0);\n          }\n\n          50% {\n            opacity: .5;\n          }\n\n          70% {\n            transform: translate(-50%, -50%) scale(1);\n          }\n\n          100% {\n            opacity: 0;\n            transform: translate(-50%, -50%) scale(0);\n          }\n        }\n      }\n    }\n\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Form Inputs\ntitle: Custom radio button\norder: #{$_o-input-i + 1}\n\nA styled radio button. Applied to the radio-button element's\ncontainer (Usually a `label` element)\n\n---\n#### Usage:\n```example:html\n<form>\n    <label class=\"o-input--radio\" for=\"radio1\">\n      <input id=\"radio1\" class=\"u-is-visually-hidden\" type=\"radio\" name=\"radio1\">\n      <span class=\"o-input__label\">לייבל 1</span>\n      <span class=\"o-input--radio__fuax-check\" aria-hidden=\"true\"></span>\n    </label>\n    <label class=\"o-input--radio\" for=\"radio2\">\n      <input id=\"radio2\" class=\"u-is-visually-hidden\" type=\"radio\" name=\"radio2\">\n      <span class=\"o-input__label\">לייבל 2</span>\n      <span class=\"o-input--radio__fuax-check\" aria-hidden=\"true\"></span>\n    </label>\n</form>\n```\n*/\n      // stylelint-enable\n      $_o-input-i: $_o-input-i + 1;\n    }\n  }\n\n  // A styled checkbox button. Applied to the checkbox-button element's\n  // container (Usually a `label` element)\n  // ---\n  @include jigsass-classname($modifier: 'checkbox') {\n    @include jigsass-bidi(padding-start, 1.2em);\n    cursor: pointer;\n    position: relative;\n\n    &,\n    & * {\n      outline: none;\n      -webkit-tap-highlight-color: transparent;\n\n      &:focus {\n        outline: none;\n      }\n    }\n\n    [type='checkbox'] {\n      @include jigsass-util('u-is-visually-hidden');\n\n      &:focus {\n        & ~ .o-input__label {\n          color: jigsass-color('text');\n        }\n      }\n    }\n\n    &__faux-check {\n      @include jigsass-bidi(start, 0);\n\n      background-color: transparent;\n      border: 2px solid;\n      color: map-get($o-input--checkbox-color, 'base');\n      height: 1em;\n      pointer-events: none;\n      top: 50%;\n      touch-events: none;\n      transform: translate(10%, -50%);\n      transition: all get-anim($duration: 'short', $easing: 'swift-in');\n      width: 1em;\n\n      &,\n      &:before,\n      &:after {\n        content: '';\n        display: block;\n        position: absolute;\n      }\n\n      &:after {\n        border-style: solid;\n        @include jigsass-bidi(border-end-style, none);\n        border-top-style: none;\n        border-width: 2px;\n        height: 110%;\n        transform: scale(0) translate(-30%, -15%) rotate(0);\n        transition: all get-anim($duration: 'short', $easing: 'swift-in');\n        width: 50%;\n      }\n\n      &:before {\n        background-color: jigsass-color('disabled');\n        border-radius: 50%;\n        height: 500%;\n        left: 50%;\n        opacity: 0;\n        top: 50%;\n        transform: translate(-50%, -50%) scale(0);\n        width: 500%;\n      }\n\n      :focus ~ & {\n        color: map-get($o-input--checkbox-color, 'focused');\n\n        &:before {\n          animation: o-input--radio-in-out get-anim($duration: 'mid') linear;\n        }\n      }\n\n      :checked ~ & {\n        background-color: jigsass-color('disabled');\n        color: jigsass-color('disabled');\n\n        &:after {\n          border-color: jigsass-color('primary');\n          transform: scale(1) translate(-30%, -15%) rotate(45deg);\n        }\n      }\n    }\n\n    @if (not $_o-input--radio-keyframe-generated) {\n      @at-root (without: all) {\n        @keyframes o-input--radio-in-out {\n          0% {\n            opacity: 0;\n            transform: translate(-50%, -50%) scale(0);\n          }\n\n          50% {\n            opacity: .5;\n          }\n\n          70% {\n            transform: translate(-50%, -50%) scale(1);\n          }\n\n          100% {\n            opacity: 0;\n            transform: translate(-50%, -50%) scale(0);\n          }\n        }\n      }\n    }\n\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Form Inputs\ntitle: Custom checkbox button\norder: #{$_o-input-i + 1}\n\nA styled checkbox button. Applied to the checkbox-button element's\ncontainer (Usually a `label` element)\n\n---\n#### Usage:\n```example:html\n<form>\n    <label class=\"o-input--checkbox\" for=\"checkbox1\">\n      <input id=\"checkbox1\" class=\"u-is-visually-hidden\" type=\"checkbox\" name=\"checkbox1\">\n      <span class=\"o-input__label\">לייבל 1</span>\n      <span class=\"o-input--checkbox__fuax-check\" aria-hidden=\"true\"></span>\n    </label>\n    <label class=\"o-input--checkbox\" for=\"checkbox2\">\n      <input id=\"checkbox2\" class=\"u-is-visually-hidden\" type=\"checkbox\" name=\"checkbox2\">\n      <span class=\"o-input__label\">לייבל 2</span>\n      <span class=\"o-input--checkbox__fuax-check\" aria-hidden=\"true\"></span>\n    </label>\n</form>\n```\n*/\n      // stylelint-enable\n      $_o-input-i: $_o-input-i + 1;\n    }\n  }\n\n  // A button-like on-off toggle\n  // ---\n  @include jigsass-classname($modifier: 'on-off') {\n    &,\n    & * {\n      outline: none;\n      -webkit-tap-highlight-color: transparent;\n\n      &:focus {\n        outline: none;\n      }\n    }\n\n    &__input {\n      @include jigsass-util('u-is-visually-hidden');\n    }\n\n    &__input:focus ~ &__faux-btn,\n    &__faux-btn:hover {\n      background-color: jigsass-color('bg-accented');\n      color: jigsass-color('text');\n    }\n\n    &__faux-btn {\n      background-color: jigsass-color('bg');\n      border-color: jigsass-color('primary');\n      color: jigsass-color('primary');\n      position: relative;\n      transition: all get-anim($duration: 'mid', $easing: 'swift-out');\n\n      .o-input--on-off__input:checked ~ & {\n        background-color: jigsass-color('primary');\n        color: jigsass-color('text-inverse');\n        transition: all get-anim($duration: 'mid', $easing: 'swift-in');\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Form Inputs\ntitle: On-off toggle\norder: #{$_o-input-i + 1}\n\nA button-like on-off toggle. Works with radio buttons and checkboxes alike.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div class=\"o-input--on-off\">\n    <input id=\"onOff\" class=\"o-input--on-off__input u-is-visually-hidden\" type=\"checkbox\" name=\"onOff\">\n    <label class=\"o-input--on-off__faux-btn [ o-btn o-btn--outline ]=\"onOff\">\n      הדלק אותי\n    </label>\n  </div>\n</form>\n```\n*/\n      // stylelint-enable\n      $_o-input-i: $_o-input-i + 1;\n    }\n  }\n\n}\n\n\n\n\n\n// -------------------------------------\n// Items\n// -------------------------------------\n\n// A form input's annotation.\n// ---\n@include jigsass-object('o-input__note', map-get($o-input-item-config, note)) {\n  @include jigsass-classname {\n    color: jigsass-color('text-pale');\n\n    .o-input--is-error & {\n      color: jigsass-color('negative');\n    }\n\n    .o-input--is-disabled & {\n      color: jigsass-color('text-muted');\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Form Inputs\ntitle: Input note\norder: #{$_o-input-i + 1}\n\nA form input's annotation.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label>\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/\n      // stylelint-enable\n      $_o-input-i: $_o-input-i + 1;\n    }\n  }\n}\n\n// A form input's label\n// ---\n@include jigsass-object('o-input__label', map-get($o-input-item-config, label)) {\n  @include jigsass-classname {\n    color: jigsass-color('text-pale');\n    cursor: pointer;\n\n    .o-input--is-error & {\n      color: jigsass-color('negative');\n    }\n\n    .o-input--is-disabled & {\n      color: jigsass-color('text-muted');\n      cursor: default;\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Form Inputs\ntitle: Input label\norder: #{$_o-input-i + 1}\n\nA form input's annotation.\n\n---\n#### Usage:\n```example:html\n<form>\n  <div>\n    <label>\n      <span class=\"o-input__label\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n\n<p>Or:</p>\n\n<form>\n  <div>\n    <label>\n      <span class=\"o-input__label u-d--b\">לייבל לשדה</span>\n      <input type=\"text\" placeholder=\"ערכים לדוגמא\"  class=\"o-input\" aria-describesby=\"noteId\"/>\n    </label>\n    <p id=\"noteId\" class=\"o-input__notes\">הערות לשדה</p>\n  </div>\n</form>\n```\n*/\n      // stylelint-enable\n      $_o-input-i: $_o-input-i + 1;\n    }\n  }\n}\n","// *************************************\n//\n// #OBJECTS-DIALOG\n// -> Styles dialogs and modals\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n$_o-dialog-keyframe-generated: false;\n$_o-dialog-i: 0;\n\n/* ---\nsection: Dialogs\ntitle: CSS Output\norder: #{$_o-dialog-i + 1}\n---\n```scss\n$o-dialog-wrapper-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and modifier classes.\n\n**Default:**\n```scss\n$o-dialog-wrapper-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    anim: false,\n  ),\n);\n```\n\n```scss\n$o-dialog-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and modifier classes.\n\n**Default:**\n```scss\n$o-dialog-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n$_o-dialog-i: $_o-dialog-i + 1;\n\n\n/// Configuration map for enabling generation of\n/// icon classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-dialog-wrapper-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    anim: false,\n  ),\n) !default;\n\n\n/// Configuration map for enabling generation of\n/// icon classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-dialog-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n) !default;\n\n\n/* ---\nsection: Dialogs\ntitle: Configuration\norder: #{$_o-dialog-i + 1}\n---\n\nBy default the `dialog` object only sets minimal styling, leaving dialog look\nand feel as flexible as possible. Additional style can be set though configuration maps.\n\n#### dialog-wrapper\n```scss\n$o-dialog-wrapper-styles\n```\n\nSets the non structural styles of the `o-dialog-wrapper` class.\n\n**Type**: `Map`\n\n**Default:**\n```scss\n$o-dialog-wrapper-styles: (\n  'background-color': jigsass-color('bg-dialog-overlay'),\n);\n```\n\n#### dialog\n```scss\n$o-dialog-styles\n```\n\nSets the non structural styles of the `o-dialog` class.\n\n**Type**: `Map`\n\n**Default:**\n```scss\n$o-dialog-wrapper-styles: (\n  'background-color': jigsass-color('bg'),\n);\n```\n\n#### Dialog Animation\n```scss\n$o-dialog-animation\n```\n\nSets the `o-dialog` keyframe animation used in the `o-dialog-wrapper--anim`\nand `o-dialog--anim` classes.\n\n**Type**: `Map`\n\n**Default:**\n```scss\n$o-dialog-animation: (\n  0%: (\n    display: none,\n    opacity: 0,\n  ),\n\n  1%: (\n    display: block,\n    opacity: 0,\n    transform: translate(-50%, -50%) scale(0),\n  ),\n\n  25%: (\n    transform: translate(-50%, -50%) scale(1),\n  ),\n\n  100%: (\n    opacity: 1,\n    transform: translate(-50%, -50%) scale(1),\n  ),\n);\n```\n\n\n#### Animated Dialog Modifier Styles\n```scss\n$o-dialog-anim-mods\n```\n\nSets the styling of the `o-dialog-wrapper--anim` and `o-dialog--anim` modifiers.\n\n**Type**: `Map`\n\n**Default:**\n```scss\n$o-dialog-anim-mods: (\n  animation: o-dialog get-anim($duration: 'long', $easing: 'swift-out') forwards,\n  transform: translate(-50%, -50%) scale(0),\n);\n```\n*/\n$_o-dialog-i: $_o-dialog-i + 1;\n\n\n/// Sets the non structural styles of the `o-dialog-wrapper` class.\n$o-dialog-wrapper-styles: (\n  'background-color': jigsass-color('bg-dialog-overlay'),\n) !default;\n\n/// Sets the non structural styles of the `o-dialog` class.\n$o-dialog-styles: (\n  'background-color': jigsass-color('bg'),\n) !default;\n\n/// Sets the styling of the `o-dialog-wrapper--anim` and `o-dialog--anim` modifiers.\n$o-dialog-anim-mods: (\n  'animation': o-dialog get-anim($duration: 'long', $easing: 'swift-out') forwards,\n  'transform': translate(-50%, -50%) scale(0),\n) !default;\n\n/// Keyframe animation for dialog windows\n$o-dialog-animation: (\n  0%: (\n    'display': none,\n    'opacity': 0,\n  ),\n\n  1%: (\n    'display': block,\n    'opacity': 0,\n    'transform': translate(-50%, -50%) scale(0),\n  ),\n\n  25%: (\n    'transform': translate(-50%, -50%) scale(1),\n  ),\n\n  100%: (\n    'opacity': 1,\n    'transform': translate(-50%, -50%) scale(1),\n  ),\n) !default;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object('o-dialog-wrapper', $o-dialog-wrapper-config) {\n  // Dialog-wrapper overlay\n  // 1. Stretch to container's dimensions\n  // 2. Better rendering of translated contet.\n  // 3. Match presentation and semantics.\n  // ---\n  @include jigsass-classname {\n    @include z-index('modal');\n\n    bottom: 0;  // [1]\n    cursor: pointer;\n    height: 100%; // [1]\n    left: 0;  // [1]\n    position: absolute; // [1]\n    right: 0; // [1]\n    top: 0; // [1]\n    transform-style: preserve-3d; // [2]\n    width: 100%; // [1]\n\n    &[aria-hidden='true'] {\n      display: none; // [3]\n    }\n\n\n    @include jigsass-map2styles($o-dialog-wrapper-styles);\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Dialogs\ntitle: Wrapper\norder: #{$_o-dialog-i + 1}\n---\n#### .o-dialog-wrapper\nA wrapper for dialog element(s). Used as an overlay to hide the content\nconcealed by the dialog. Extend with a `u-pos--f` class to turn a dialog\ninto a modal.\n\n#### Usage:\n```html\n<div class='u-pos--r'>\n  <div id=\"conceal\">\n    <!-- CONTENT -->\n  </div>\n\n  <div id=\"dialog\"\n      class='o-dialog-wrapper'\n      data-htz-dialog-elem-to-hide='conceal'\n      data-htz-dialog-hide\n      tabindex='-1'\n      aria-hidden='true'>\n\n    <!-- DIALOG CONTENT -->\n\n  </div>\n```\n*/\n      // stylelint-enable\n      $_o-dialog-i: $_o-dialog-i + 1;\n    }\n  }\n\n  // A dialog-wrapper in which dialog windows are transitioned in.\n  @include jigsass-classname($modifier: 'anim') {\n    @at-root {\n      $wrapper-selector: _jigsass-gen-class-name(\n        $name: 'o-dialog-wrapper',\n        $from: jigsass-get-obj-mq($type: from),\n        $until: jigsass-get-obj-mq($type: until),\n        $misc: jigsass-get-obj-mq($type: misc),\n        $modifier: $jigsass-obj-modifier\n      );\n      $dialog-selector: _jigsass-gen-class-name(\n        $name: 'o-dialog',\n        $from: jigsass-get-obj-mq($type: from),\n        $until: jigsass-get-obj-mq($type: until),\n        $misc: jigsass-get-obj-mq($type: misc),\n        $modifier: $jigsass-obj-modifier\n      );\n\n      .#{$wrapper-selector} > .o-dialog,\n      .#{$dialog-selector} {\n        @include jigsass-map2styles($o-dialog-anim-mods);\n      }\n    }\n\n    @at-root (without: all) {\n      @if (length($o-dialog-animation) > 0 and not $_o-dialog-keyframe-generated) {\n        @keyframes o-dialog {\n          @include jigsass-map2styles($o-dialog-animation);\n        }\n\n        $_o-dialog-keyframe-generated: true !global;\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Dialogs\ntitle: Animated dialogs\norder: #{$_o-dialog-i + 1}\n---\n#### .o-dialog-wrapper--anim\nA dialog-wrapper in which which dialog windows are transitioned in.\nAlso produces the `.o-dialog--anim`, which can be attached to individual\ndialogs within any dialog wrapper, so that they are transitioned in.\n\n#### Usage:\n```html\n<div class='u-pos--r'>\n  <div id=\"conceal\">\n    <!-- CONTENT -->\n  </div>\n\n  <div id=\"dialog\"\n      class='o-dialog-wrapper o-dialog-wrapper--anim'\n      data-htz-dialog-elem-to-hide='conceal'\n      data-htz-dialog-hide\n      tabindex='-1'\n      aria-hidden='true'>\n\n    <!-- DIALOG CONTENT -->\n\n  </div>\n```\n*/\n      // stylelint-enable\n      $_o-dialog-i: $_o-dialog-i + 1;\n    }\n  }\n}\n\n\n@include jigsass-object('o-dialog', $o-dialog-config) {\n  // A dialog window\n  // 1. Position at center of positioning context.\n  // 4. Prevent dialog from exceeding the height of its parent\n  // 3. Match presentation and semantics.\n  @include jigsass-classname {\n    @include jigsass-bidi(start, 50%); // [1]\n\n    cursor: default;\n    max-height: 90%; // [2]\n    overflow: auto; // [2]\n    position: absolute; // [1]\n    top: 50%; // [1]\n    transform: translate(-50%, -50%); // [1]\n\n    &:focus {\n      outline: none;\n    }\n\n    &[aria-hidden='true'],\n    [aria-hidden='true'] > & {\n      display: none; // [3]\n    }\n\n    @include jigsass-map2styles($o-dialog-styles);\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Dialogs\ntitle: Dialog window\norder: #{$_o-dialog-i + 1}\n---\n#### .o-dialog\nA dialog window.\n\n#### Usage:\n```html\n\n  <div id=\"dialog\"\n      class='o-dialog-wrapper o-dialog-wrapper--anim'\n      data-htz-dialog-elem-to-hide='conceal'\n      data-htz-dialog-hide\n      tabindex='-1'\n      aria-hidden='true'>\n\n    <div class=\"dialog\" role=\"dialog\">\n      <h3>Dialog titles</h3>\n      <p>Dialog textual content with a <a href=\"#!\">link</a> and some text.</p>\n    </div>\n\n  </div>\n```\n*/\n      // stylelint-enable\n      $_o-dialog-i: $_o-dialog-i + 1;\n    }\n  }\n}\n","// *************************************\n//\n// #DIALOG-OBJECT-SETTINGS\n// -> Settings for dialog and modal windows\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// Sets the non structural styles of the `o-dialog-wrapper` class.\n$o-dialog-wrapper-styles: (\n  'background-color': jigsass-color('bg-dialog-overlay'),\n);\n\n// Sets the non structural styles of the `o-dialog` class.\n$o-dialog-styles: (\n  'background-color': jigsass-color('bg'),\n  'box-shadow': 0 0 25px rgba(jigsass-color('black'), 0.8),\n);\n\n// Sets the styling of the `o-dialog-wrapper--anim` and `o-dialog--anim` modifiers.\n$o-dialog-anim-mods: (\n  'animation': o-dialog get-anim($duration: 'long', $easing: 'swift-out') forwards,\n  'transform': translate(-50%, -50%) scale(0),\n  'transfors': perspective(1px) translate3d(-50%, -50%, 0) scale3d(0, 0, 1),\n);\n\n// Keyframe animation for dialog windows\n$o-dialog-animation: (\n  0%: (\n    'display': none,\n    'opacity': 0,\n  ),\n\n  1%: (\n    'display': block,\n    'opacity': 0,\n    'transform': translate(-50%, -50%) scale(0),\n    'transfors': perspective(1px) translate3d(-50%, -50%, 0) scale3d(0, 0, 1),\n  ),\n\n  25%: (\n    'transform': translate(-50%, -50%) scale(1),\n    'transfors': perspective(1px) translate3d(-50%, -50%, 0) scale3d(1, 1, 1),\n  ),\n\n  100%: (\n    'opacity': 1,\n    'transform': translate(-50%, -50%) scale(1),\n    'transfors': perspective(1px) translate3d(-50%, -50%, 0) scale3d(1, 1, 1),\n  ),\n);\n","// *************************************\n//\n// #OBJECTS-DROPDOWN\n// -> Styles for dropdowns\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n$_o-dropdown-i: 0;\n\n/* ---\nsection: Dropdowns\ntitle: CSS Output\norder: #{$_o-dropdown-i + 1}\n---\n```scss\n$o-dropdown-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and modifier classes.\n\n**Default:**\n```scss\n$o-dropdown-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    up: false,\n  ),\n);\n```\n\n\n```scss\n$o-dropdown-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof dropdown item classes and modifier classes.\n\n**Default:**\n```scss\n$o-dropdown-item-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n$_o-dropdown-i: $_o-dropdown-i + 1;\n\n\n/// Configuration map for enabling generation of\n/// dropdown classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-dropdown-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    up: false,\n  ),\n) !default;\n\n\n/// Configuration map for enabling generation of\n/// dropdown item classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-dropdown-item-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n) !default;\n\n\n\n/* ---\n *\nsection: Dropdowns\ntitle: Configuration\norder: #{$_o-dropdown-i + 1}\n---\n\nBy default the `dropdown` object only sets minimal styling for structure, leaving look and\nfeel as flexible as possible. Additional style can be set though configuration maps.\n\n#### Dropdown items\n```scss\n$o-dropdown-item-styles\n```\n\nSets the non structural styles of `o-dropdown__item`s.\n\n**Type**: `Map`\n\n**Default:**\n```scss\n$o-dropdown-item-styles: (\n  no-modifier: ();\n);\n```\n*/\n$_o-dropdown-i: $_o-dropdown-i + 1;\n\n\n/// Sets the non structural styles of the `o-dropdown__item` class.\n$o-dropdown-item-styles: (\n  no-modifier: (),\n) !default;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object('o-dropdown', $o-dropdown-config) {\n  // A dropdown menu\n  // 1. Remove from the general layout context\n  // 2. Prevent lines of text from breaking.\n  // 3. Match presentation and semantics.\n  // ---\n  @include jigsass-classname {\n    position: absolute; // [1]\n    white-space: nowrap; // [2]\n\n    &[aria-hidden='true'] {\n      display: none; // [3]\n    }\n\n\n\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Dropdowns\ntitle: Base\norder: #{$_o-dropdown-i + 1}\n---\n#### .o-dropdown\nA dropdown element. Must have an `aria-hidden` property by default.\n\n#### Usage:\n```example:html\n<div id=\"dropdown\" class='u-pos--r'>\n  <button class=\"js-dropdown__toggle [ o-btn o-btn--primary ]\">menu</button>\n\n  <ul aria-hidden='true' class=\"js-dropdown__menu o-dropdown o-list-bare\">\n    <li><a href=\"#!\" class=\"o-dropdown__item\">Item 1</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 2</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 3</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 4</a></li>\n  </ul>\n</div>\n```\n*/\n      // stylelint-enable\n      $_o-dropdown-i: $_o-dropdown-i + 1;\n    }\n  }\n\n  // A dropdown that opens above its container.\n  @include jigsass-classname($modifier: 'up') {\n    top: 0;\n    transform: translateY(-100%);\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Dropdowns\ntitle: Drop up\norder: #{$_o-dropdown-i + 1}\n---\n#### .o-dropdown--up\nA dropdown that opens above its container.\n\n#### Usage:\n```example:html\n<div id=\"dropdown\" class='u-pos--r'>\n  <button class=\"js-dropdown__toggle [ o-btn o-btn--primary ]\">menu</button>\n\n  <ul aria-hidden='true' class=\"js-dropdown__menu o-dropdown o-list-bare\">\n    <li><a href=\"#!\" class=\"o-dropdown__item\">Item 1</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 2</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 3</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 4</a></li>\n  </ul>\n</div>\n```\n*/\n      // stylelint-enable\n      $_o-dropdown-i: $_o-dropdown-i + 1;\n    }\n  }\n}\n\n\n@include jigsass-object('o-dropdown__item', $o-dropdown-item-config) {\n  // A dropdown item, usually the clickable element, not the ul\n  // ---\n  @include jigsass-classname {\n    display: block;\n    width: 100%;\n\n    @include jigsass-map2styles(map-get($o-dropdown-item-styles, no-modifier));\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Dropdowns\ntitle: Dropdown Item\norder: #{$_o-dropdown-i + 1}\n---\n#### .o-dropdown__item\nA dropdown item. Should, in most cases, be assigned to a clickable element,\nnot the `li` itself.\n\n#### Usage:\n```example:html\n<div id=\"dropdown\" class='u-pos--r'>\n  <button class=\"js-dropdown__toggle [ o-btn o-btn--primary ]\">menu</button>\n\n  <ul aria-hidden='true' class=\"js-dropdown__menu o-dropdown o-list-bare\">\n    <li><a href=\"#!\" class=\"o-dropdown__item\">Item 1</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 2</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 3</a></li>\n    <li><a href=\"#!\" class=\"js-dropdown__menu o-dropdown o-list-bare\">Item 4</a></li>\n  </ul>\n</div>\n```\n*/\n      // stylelint-enable\n      $_o-dropdown-i: $_o-dropdown-i + 1;\n    }\n  }\n}\n\n","// *************************************\n//\n// #DROPDOWN-OBJECT-SETTINGS\n// -> Settings for dropdown and modal windows\n//\n// *************************************\n/* stylelint-disable indentation */\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// Sets the non structural styles of the `o-dropdown__item` class.\n$o-dropdown-item-styles: (\n  no-modifier: (\n    background-color: jigsass-color('bg'),\n     box-shadow: 0 4px 5px -2px rgba(#333, .5),\n    color: jigsass-color('primary'),\n    transition: all get-anim('short', 'swift-out'),\n\n    '&:focus, &:hover': (\n      background-color: jigsass-color('primary'),\n      color: jigsass-color('bg'),\n    ),\n  ),\n);\n","// *************************************\n//\n// #OBJECTS-ADVERT\n// -> Styling for advertisements and\n//    their containers\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// Used internally for sorting doclets.\n$_o-advert-i: 0;\n\n/* ---\nsection: Adverts\ntitle: CSS Output\norder: #{$_o-advert-i}\n---\n#### Base and general modifiers\n```scss\n$o-ad-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and stylistic modifier classes\n\n**Default:**\n```scss\n$o-ad-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    has-label: false,\n    has-bg: false,\n  ),\n);\n```\n\n\n#### Sizing modifiers\n\n```scss\n$o-ad-sizes-config\n```\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof ad size modifier classes.\n\n**Default:**\n```scss\n$o-ad-sizes-config: (\n  no-breakpoint: (\n    '1280-200': false,\n    '980-190': false,\n    '970-90': false,\n    '970-250': false,\n    '728-90': false,\n    '468-60': false,\n    '320-50': false,\n    '300-600': false,\n    '300-250': false,\n    '160-600': false,\n    '120-240': false,\n  ),\n);\n```\n*/\n$_o-advert-i: $_o-advert-i + 1;\n\n\n/// Configuration map for enabling generation\n/// of classes and stylistic modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-ad-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    has-label: false,\n    has-bg: false,\n  ),\n) !default;\n\n/// Configuration map for enabling generation\n/// of ad size modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-ad-sizes-config: (\n  no-breakpoint: (\n    '1280-200': false,\n    '980-190': false,\n    '970-90': false,\n    '970-250': false,\n    '728-90': false,\n    '468-60': false,\n    '320-50': false,\n    '300-600': false,\n    '300-250': false,\n    '160-600': false,\n    '120-240': false,\n  ),\n) !default;\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n@include jigsass-object(o-ad, jigsass-deep-merge($o-ad-sizes-config, $o-ad-config)) {\n  // Basic ad container\n  // ---\n  // 1. Normalize adverts' box model and center content.\n  // ---\n  @include jigsass-classname {\n    div,\n    iframe {\n      display: block; // [1]\n      margin: 0 auto; // [1]\n      padding: 0; // [1]\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Adverts\ntitle: Ad wrapper\norder: #{$_o-advert-i}\n---\nAn ad wrapper that normalizes adverts' box model an centers them.\n\n#### Usage:\n```html\n<div class=\"o-ad\">\n  <iframe src='my-advert'><iframe/>\n</div>\n```\n*/\n      // stylelint-enable\n      $_o-advert-i: $_o-advert-i + 1;\n    }\n  }\n\n\n  // ----- Modifiers ----- //\n  // An advert width a `פרסומת` label above of it\n  @include jigsass-classname($modifier: has-label) {\n    &:before {\n      @include jigsass-font-size(milli);\n      @include jigsass-font-size(micro, $bps: xl);\n\n      color: jigsass-color('text-pale');\n      content: '\\2014\\00a0 פרסומת \\2014';\n      display: block;\n      text-align: center;\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Adverts\ntitle: Labeled Ad\norder: #{$_o-advert-i}\n---\nAn advert width a `פרסומת` label above of it\n\n#### Usage:\n```example:html\n<div class=\"o-ad o-ad--has-label\">\n  <div style=\"width: 300px; height: 250px; backgound-color: #ccc;\"></div>\n</div>\n```\n*/\n      // stylelint-enable\n      $_o-advert-i: $_o-advert-i + 1;\n    }\n  }\n\n  // An advert that is contained within a visible box\n  @include jigsass-classname($modifier: has-bg) {\n    background-color: jigsass-color('bg-neutral');\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Adverts\ntitle: Has Background\norder: #{$_o-advert-i}\n---\nAn advert that is contained within a visible box\n\n#### Usage:\n```example:html\n<div class=\"o-ad o-ad--has-bg\">\n  <div style=\"width: 300px; height: 250px; background-color: #f04;\"></div>\n</div>\n```\n*/\n      // stylelint-enable\n      $_o-advert-i: $_o-advert-i + 1;\n    }\n  }\n\n\n  // ----- Sizing modifiers ----- //\n  $active-sizes: ();\n\n  @each $bp-name, $values in $o-ad-sizes-config {\n    $bp: map-get($o-ad-sizes-config, $bp-name);\n    $sizes: map-keys($bp);\n\n    @each $size in $sizes {\n      @if (map-get($bp, $size) and not index($active-sizes, $size)) {\n        $active-sizes: append($active-sizes, $size);\n      }\n    }\n  }\n\n  @each $size in $active-sizes {\n    $dimensions: jigsass-str-split($size, '-');\n\n    @include jigsass-classname($modifier: $size) {\n      div,\n      iframe {\n        height: unquote(nth($dimensions, 2)) + px;\n        width: unquote(nth($dimensions, 1)) + px;\n      }\n\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n        // stylelint-disable\n  /* ---\n  section: Adverts\n  title: $size\n  order: #{$_o-advert-i}\n  ---\n  A size modifier that sets the advert's wrapper to a width of #{nth($dimensions, 2)} and\n  a height of #{nth($dimensions, 1)} in order to prevent reflows.\n\n  #### Usage:\n  ```example:html\n  <div class=\"o-ad o-ad--#{$size}\">\n    <div style=\"background-color: #f04;\">\n      <iframe src='my-advert'><iframe/>\n    </div>\n  </div>\n  ```\n  */\n        // stylelint-enable\n        $_o-advert-i: $_o-advert-i + 1;\n      }\n    }\n  }\n}\n","// *************************************\n//\n// #OBJECTS-BLOCK-LINK\n// -> Blocky links that occupy their\n//    container's entire area\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n$_o-block-link-i: 0;\n\n/* ---\nsection: Block Link\ntitle: CSS Output\norder: #{$_o-block-link-i + 1}\n---\n```scss\n$o-block-link-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and modifier classes.\n\n**Default:**\n```scss\n$o-block-link-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n$_o-block-link-i: $_o-block-link-i + 1;\n\n\n/// Configuration map for enabling generation of\n/// icon classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-block-link-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n) !default;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n//\n@include jigsass-object(o-block-link, $o-block-link-config) {\n  // A link that covers its container's entire area,\n  // making the entire ui element clickable\n  //\n  // Wrapper element must be relatively positioned.\n  // ---\n  // 1. Place above container's main content,\n  //    but bellow clickable sub elements (`.block-link__sub`)\n  // 2. Make sure that the content beneath the\n  //    block link is visible while maintaining\n  //    clickability.\n  // 3. Cover container's entire area.\n  // ---\n  @include jigsass-classname {\n    @include z-index('base');   // [1]\n\n    background: transparent;    // [2]\n    bottom: 0;                  // [3]\n    left: 0;                    // [3]\n    margin: 0;\n    opacity: 0;                 // [2]\n    position: absolute;         // [1, 3]\n    right: 0;                   // [3]\n    top: 0;                     // [3]\n\n    @at-root {\n      $o-block-link__raised: _jigsass-gen-class-name(\n        $name: 'o-block-link__raised',\n        $from: jigsass-get-obj-mq($type: from),\n        $until: jigsass-get-obj-mq($type: until),\n        $misc: jigsass-get-obj-mq($type: misc),\n        $modifier: ''\n      );\n      // Clickable elements inside the same container\n      // ---\n      // as the block-link.\n      // 1. Position above the block-link to allow\n      //    independent clickability.\n      // 2. Give element positioning context, in order to\n      // ---\n      .#{$o-block-link__raised} {\n        @include z-index('above');  // [1]\n        position: relative;         // [2]\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n\n      // stylelint-disable\n/* ---\nsection: Block Link\ntitle: base\norder: #{$_o-block-link-i + 1}\n---\nA link that covers its container's entire area,\nmaking the entire ui element clickable\n\nWrapper element must be relatively positioned.\n\n#### Usage:\n```example:html\n<article class=\"u-pos--r\">\n  <img src=\"https://unsplash.it/1920/800?random\"\n       alt=\"A random placeholder image\" />\n  <a href=\"#!\">\n  <h1 class=\"u-type--gamma\">A clickable element</h1>\n  </a>\n  <a href=\"#!\" class=\"o-block-link\" tabindex=\"-1\"></a>\n</article>\n```\n*/\n\n/* ---\nsection: Block Link\ntitle: Raised elements\norder: #{$_o-block-link-i + 1}\n---\nClickable elements inside the same container\n\n#### Usage:\n```example:html\n<article class=\"u-pos--r\">\n  <a href=\"#!\">\n  <img src=\"https://unsplash.it/1920/800?random\"\n       alt=\"A random placeholder image\"\n       class=\"o-block-link__raised\"\n       title=\"The title is visible because of the `o-block-link__raised` class\"/>\n  </a>\n\n  <a href=\"#!\">\n  <h1 class=\"u-type--gamma\">A clickable element</h1>\n  </a>\n  <p><a href=\"#!\" class=\"o-block-link__raised\">A nested link</a></p>\n  <a href=\"#!\" class=\"o-block-link\" tabindex=\"-1\"></a>\n</article>\n```\n*/\n      // stylelint-enable\n      $_o-block-link-i: $_o-block-link-i + 1;\n    }\n  }\n}\n\n","// *************************************\n//\n// #BREADCRUMBS-SETTINGS\n// -> Settings for breadcrumbs objectis\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// A map of styles to use for styling items' `:after`\n// pseudo element and separate between items.\n// ---\n// @type Boolean|Map\n// ---\n$o-crumbs-separator: (\n  content: '\\0020/\\0020',\n  display: inline-block,\n  margin-left: 1rem,\n  margin-right: 1rem,\n);\n","// *************************************\n//\n// #BREADCRUMBS\n// -> An visual representation of\n//    a page's place in the site's\n//    hierarchy\n//\n////\n/// @group Breadcrumbs\n////\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/* ---\nsection: Breadcrumbs\ntitle: Configuration\norder: 2\n---\n#### Separator Styles\n\n```scss\n$o-crumbs-separator\n```\n\n\n**Type:** `Boolean` or `Map`\n\n\nA map of styles to use for styling items' `:after`\npseudo element and separate between items.\n\n**Default:** `false`\n\n\n**Example:**\n```scss\n$o-crumbs-separator: (\n  content: '\\0020/\\0020',\n  display: inline-block,\n  margin-left: 1rem,\n  margin-right: 1rem,\n);\n```\n*/\n/// A map of styles to use for styling items' `:after`\n/// pseudo element and separate between items.\n/// ---\n/// @type Boolean|Map\n/// ---\n$o-crumbs-separator: false !default;\n\n\n/* ---\nsection: Breadcrumbs\ntitle: CSS Output\norder: 1\n---\n```scss\n$o-crumbs-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nbreadcrumbs classes and modifier classes.\n\n**Default:**\n```scss\n$o-crumbs-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n/// Configuration map for enabling generation of\n/// breadcrumbs classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-crumbs-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n) !default;\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n// @example:html\n// <ol vocab=\"https://schema.org/\"\n//     typeof=\"BreadcrumbList\"\n//     class=\"o-crumbs o-inline-list u-type--micro u-fw--700\">\n//   <li property=\"itemListElement\" typeof=\"ListItem\" class=\"o-crumbs__item\">\n//     <a property=\"item\" typeof=\"WebPage\" href=\"#!\">\n//       <span property=\"name\">{{ section1 }}</span>\n//     </a>\n//     <meta property=\"position\" content=\"1\">\n//   </li><li property=\"itemListElement\" typeof=\"ListItem\" class=\"o-crumbs__item\">\n//     <a property=\"item\" typeof=\"WebPage\" href=\"#!\">\n//       <span property=\"name\">{{ section2 }}</span>\n//     </a>\n//     <meta property=\"position\" content=\"2\">\n//   </li>\n// </ol>\n@include jigsass-object('o-crumbs', $o-crumbs-config) {\n  @include jigsass-classname {\n    @include jigsass-util(u-fw, $modifier: 700);\n\n    @if ($o-crumbs-separator) {\n      > *:not(:last-child):after {\n        @include jigsass-map2styles($o-crumbs-separator);\n      }\n    }\n\n    > * {\n      &:nth-child(odd) {\n        color: jigsass-color('primary');\n      }\n\n      &:hover > a,\n      &:focus > a {\n        border-bottom: 2px solid;\n      }\n    }\n    // stylelint-disable\n/* ---\nsection: Breadcrumbs\ntitle: base\norder: 3\n---\n```example:html\n<ol vocab=\"https://schema.org/\"\n    typeof=\"BreadcrumbList\"\n    class=\"o-crumbs o-inline-list u-fw--700\">\n  <li property=\"itemListElement\" typeof=\"ListItem\" class=\"o-crumbs__item\">\n    <a property=\"item\" typeof=\"WebPage\" href=\"#!\">\n      <span property=\"name\">עכבר</span>\n    </a>\n    <meta property=\"position\" content=\"1\">\n  </li><li property=\"itemListElement\" typeof=\"ListItem\" class=\"o-crumbs__item\">\n    <a property=\"item\" typeof=\"WebPage\" href=\"#!\">\n      <span property=\"name\">העיר</span>\n    </a>\n    <meta property=\"position\" content=\"2\">\n  </li>\n</ol>\n```\n*/\n    // stylelint-enable\n  }\n}\n\n\n\n\n\n// -------------------------------------\n// Modifiers\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Items\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// States\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Context\n// -------------------------------------\n\n//\n\n\n\n\n\n","// *************************************\n//\n// #OBJECTS-ICONS\n// -> Styles for svg icons\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n$_icons-i: 0;\n\n/* ---\nsection: Icons\ntitle: CSS Output\norder: #{$_icons-i + 1}\n---\n```scss\n$o-icn-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nicon classes and modifier classes.\n\n**Default:**\n```scss\n$o-icn-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n$_icons-i: $_icons-i + 1;\n\n\n/// Configuration map for enabling generation of\n/// icon classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-icn-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n) !default;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n//\n@include jigsass-object(o-icn, $o-icn-config) {\n  // Basic inline icon\n  // 1. Sizing through font-size.\n  // 2. Better alignment of icons alongside text.\n  // ---\n  @include jigsass-classname {\n    height: 1em; // [1]\n    vertical-align: -0.15em;\n    width: 1em; // [1]\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n\n      // Prepare html snippet for legend.\n      $files: listFiles('images/svg/src');\n      // stylelint-disable\n      $html: '<style>html{direction:ltr !important}ul{margin:0 -2rem}li{background-color: #fff;color: #444;display: inline-block;margin: 2rem 2rem 0;padding: 1rem 1rem 0;text-align: center;}svg {height: 7rem;width: 7rem;}.demo-icon-name {background-color: #ccc;font-family: monospace;font-weight: 700;margin: 1rem -1rem 0;padding: 0 1rem;}.demo-logo--2lines{width:16rem;color: #{jigsass-color(primary)}}.demo-logo--1line{width:30rem;color: #{jigsass-color(primary)}</style>\n<ul>';\n      // stylelint-enable\n\n      @each $path, $file in $files {\n        @if (str-slice($file, -4) != html) {\n          $file: str-slice($file, 1, -5);\n          $icon-snippet: '\n  <li title=\"#{$file}\">\n    <svg class=\"demo-#{$file}\"><use xlink:href=\"assets/sprite.svg#{'#' + $file}\"></use></svg>\n    <h3 class=\"demo-icon-name\">#{$file}</h3>\n  </li>';\n\n          $html: $html + $icon-snippet;\n        }\n      }\n\n      $html: $html + '\n</ul>';\n\n      // stylelint-disable\n/* ---\nsection: Icons\ntitle: o-icn\norder: #{$_icons-i + 1}\n---\n#### Usage:\n```html\n<svg class=\"o-icn [ modifier classes ]\">\n  <title>Optional title for accesibility</title>\n  <use xlink:href=\"#icn-name\"></use>\n</svg>\n```\n\n#### Icon Accesibility\n\nThere are a few possible solutions for icon accessibility, depending on the\ncontext in which they are used.\n\nFirst, if we don’t want to add any alt text (either because there’s already\nrelevant text alongside the icons (e.g., as is often the case with buttons),\nthe `aria-hidden=\"true\"` attribute should be added to the icon, in order to\nmake sure screen readers don’t try reading the icon out loud:\n\n```html\n<button class=\"js-facebook-share  [ o-btn o-btn--facebook ]\">\n  <svg aria-hidden=\"true\" class=\"o-icn\">\n    <use xlink:href=\"#icon-facebook\"></use>\n  </svg>\n  Share on Facebook\n</button>\n```\nWhen there is a link or a button containing only an icon, use the `aria-label`\nattribute, preferably on the interactive element (`<a>` or `<button>`), as some\nscreen readers will ignore the `aria-label` attribute on non-interactive\nelements:\n\n```html\n<button\n        class=\"js-facebook-share  [ o-btn o-btn--facebook ]\"\n        aria-label=\"Share on Facebook\">\n  <svg aria-hidden=\"true\" class=\"o-icn\">\n    <use xlink:href=\"#icon-facebook\"></use>\n  </svg>\n```\n\nAnother option is using the `<title>` element. It’s especially useful outside of\ninteractive elements (where aria-label might not be read by some screen\nreaders). For instance, if you show yes/no markers in a table column, you could have:\n\n```html\n<td>\n  <svg class=\"o-icn\">\n    <title>Yes</title>\n    <use xlink:href=\"#tick\"></use>\n  </svg>\n</td>\n```\n</div>\n\n\n#### Icon Legend\n\n```exampl:html\n#{$html}\n```\n*/\n      // stylelint-enable\n      $_icons-i: $_icons-i + 1;\n    }\n  }\n}\n","// *************************************\n//\n// #OBJECTS-KICKER\n// -> Styles for headline kickers\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n$_o-kicker-i: 0;\n\n/* ---\nsection: Kicker\ntitle: CSS Output\norder: #{$_o-kicker-i + 1}\n---\n```scss\n$o-kicker-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and modifier classes.\n\n**Default:**\n```scss\n$o-kicker-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n$_o-kicker-i: $_o-kicker-i + 1;\n\n\n/// Configuration map for enabling generation of\n/// icon classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-kicker-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n) !default;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n//\n@include jigsass-object(o-kicker, $o-kicker-config) {\n  // Basic kicker\n  // ---\n  @include jigsass-classname {\n    color: jigsass-color('secondary');\n    display: inline;\n\n    &:after {\n      @include jigsass-rem(padding, 0 jigsass-rhythm(0.5, $unit: 'px'));\n\n      color: jigsass-color('text-muted');\n      content: '/';\n      display: inline-block;\n      font-weight: 400;\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n\n      // stylelint-disable\n/* ---\nsection: Kicker\ntitle: Inline Kicker\norder: #{$_o-kicker-i + 1}\n---\nA kicker element to accompany healines.\n\n#### Usage:\n```example:html\n<h1 class=\"u-type--beta\">\n  <span class=\"o-kicker\">כותרת גג</span> טקסט כותרת ראשית\n</h1>\n```\n*/\n      // stylelint-enable\n      $_o-kicker-i: $_o-kicker-i + 1;\n    }\n  }\n}\n","// *************************************\n//\n// #OBJECTS-ASPECT-RATIO\n// -> Intrinsic ratio containers.\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n$_aspect-ratio-i: 0;\n\n/* ---\nsection: Aspect Ratio Containers\ntitle: CSS Output\norder: #{$_aspect-ratio-i}\n---\n```scss\n$o-aspect-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\naspect ratio container classes and modifier classes.\n\n**Default:**\n```scss\n$o-aspect-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    headline: false,\n    regular: false,\n    landscape: false,\n    square: false,\n    vertical: false,\n  ),\n);\n```\n*/\n$_aspect-ratio-i: $_aspect-ratio-i + 1;\n\n\n\n/* ---\nsection: Aspect Ratio Containers\ntitle: Config\norder: #{$_aspect-ratio-i}\n---\n```scss\n$o-aspect-ratios\n```\n\n\n**Type:** `Map`\n\nNamed aspect ratios\n\nA map of named aspect ratios and their values\n\n**Default:**\n```scss\n$o-aspect-config: (\n  no-breakpoint: (\n    // base\n    no-modifier: false,\n\n    // ratios\n    headline: false,\n    regular: false,\n    landscape: false,\n    square: false,\n    vertical: false,\n\n    // context\n    has-embed: false,\n  ),\n);\n```\n*/\n$_aspect-ratio-i: $_aspect-ratio-i + 1;\n\n/// Configuration map for enabling generation of\n/// aspect ratio container classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-aspect-config: (\n  no-breakpoint: (\n    // base\n    no-modifier: false,\n\n    // ratios\n    headline: false,\n    regular: false,\n    landscape: false,\n    square: false,\n    vertical: false,\n\n    // context\n    has-embed: false,\n  ),\n) !default;\n\n\n/// Named aspect ratios\n///\n/// A map of named aspect ratios and their values\n/// ---\n/// @type Map\n/// ---\n$o-aspect-ratios: (\n  headline: 16 / 9,\n  regular: 4 / 3,\n  landscape: 2.3,\n  square: 1 / 1,\n  vertical:  0.85,\n) !default;\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object(o-aspect, $o-aspect-config) {\n  // Basic styles for setting intrinsic ratio containers\n  // Should be extended in the html with ratio modifiers.\n  // ---\n  // 1. Allows us to set intrinsic ratio using `padding-bottom`.\n  // 2. Hide overflowing elements.\n  // 3. Provide positioning context for embedded elements.\n  // ---\n  @include jigsass-classname {\n    height: 0; // [1]\n    overflow: hidden; // [2]\n    position: relative; // [3]\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Aspect Ratio Containers\ntitle: Base\norder: #{$_aspect-ratio-i}\n---\nBasic styles for setting intrinsic ratio containers.\nTo set an aspect ratio on an element, the `o-aspect`\nclass Should be extended with ratio modifiers in the html.\n\n\n#### Usage:\n```html\n<div class=\"o-aspect <modifier>\">\n</div>\n```\n*/\n      // stylelint-enable\n      $_aspect-ratio-i: $_aspect-ratio-i + 1;\n    }\n  }\n\n  // Create aspect ratio modifiers\n  @each $name, $ratio in $o-aspect-ratios {\n    @include jigsass-classname($modifier: $name) {\n      $ratio: map-get($o-aspect-ratios, $jigsass-obj-modifier);\n\n      padding-bottom: (1 / $ratio) * 100%;\n\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n        // stylelint-disable\n/* ---\nsection: Aspect Ratio Containers\ntitle: #{$jigsass-obj-modifier} ratio modifier\norder: #{$_aspect-ratio-i}\n---\nSet the intrinsic ratio of a container to a fluid height that\nis #{(1 / $ratio) * 100%} of its width.\n\n#### Usage:\n```example:html\n<div class=\"o-aspect o-aspect--#{$jigsass-obj-modifier}\"\n     style=\"background-color:#{jigsass-color(primary)};\">\n  <h3 style=\"color: #fff; left: 50%; position: absolute; top: 50%; transform: translate(-50%, -50%)\">\n  An intrinsic ratio container with '<code>#{$jigsass-obj-modifier}</code>' aspect ratio.\n  </h3>\n</div>\n```\n*/\n        // stylelint-enable\n        $_aspect-ratio-i: $_aspect-ratio-i + 1;\n      }\n    }\n  }\n  @include jigsass-classname($modifier: has-embed) {\n    // Stretch child elements to size of container.\n    // All style carry `!important` so that they can override inline styling\n    // ---\n    // 1. Ensure the child element's dimensions can be set.\n    // 2. Stretch child element to container dimensions.\n    // 3. Remove all spacing.\n    // ---\n    > * {\n      display: block !important; // [1]\n      height: 100% !important; // [2]\n      left: 0 !important; // [2]\n      margin: 0 !important; // [3]\n      padding: 0 !important; // [3]\n      position: absolute !important; // [2]\n      top: 0 !important; // [2]\n      width: 100% !important; // [2]\n\n      $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n        // stylelint-disable\n/* ---\nsection: Aspect Ratio Containers\ntitle: Intrinsic ratio embeds\norder: #{$_aspect-ratio-i}\n---\nStretch child elements to the dimensions of of the intrinsic ratio container.\n\n#### Usage:\n```example:html\n<div class=\"o-aspect o-aspect--#{$jigsass-obj-modifier}\" style=\"padding-bottom: 56.25%\">\n  <iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/3fRIUnKJk1w\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n```\n*/\n        // stylelint-enable\n        $_aspect-ratio-i: $_aspect-ratio-i + 1;\n      }\n    }\n  }\n}\n","// *************************************\n//\n// #OBJECTS-EMBED\n// -> Fluid embedded content\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n$_o-embed-i: 0;\n\n/* ---\nsection: Fluid Embeds\ntitle: CSS Output\norder: #{$_o-embed-i}\n---\n```scss\n$o-embed-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of\nclasses and modifier classes.\n\n**Default:**\n```scss\n$o-embed-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n$_o-embed-i: $_o-embed-i + 1;\n\n\n/// Configuration map for enabling generation of\n/// aspect ratio container classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-embed-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n) !default;\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object(o-embed, $o-embed-config) {\n  // Basic styles for stretching embedded objects to the\n  // width of their container\n  // ---\n  // 1. Hide overflowing elements.\n  // 2. Ensure the child element's dimensions can be set.\n  // 3. Stretch or limit embedded element to container width.\n  // ---\n  @include jigsass-classname {\n    overflow: hidden; // [1]\n\n    > * {\n      display: block; // [2]\n      max-width: 100% !important; // [3]\n      width: 100% !important; // [3]\n    }\n\n    > script {\n      display: none;\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Fluid Embeds\ntitle: Embed container\norder: #{$_o-embed-i}\n---\n<strong>.o-embed</strong>\n\nStyles for either stretching embedded content to the width of\nits container, if it is too narrow, or limit its width, when too\nwide, so that it does not break the layout.\n\n\n#### Usage:\n```html\n<div class=\"o-embed\">\n  <iframe style=\"width: 250px; height: 400px; bacground-color: #ccc;\" src\"...\"></iframe>\n</div>\n```\n*/\n      // stylelint-enable\n      $_o-embed-i: $_o-embed-i + 1;\n    }\n  }\n}\n","// *************************************\n//\n// #OBJECTS-COLLAPSIBLES\n// -> Collapsible panels\n//\n////\n/// @group Collapsibles\n////\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n\n// Used internally for sorting doclets.\n$_collapsibles-i: 0;\n\n\n/* ---\nsection: Collapsibles\ntitle: CSS Output\norder: #{$_collapsibles-i}\n---\n```scss\n$o-collapsibles-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation of classes,\nmodifier classes, state classes and item classes.\n\n**Default:**\n```scss\n$o-collapsibles-config: (\n  o-collapsible-is-collapsed: (\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n  o-collapsible-is-expanded: (\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n  o-collapsible__toggle: (\n    no-breakpoint: (\n      no-modifier: false,\n      b: false,\n    ),\n  ),\n  o-collapsible__content: (\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n);\n```\n*/\n$_collapsibles-i: $_collapsibles-i + 1;\n\n/// Configuration map for enabling generation of classes,\n/// modifier classes, state classes and item classes.\n/// ---\n/// @type Map\n/// ---\n$o-collapsibles-config: (\n  o-collapsible-is-collapsed: (\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n  o-collapsible-is-expanded: (\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n  o-collapsible__toggle: (\n    no-breakpoint: (\n      no-modifier: false,\n      b: false,\n    ),\n  ),\n  o-collapsible__content: (\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n) !default;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n// A collapsible element's toggle button\n// Extends `o-btn` and often a button color modifier in the markup.\n@include jigsass-object(\n  o-collapsible__toggle,\n  map-get($o-collapsibles-config, o-collapsible__toggle)\n) {\n  @include jigsass-classname {\n    height: jigsass-rhythm(6);\n    position: relative;\n    width: jigsass-rhythm(6);\n\n    &:after,\n    &:before {\n      background-color: currentColor;\n      content: '';\n      font-size: jigsass-rhythm(1);\n      left: 50%;\n      position: absolute;\n      top: 50%;\n      transition: height get-anim($duration: brief, $easing: swift-in),\n        transform get-anim($duration: brief, $easing: swift-in),\n        width get-anim($duration: brief, $easing: swift-in);\n    }\n\n    &:before {\n      height: jigsass-rhythm(.5);\n      transform: translate(-50%, -50%) rotate(0) scaleY(1);\n      width: jigsass-rhythm(3);\n    }\n\n    &:after {\n      height: jigsass-rhythm(3);\n      transform: translate(-50%, -50%) rotate(0) scaleY(0);\n      width: jigsass-rhythm(.5);\n    }\n\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Collapsibles\ntitle: Toggle element\norder: #{$_collapsibles-i}\n---\nA collapsible element's toggle button\nExtends `o-btn` and often a button color modifier in the markup.\n\nAccessibility text is handled by the `htz-collapsibles` javascript module. Must carry the\n`js-collapsible__toggle` class as a jvascript hook.\n\n#### Usage:\n```html\n<button class=\"js-collapsible__toggle o-collapsible__toggle\n              [ o-btn o-btn--<color-modifier ]\"             >\n</button>\n```\n*/\n      // stylelint-enable\n      $_collapsibles-i: $_collapsibles-i + 1;\n    }\n  }\n\n  // A text-based toggle element drawing content from data attributes\n  @include jigsass-classname($modifier: 'b') {\n    &:before {\n      content: attr(data-collapsed-content);\n\n      .o-collapsible-is-expanded & {\n        content: attr(data-expanded-content);\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Collapsibles\ntitle: Toggle element b\norder: #{$_collapsibles-i}\n---\nA collapsible element's text-based toggle element drawing content from data attributes\n\nText is derived from the `data-collapsed-contnt` attribute for the collapsed state and the\n`data-expanded-content` attribute for the expanded state\n\nAccessibility text is handled by the `htz-collapsibles` javascript module.\nMust be a descendant of an element carrying the `js-collapsible__toggle` class as a jvascript hook.\n\n#### Usage:\n```html\n<button class=\"js-collapsible__toggle>\n  <span aria-hidden=\"true\" data-collapsed-content=\"expand +\" data-expanded-content=\"collapse -\"></span>\n</button>\n```\n*/\n      // stylelint-enable\n      $_collapsibles-i: $_collapsibles-i + 1;\n\n    }\n  }\n}\n\n\n// A collapsible element's content block\n// 1. Set up collapsing animation.\n// ---\n@include jigsass-object(\n  o-collapsible__content,\n  map-get($o-collapsibles-config, o-collapsible__content)\n) {\n  @include jigsass-classname {\n    max-height: 20000px; // [1]\n    overflow: hidden;\n    transform-origin: 0 0;  // [1]\n    transition: all get-anim($duration: brief, $easing: swift-out); // [1]\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Collapsibles\ntitle: Content element\norder: #{$_collapsibles-i}\n---\nA collapsible element's content block\n\nMust carry the `js-collapsible__content` class as a jvascript hook.\n\n#### Usage:\n```html\n<div class=\"js-collapsible__content o-collapsible__content\">\n<!-- content here -->\n</div>\n```\n*/\n      // stylelint-enable\n      $_collapsibles-i: $_collapsibles-i + 1;\n    }\n  }\n}\n\n\n// A collapsible element in its collapsed state. Set on the wrapper.\n// Can be limited to specific breakpoints using responsive modifiers.\n//\n// ---\n// 1. Change button state.\n// 2. Hide content visibly.\n// 3. Hide content from screen readers.\n// 4. Disable collapsing if javascript not enabled.\n// ---\n@include jigsass-object(\n  o-collapsible-is-collapsed,\n  map-get($o-collapsibles-config, o-collapsible-is-collapsed)\n) {\n  @include jigsass-classname {\n    & > * > .o-collapsible__toggle,\n    & > .o-collapsible__toggle {\n      &:before,\n      &:after {\n        transform: translate(-50%, -50%) rotate(-180deg) scaleY(1); // [1]\n      }\n    }\n\n    & > .o-collapsible__content {\n      margin: 0; // [2]\n      max-height: 0; // [2]\n      padding-bottom: 0; // [2]\n      padding-top: 0; // [2]\n      transform: scaleY(0); // [2]\n      visibility: hidden; // [3]\n\n      // [4]\n      .no-js & {\n        max-height: 20000px;\n        transform: scaleY(1);\n        visibility: visible;\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Collapsibles\ntitle: Collapsed State\norder: #{$_collapsibles-i}\n---\nA collapsible element in its collapsed state. Set on the wrapper.\nCan be limited to specific breakpoints using responsive modifiers.\n\nElement must also have the `js-collapsible` class.\n\n\n#### Usage:\n```html\n<section class=\"js-collapsible o-collapsible o-collapsible-is-collapsed--until-l\"\n         data-collapsible-bps=\"until-tiny, medium-until-large, x-large\">\n  <h3 class=\"o-collapsible__content\">\n    <!-- Sction title here -->\n\n    <button class=\"js-collapsible__toggle o-collapsible__toggle\n                  [ o-btn o-btn--<color-modifier> ]\"             >\n    </button>\n  </h3>\n  <div class=\"js-collapsible__content o-collapsible__content\">\n  <!-- content here -->\n  </div>\n```\n*/\n      // stylelint-enable\n      $_collapsibles-i: $_collapsibles-i + 1;\n    }\n  }\n}\n\n\n// A collapsible element in its expanded state. Set on the wrapper.\n// Can be limited to specific breakpoints using responsive modifiers.\n//\n// ---\n// 1. Change button state.\n// 2. Reveal content visibly.\n// 3. Reveal content to screen readers.\n// ---\n@include jigsass-object(\n  o-collapsible-is-expanded,\n  map-get($o-collapsibles-config, o-collapsible-is-expanded)\n) {\n  @include jigsass-classname {\n    & > .o-collapsible__toggle,\n    & > * > .o-collapsible__toggle {\n      &:before {\n        transform: translate(-50%, -50%) rotate(0) scaleY(1); // [1]\n      }\n\n      &:after {\n        transform: translate(-50%, -50%) rotate(0) scaleY(0); // [1]\n      }\n    }\n\n    & > .o-collapsible__content {\n      transform: scaleY(1); // [2]\n      visibility: visible; // [3]\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Collapsibles\ntitle: Expanded State\norder: #{$_collapsibles-i}\n---\nA collapsible element in its expanded state. Set on the wrapper.\nCan be limited to specific breakpoints using responsive modifiers.\n\nElement must also have the `js-collapsible` class.\n\n\n#### Usage:\n```html\n<section class=\"js-collapsible o-collapsible o-collapsible-is-expanded\"\n         data-collapsible-bps=\"until-tiny, medium-until-large, x-large\">\n  <h3 class=\"o-collapsible__content\">\n    <!-- Sction title here -->\n\n    <button class=\"js-collapsible__toggle o-collapsible__toggle\n                  [ o-btn o-btn--<color-modifier> ]\"             >\n    </button>\n  </h3>\n  <div class=\"js-collapsible__content o-collapsible__content\">\n  <!-- content here -->\n  </div>\n```\n*/\n      // stylelint-enable\n      $_collapsibles-i: $_collapsibles-i + 1;\n    }\n  }\n}\n","// *************************************\n//\n// #OBJECTS-SECTION-HEAD\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n$_o-sec-head-i: 0;\n\n/* ---\nsection: Section Head\ntitle: CSS Output\norder: #{$_o-sec-head-i + 1}\n---\n#### BASE\n```scss\n$o-sec-head-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes and modifier classes.\n\n**Default:**\n```scss\n$o-sec-head-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    b: false,\n  ),\n);\n```\n\n#### Items\n```scss\n$o-sec-head-items-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof item classes and modifier classes.\n\n**Default:**\n```scss\n$o-sec-head-items-config: (\n  links(\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n);\n```\n*/\n$_o-sec-head-i: $_o-sec-head-i + 1;\n\n\n/// Configuration map for enabling generation of\n/// classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-sec-head-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    b: false\n  ),\n) !default;\n\n/// Configuration map for enabling generation of\n/// item classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-sec-head-items-config: (\n  links: (\n    no-breakpoint: (\n      no-modifier: false,\n    ),\n  ),\n) !default;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object(o-sec-head, $o-sec-head-config) {\n  @include jigsass-classname {\n    @include jigsass-util('u-d', $modifier: 'ib'); // <- On heading\n    @include jigsass-border-bottom(1px, 1, solid jigsass-color('border-accented'));\n\n    // date\n    @include jigsass-util('u-c', $modifier: 'text-pale');\n    @include jigsass-util('u-type', $modifier: 'epsilon');\n\n    // dateicker\n    @include jigsass-util('u-c', $modifier: 'primary');\n    @include jigsass-util('u-d', $modifier: 'ib');\n    @include jigsass-util('u-ph', $modifier: 1);\n\n    align-items: baseline;\n    color: jigsass-color('primary');\n    display: flex;\n    justify-content: space-between;\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n\n      // stylelint-disable\n/* ---\nsection: Section Head\ntitle: base\norder: #{$_o-sec-head-i + 1}\n---\nA section head.\n\n#### Usage:\n```example:html\n<h2 class=\"o-sec-head u-type--epsilon\">\n  שם של מדור\n</h2>\n```\n*/\n      // stylelint-enable\n      $_o-sec-head-i: $_o-sec-head-i + 1;\n    }\n  }\n\n  @include jigsass-classname($modifier: 'b') {\n    @include jigsass-border-bottom(1px, 1, solid jigsass-color('primary'));\n\n    color: jigsass-color('text');\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n\n      // stylelint-disable\n/* ---\nsection: Section Head\ntitle: base\norder: #{$_o-sec-head-i + 1}\n---\nA darker section head\n\n#### Usage:\n```example:html\n<h2 class=\"o-sec-head o-sec-head--b u-type--epsilon\">\n  שם של מדור\n</h2>\n```\n*/\n      // stylelint-enable\n      $_o-sec-head-i: $_o-sec-head-i + 1;\n    }\n  }\n}\n\n\n// Links related to a section head.\n@include jigsass-object(o-sec-head__links, map-get($o-sec-head-items-config, links)) {\n  @include jigsass-classname {\n    @include jigsass-util('u-ms', $modifier: 1);\n    @include jigsass-util('u-type', $modifier: 'milli');\n\n    color: jigsass-color('text-pale');\n    display: inline-block;\n\n    a:hover,\n    a:focus,\n    a:active  {\n      box-shadow: inset 0 -3px 0 0 jigsass-color('link' (jigsass-tint: 15));  // [1]\n      color: jigsass-color('link');\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n\n      // stylelint-disable\n/* ---\nsection: Section Head\ntitle: Related links\norder: #{$_o-sec-head-i + 1}\n---\n\nLinks related to a section head.\n\nRequire the container to be relatively positioned.\n\n#### Usage:\n```example:html\n<h2 class=\"o-sec-head u-type--epsilon u-pos--r\">\n  שם של מדור\n  <ul class=\"[ o-inline-list o-inline-list--delimited ] o-sec-head__links  u-type--micro\">\n    <li><a href=\"#!\">לינק ראשון</a></li>\n    <li><a href=\"#!\">לינק שני</a></li>\n  <ul>\n</h2>\n```\n*/\n      // stylelint-enable\n      $_o-sec-head-i: $_o-sec-head-i + 1;\n    }\n  }\n}\n","// *************************************\n//\n// #OBJECTS-TAG\n//\n////\n/// @group Tag\n////\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n\n// Used internally for sorting doclets.\n$_o-tag-i: 0;\n\n\n/* ---\nsection: Tag\ntitle: CSS Output\norder: #{$_o-tag-i}\n---\n```scss\n$o-tag-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof classes, and modifier classes.\n\n**Default:**\n```scss\n$o-tag-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n$_o-tag-i: $_o-tag-i + 1;\n\n/// Configuration map for enabling generation\n/// of classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-tag-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n) !default;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n// A simple tag element\n@include jigsass-object(o-tag, $o-tag-config) {\n  @include jigsass-classname {\n    @include jigsass-bidi(margin-end, jigsass-rhythm(1));\n    @include jigsass-rem(padding, 0 jigsass-rhythm(1));\n    @include jigsass-rem(margin-bottom, jigsass-rhythm(1));\n\n    background-color: jigsass-color('bg-accented' (jigsass-tint: 6));\n    border-radius: 2px;\n    transition: background-color get-anim($duration: short, $easing: swift-out);\n\n    &:hover,\n    &:focus,\n    &:active {\n      background-color: jigsass-color('bg-accented');\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Tag\ntitle: Base\norder: #{$_o-tag-i}\n---\nAn element in an itemized list of topics\n\n#### Usage:\n```example:html\n<div class=\"o-inline-list\">\n  <h5>תגיות</h5>\n  <ul class=\"o-inline-list\">\n    <li class=\"o-tag\"><a href=#!>תגית 1</a></li>\n    <li class=\"o-tag\"><a href=#!>תגית 2</a></li>\n    <li class=\"o-tag\"><a href=#!>תגית 3</a></li>\n    <li class=\"o-tag\"><a href=#!>תגית 4</a></li>\n    <li class=\"o-tag\"><a href=#!>תגית 5</a></li>\n  </ul>\n\n</div>\n```\n*/\n      // stylelint-enable\n      $_o-tag-i: $_o-tag-i + 1;\n    }\n  }\n}\n","// *************************************\n//\n// #OBJECTS TABS\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// Used internally for sorting doclets.\n$_o-tabpanel-keyframe-generated: false;\n$_o-tabs-i: 0;\n\n/* ---\nsection: Tabs\ntitle: CSS Output\norder: #{$_o-tabs-i}\n---\n#### Tablist containers\n```scss\n$o-tabs-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof tablist classes, and modifier classes.\n\n**Default:**\n```scss\n$o-tabs-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n\n\n#### Individual Tabs\n```scss\n$o-tab-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof tab classes, and modifier classes.\n\n**Default:**\n```scss\n$o-tab-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    tight: false,\n  ),\n);\n```\n\n\n#### Tab Panels\n```scss\n$o-tabpanel-config\n```\n\n\n**Type:** `Map`\n\nConfiguration map for enabling generation\nof tabpanel classes, and modifier classes.\n\n**Default:**\n```scss\n$o-tabpanel-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n);\n```\n*/\n$_o-tabs-i: $_o-tabs-i + 1;\n\n/// Configuration map for enabling generation\n/// of tablist classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-tabs-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n) !default;\n\n\n/// Configuration map for enabling generation\n/// of tab classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-tab-config: (\n  no-breakpoint: (\n    no-modifier: false,\n    tight: false,\n  ),\n) !default;\n\n\n/// Configuration map for enabling generation\n/// of tabpanel classes and modifier classes.\n/// ---\n/// @type Map\n/// ---\n$o-tabpanel-config: (\n  no-breakpoint: (\n    no-modifier: false,\n  ),\n) !default;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-object(o-tabs, $o-tabs-config) {\n  @include jigsass-classname {\n    @include jigsass-border-bottom(jigsass-rhythm(1, $unit: 'rem'));\n\n    color: jigsass-color('primary');\n    font-weight: 700;\n    white-space: nowrap;\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: tabs\ntitle: Tab List\norder: #{$_o-tabs-i}\n---\nAn element containing tabs\n\n#### Usage:\n```example:html\n<section id=\"tabs\">\n  <h5>טאבים</h5>\n  <ul class=\"o-inline-list o-tabs\" role=\"tablist\">\n    <li class=\"o-tab\" role=\"presentation\">\n      <a href=\"#tabpanel1\" role=\"tab\" aria-controls=\"tabpanel1\" aria-selected=\"true\">טאב 1</a>\n    </li>\n    <li class=\"o-tab\" role=\"presentation\">\n      <a href=\"#tabpanel2\" role=\"tab\" aria-controls=\"tabpanel2\">טאב 2</a>\n    </li>\n  </ul>\n\n  <section id=\"tabpanel1\" class=\"o-tabpanel\" role=\"tabpanel\" >טאב פעיל</section>\n  <section id=\"tabpanel2\" class=\"o-tabpanel\" role=\"tabpanel\" aria-hidden=\"true\">טאב לא פעיל</section>\n</section>\n```\n*/\n      // stylelint-enable\n      $_o-tabs-i: $_o-tabs-i + 1;\n    }\n  }\n}\n\n\n@include jigsass-object(o-tab, $o-tab-config) {\n  @include jigsass-classname {\n    > a,\n    > button {\n      @include jigsass-rem(\n        padding,\n        jigsass-rhythm(.5, $unit: 'rem') jigsass-rhythm(1, $unit: 'rem')\n      );\n      display: block;\n      transition: all get-anim($duration: 'mid', $easing: 'swift-out');\n\n      @include jigsass-mq($from: 's') {\n        @include jigsass-rem(\n          padding,\n          jigsass-rhythm(.5, $unit: 'rem') jigsass-rhythm(2, $unit: 'rem')\n        );\n      }\n\n\n      &:hover,\n      &:focus,\n      &:active {\n        background-color: jigsass-color('bg');\n        outline: none;\n      }\n\n      &[aria-selected='true'] {\n        background-color: jigsass-color('primary');\n        color: jigsass-color('text-inverse');\n\n        &:focus {\n          background-color: jigsass-color('quinary');\n          color: jigsass-color('text');\n        }\n      }\n    }\n\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: tabs\ntitle: Tab\norder: #{$_o-tabs-i}\n---\nAn individual tab in a tablist\n\n#### Usage:\n```example:html\n<section id=\"tabs\">\n  <h5>טאבים</h5>\n  <ul class=\"o-inline-list o-tabs\" role=\"tablist\">\n    <li class=\"o-tab\" role=\"presentation\">\n      <a href=\"#tabpanel1\" role=\"tab\" aria-controls=\"tabpanel1\" aria-selected=\"true\">טאב 1</a>\n    </li>\n    <li class=\"o-tab\" role=\"presentation\">\n      <a href=\"#tabpanel2\" role=\"tab\" aria-controls=\"tabpanel2\">טאב 2</a>\n    </li>\n  </ul>\n\n  <section id=\"tabpanel1\" class=\"o-tabpanel\" role=\"tabpanel\" >טאב פעיל</section>\n  <section id=\"tabpanel2\" class=\"o-tabpanel\" role=\"tabpanel\" aria-hidden=\"true\">טאב לא פעיל</section>\n</section>\n```\n*/\n      // stylelint-enable\n      $_o-tabs-i: $_o-tabs-i + 1;\n    }\n  }\n\n  @include jigsass-classname($modifier: 'tight') {\n    > a,\n    > button {\n      @include jigsass-mq($from: 's') {\n        @include jigsass-rem(\n          padding,\n          jigsass-rhythm(.5, $unit: 'rem') jigsass-rhythm(1, $unit: 'rem')\n        );\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: tabs\ntitle: Tightly padded tab\norder: #{$_o-tabs-i}\n---\nA more tightly padded individual tab in a tablist\n\n#### Usage:\n```example:html\n<section id=\"tabs\">\n  <h5>טאבים</h5>\n  <ul class=\"o-inline-list o-tabs\" role=\"tablist\">\n    <li class=\"o-tab o-tab--tight\" role=\"presentation\">\n      <a href=\"#tabpanel1\" role=\"tab\" aria-controls=\"tabpanel1\" aria-selected=\"true\">טאב 1</a>\n    </li>\n    <li class=\"o-tab o-tab--tight\" role=\"presentation\">\n      <a href=\"#tabpanel2\" role=\"tab\" aria-controls=\"tabpanel2\">טאב 2</a>\n    </li>\n  </ul>\n\n  <section id=\"tabpanel1\" class=\"o-tabpanel\" role=\"tabpanel\" >טאב פעיל</section>\n  <section id=\"tabpanel2\" class=\"o-tabpanel\" role=\"tabpanel\" aria-hidden=\"true\">טאב לא פעיל</section>\n</section>\n```\n*/\n      // stylelint-enable\n      $_o-tabs-i: $_o-tabs-i + 1;\n    }\n  }\n}\n\n\n@include jigsass-object(o-tabs__panel, $o-tabpanel-config) {\n  @include jigsass-classname {\n    position: relative;\n\n    &[aria-hidden='true'] {\n      display: none;\n\n      &:after {\n        opacity: 1;\n        visibility: hidden;\n      }\n    }\n\n    &:after {\n      @include jigsass-bidi(start, 0);\n      @include z-index('above');\n\n      animation: o-tabpanel-bg forwards get-anim(\n        $duration: 'short',\n        $easing: 'swift-in',\n        $delay: 'brief');\n      background-color: jigsass-color('bg-accented');\n      content: '';\n      height: 100%;\n      position: absolute;\n      speak: none;\n      top: 0;\n      visibility: visible;\n      width: 100%;\n    }\n\n    @at-root (without: all) {\n      @if (not $_o-tabpanel-keyframe-generated) {\n        @keyframes o-tabpanel-bg {\n          99% {\n            opacity: 0;\n            visibility: visible;\n          }\n\n          100% {\n            opacity: 0;\n            visibility: hidden;\n          }\n        }\n\n        $_o-tabpanel-keyframe-generated: true !global;\n      }\n    }\n\n    $_doclet: $jigsass-obj-name + ($jigsass-obj-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: tabs\ntitle: Tab Panel\norder: #{$_o-tabs-i}\n---\nA tab panel in a tab interface\n\n#### Usage:\n```example:html\n<section id=\"tabs\">\n  <h5>טאבים</h5>\n  <ul class=\"o-inline-list o-tabs\" role=\"tablist\">\n    <li class=\"o-tab\" role=\"presentation\">\n      <a href=\"#tabpanel1\" role=\"tab\" aria-controls=\"tabpanel1\" aria-selected=\"true\">טאב 1</a>\n    </li>\n    <li class=\"o-tab\" role=\"presentation\">\n      <a href=\"#tabpanel2\" role=\"tab\" aria-controls=\"tabpanel2\">טאב 2</a>\n    </li>\n  </ul>\n\n  <section id=\"tabpanel1\" class=\"o-tabpanel\" role=\"tabpanel\" >טאב פעיל</section>\n  <section id=\"tabpanel2\" class=\"o-tabpanel\" role=\"tabpanel\" aria-hidden=\"true\">טאב לא פעיל</section>\n</section>\n```\n*/\n      // stylelint-enable\n      $_o-tabs-i: $_o-tabs-i + 1;\n    }\n  }\n}\n","// *************************************\n//\n// #LAYOUT.WRAPPERS\n// -> Content wrappers\n//\n// *************************************\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Base\n// -------------------------------------\n\n@include jigsass-component(l-wrapper) {\n  // 1. Generate clearfix util (`u-cf`).\n  // 2. Generate auto horizontal margins util (`u-mh--auto`).\n  // 3. Generate 100% width util (`u-w--100%`).\n  // 4. Set wrapper widths in different breakpoints.\n  // ---\n  .l-wrapper {\n    @include jigsass-util(u-cf);  // [1]\n    @include jigsass-util(u-mh, $modifier: auto); // [2]\n    @include jigsass-util(u-w, $modifier: 100%); // [3]\n\n    @each $bp-name, $value in map-get($jigsass-sizes, l-width) {\n      @include jigsass-mq($from: $bp-name) {\n        $_max-width: jigsass-get-size(l-width, $unit: px);\n\n        @include jigsass-rem(max-width, $_max-width); // [4]\n      }\n    }\n  }\n}\n\n\n\n\n\n// -------------------------------------\n// Modifiers\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Items\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// States\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Context\n// -------------------------------------\n\n//\n\n\n\n\n\n","// *************************************\n//\n// #LAYOUT.TWO-COLS\n// -> A two column layout.\n//\n// HTML template:\n// <div class=\"l-two-cols  [ o-grid  o-grid--gutter--0 ]\">\n// \t<article class= \"l-two-cols__main\n// \t\t\t\t\t\t\t[ o-grid__item  o-grid__item--col  o-grid__item--12-of-12 ]\">\n//\n// \t\t<!-- Content here -->\n//\n// \t</article>\n//\n// \t<aside\n// \t\tclass= \"l-two-cols__aside\n// \t\t\t     [ o-grid__item  o-grid__item--col  o-grid__item--12-of-12 ]\">\n//\n// \t\t<!-- Content here -->\n//\n// \t</aside>\n// </div>\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Base\n// -------------------------------------\n\n@include jigsass-component(l-two-cols) {\n// stylelint-disable\n/* ---\n section: Layout\n title: two columns\n ---\n A main-column-sidebar layout.\n\n```example:html\n<main class='l-wrapper u-mh--auto'>\n  <div dir=\"#{$jigsass-direction}\" class=\"l-two-cols  [ o-grid  o-grid--gutter-0 ]\">\n    <article class= \"l-two-cols__main\n                [ o-grid__item  o-grid__item--col  o-grid__item--12-of-12 ]\">\n      <div style=\"height: 200px; background-color: #{jigsass-color(primary)}\"></div>\n    </article>\n\n    <aside\n      class= \"l-two-cols__aside\n        [ o-grid__item  o-grid__item--col  o-grid__item--12-of-12 ]\">\n      <div style=\"height: 200px; background-color: #{jigsass-color(primary)}\"></div>\n    </aside>\n  </div>\n</main>\n```\n*/\n// stylelint-enable\n}\n\n\n\n\n\n// -------------------------------------\n// Modifiers\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Items\n// -------------------------------------\n\n// Main column of a two column layout\n//\n// Occupies the width of a layout wrapper minus the sidebar.\n//\n// Extends o-grid__item classes\n// ---\n// HTML template:\n// \t<article class= \"l-two-cols__main\n// \t\t\t\t\t\t\t[ o-grid__item  o-grid__item--col  o-grid__item--12-of-12 ]\">\n// \t\t<!-- Content here -->\n// \t</article>\n// ---\n@include jigsass-component(l-two-cols__main) {\n  .l-two-cols__main {\n    @each $bp-name, $value in map-get($jigsass-sizes, l-sidebar) {\n      @include jigsass-mq($from: $bp-name) {\n        $_wrapper-width: jigsass-get-size(l-width, $unit: px);\n        $_aside-width: jigsass-get-size(l-sidebar, $unit: px);\n        $_width: $_wrapper-width - $_aside-width;\n\n        @include jigsass-rem(flex-basis, $_width);\n        @include jigsass-rem(max-width, $_width);\n\n        .no-flexbox & {\n          @include jigsass-rem(width, $_width);\n        }\n      }\n    }\n  }\n}\n\n\n// Aside column of a two column layout\n//\n// Extends o-grid__item classes\n// ---\n// HTML template:\n// \t<aside\n// \t\tclass= \"l-two-cols__aside\n// \t\t\t     [ o-grid__item  o-grid__item--col  o-grid__item--12-of-12 ]\">\n// \t\t<!-- Content here -->\n// \t</aside>\n// ---\n@include jigsass-component(l-two-cols__aside) {\n  .l-two-cols__aside {\n    @each $bp-name, $value in map-get($jigsass-sizes, l-sidebar) {\n      @include jigsass-mq($from: $bp-name) {\n        $_width: jigsass-get-size(l-sidebar, $unit: px);\n\n        @include jigsass-rem(flex-basis, $_width);\n        @include jigsass-rem(max-width, $_width);\n\n        .no-flexbox & {\n          @include jigsass-rem(width, $_width);\n        }\n      }\n    }\n  }\n}\n\n// Aside column's content wrapper.\n// Provides a gutter rule.\n//\n// ---\n// HTML template:\n// \t<aside class=\"l-two-cols__aside u-d--f\n// \t\t\t          [ o-grid__item  o-grid__item--col  o-grid__item--12-of-12 ]\">\n//\n// \t  <div class=\"l-two-cols__aside__contnet\"\n// \t\t  <!-- Content here -->\n// \t  </div>\n// \t</aside>\n// ---\n@include jigsass-component(l-two-cols__aside__content) {\n  .l-two-cols__aside__content {\n    @include jigsass-mq($from: 'l') {\n      flex-grow: 1;\n      position: relative;\n\n      &:before {\n        @include jigsass-bidi(start, jigsass-rhythm(-4));\n        @include z-index('l-two-cols__aside-rule');\n\n        background-color: jigsass-color('border-neutral');\n        bottom: 0;\n        content: '';\n        height: 100%;\n        position: absolute;\n        top: 0;\n        width: 1px;\n      }\n\n      &--b:before {\n        content: none;\n      }\n    }\n  }\n}\n\n\n\n\n\n// -------------------------------------\n// States\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Context\n// -------------------------------------\n\n//\n\n\n\n\n\n","// *************************************\n//\n// #TOP AD\n// -> Styles for pre-masthead advert.\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n@mixin c-top-ad {\n  @include jigsass-component('c-top-ad') {\n    // -------------------------------------\n    // Base\n    // -------------------------------------\n\n    .c-top-ad {\n      @include jigsass-util('u-is-hidden', $until: 's');\n      @include jigsass-util('u-bgc', $modifier: 'masthead');\n      @include jigsass-util('u-p', $modifier: 2);\n    }\n\n\n\n\n\n    // -------------------------------------\n    // Modifiers\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Items\n    // -------------------------------------\n\n    .c-masthead__content-wrapper {\n      @include jigsass-util('u-cf');\n      @include jigsass-util('u-mh', $modifier: 'auto');\n      @include jigsass-util('u-p', $modifier: 1);\n      @include jigsass-util('u-p', $modifier: 2, $from: 's');\n      @include jigsass-util('u-ph', $modifier: 4, $from: 'l');\n      @include jigsass-util('u-w', $modifier: 100%);\n    }\n\n    .c-masthead__content {\n      @include jigsass-util('u-ai', $modifier: 'fe');\n      @include jigsass-util('u-d', $modifier: 'f');\n    }\n\n    .c-masthead__logo {\n      @include c-logo;\n      @include jigsass-util('u-c', $modifier: 'text-inverse');\n\n      // Font size is used for resizing the logo's dimensions\n      // with one declaration while maintaining its aspect ratio.\n      font-size: 9rem;\n      // @include jigsass-mq($from: 's') { font-size: 9rem; }\n      @include jigsass-mq($from: 'l') { font-size: 11rem; }\n      @include jigsass-mq($from: 'xl') { font-size: 10rem; }\n    }\n\n    // 1. Better swipe experience in iOS and IE >= 10.\n    .c-masthead__primary-nav {\n      @include jigsass-util('u-d', $modifier: 'f');\n      @include jigsass-util('u-fw', $modifier: 700);\n      @include jigsass-util('u-ov', $modifier: 'a');\n      @include jigsass-util('u-type', $modifier: 'milli');\n      @include jigsass-util('u-whs', $modifier: 'nw');\n\n      // On parent nav\n      @include jigsass-util('u-ov', $modifier: 'h');\n\n      -webkit-overflow-scrolling: touch; // [1]\n      -ms-overflow-style: -ms-autohiding-scrollbar; // [1]\n\n      > :hover {\n        color: jigsass-color('text-inverse');\n      }\n\n      > * + * {\n        @include jigsass-bidi(margin-start, jigsass-rhythm(2));\n      }\n    }\n\n    .c-masthead__secondary-nav {\n      // On parent nav\n      @include jigsass-util('u-is-hidden', $until: 'l');\n      @include jigsass-util('u-ph', $modifier: 1);\n      @include jigsass-util('u-bgc', $modifier: 'bg');\n\n      // On parent ul\n      @include jigsass-util('u-type', $modifier: 'micro');\n      @include jigsass-util('u-whs', $modifier: 'nw');\n\n      > :hover {\n        color: jigsass-color('primary');\n      }\n    }\n\n    .c-masthead__bg {\n      @include jigsass-util('u-c', $modifier: 'masthead');\n      @include jigsass-util('u-h', $modifier: 100%);\n      @include jigsass-util('u-h', $modifier: 80%, $from: 's');\n      @include jigsass-util('u-pos', $modifier: 'a');\n      @include jigsass-util('u-t', $modifier: 0);\n      @include jigsass-util('u-w', $modifier: 100%);\n\n      @include z-index('below');\n\n      > svg {\n        @include jigsass-util('u-w', $modifier: 100%);\n        @include jigsass-util('u-b', $modifier: 0);\n\n        transform: translateY(100%);\n      }\n    }\n\n\n\n\n    // -------------------------------------\n    // States\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Context\n    // -------------------------------------\n\n    //\n\n\n\n\n\n  }\n}\n\n","// *************************************\n//\n// #LOGO\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n// -------------------------------------\n// Base\n// -------------------------------------\n\n@mixin c-logo {\n  @include jigsass-component('c-logo') {\n    // A 2-line logo\n    .c-logo {\n      height: 1em;\n      vertical-align: top;\n      width: 2.2915em;\n    }\n\n    // A 1-line logo\n    .c-logo--1-line {\n      width: 1369 / 190 * 1em;\n    }\n  }\n}\n\n\n\n\n\n// -------------------------------------\n// Modifiers\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Items\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// States\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Context\n// -------------------------------------\n\n//\n\n\n\n\n\n","// *************************************\n//\n// #MASTHEAD\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n@mixin c-masthead {\n  @include jigsass-component('c-masthead') {\n    // -------------------------------------\n    // Base\n    // -------------------------------------\n\n    .c-masthead {\n      $stop1: jigsass-color('primary');\n      $stop2: mix(jigsass-color('primary'), jigsass-color('quinary'), 60%);\n      $stop3: jigsass-color('quinary');\n\n      @include jigsass-util('u-pos', $modifier: 'r');\n\n      // Background and accent\n      &:before,\n      &:after {\n        @include z-index('below');\n        pointer-events: none;\n        position: absolute;\n        speak: none;\n        touch-events: none;\n        width: 100%;\n      }\n\n      // Background\n      &:before {\n        background: linear-gradient(180deg, $stop1, $stop2);\n        content: '';\n        height: 100%;\n        top: 0;\n\n        @include jigsass-mq($from: 's') {\n          height: 80%;\n        }\n      }\n\n      // Accent\n      &:after {\n        $accent-svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 250 40\"><defs><linearGradient id=\"mastheadAccent\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\"><stop stop-color=\"#{$stop2}\" offset=\"30%\" /><stop stop-color=\"#{$stop3}\" offset=\"100%\" /></linearGradient></defs><polygon points=\"0,20 0,0 256,0\" fill=\"url(#mastheadAccent)\" /></svg>'; /* stylelint-disable-line max-line-length */\n        content: inline-svg($accent-svg);\n        top: 100%;\n\n        @include jigsass-mq($from: 's') {\n          top: 80%;\n        }\n      }\n    }\n\n\n\n\n\n    // -------------------------------------\n    // Modifiers\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Items\n    // -------------------------------------\n\n    .c-masthead__content-wrapper {\n      @include jigsass-util('u-cf');\n      @include jigsass-util('u-mh', $modifier: 'auto');\n      @include jigsass-util('u-p', $modifier: 1);\n      @include jigsass-util('u-p', $modifier: 2, $from: 's');\n      @include jigsass-util('u-ph', $modifier: 4, $from: 'l');\n      @include jigsass-util('u-pos', $modifier: 'r');\n      @include jigsass-util('u-w', $modifier: 100%);\n\n      @include z-index('above');\n    }\n\n\n\n\n    .c-masthead__content {\n      @include jigsass-util('u-ai', $modifier: 'fe');\n      @include jigsass-util('u-d', $modifier: 'f');\n      @include jigsass-util('u-pos', $modifier: 'r');\n    }\n\n\n\n\n    .c-masthead__logo {\n      @include c-logo;\n      @include jigsass-util('u-c', $modifier: 'text-inverse');\n      @include jigsass-util('u-fxsh', $modifier: 0);\n\n      // Font size is used for resizing the logo's dimensions\n      // with one declaration while maintaining its aspect ratio.\n      font-size: jigsass-rhythm(10, $unit: 'rem');\n\n      @include jigsass-mq($from: 's') { font-size: jigsass-rhythm(11); }\n      @include jigsass-mq($from: 'xl') { font-size: jigsass-rhythm(10); }\n    }\n\n\n\n\n    .c-masthead__tools {\n      @include jigsass-util('u-end', $modifier: 0);\n      @include jigsass-util('u-pos', $modifier: 'a');\n      @include jigsass-util('u-t', $modifier: 0);\n\n\n      // --- Search -- //\n      // On search form\n      @include jigsass-util('u-is-hidden', $until: 's');\n      @include jigsass-util('u-pe', $modifier: 5);\n      @include jigsass-util('u-pos', $modifier: 'r');\n      @include jigsass-util('u-va', $modifier: 't');\n\n      // On input label\n      @include jigsass-util('u-is-visually-hidden');\n\n      // On search form button\n      @include jigsass-util('u-c', $modifier: 'text-pale');\n      @include jigsass-util('u-end', $modifier: 0);\n      @include jigsass-util('u-pos', $modifier: 'a');\n      @include jigsass-util('u-t', $modifier: 0);\n      @include jigsass-util('u-type', $modifier: 'delta');\n\n\n      // On mobile show-search-modal button\n      @include jigsass-util('u-is-hidden', $from: 's');\n\n      // On mobile search modal\n      @include jigsass-util('u-p', $modifier: 2);\n      @include jigsass-util('u-pt', $modifier: 7);\n      @include jigsass-util('u-pos', $modifier: 'f');\n      @include jigsass-util('u-w', $modifier: 90%);\n\n      // On search modal form\n      @include jigsass-util('u-autospace', $modifier: 2);\n\n      // On search modal input\n      @include jigsass-util('u-is-visually-hidden');\n      @include jigsass-util('u-type', $modifier: 'gamma');\n\n      // on modal close button\n      @include jigsass-util('u-end', $modifier: 0);\n      @include jigsass-util('u-pos', $modifier: 'a');\n      @include jigsass-util('u-t', $modifier: 0);\n\n      // On search modal submit button\n      @include jigsass-util('u-type', $modifier: 'gamma');\n      @include jigsass-util('u-mt', $modifier: 4);\n\n\n\n      // --- Accessibility menu -- //\n      // On wrapper\n      @include jigsass-util('u-pos', $modifier: 'r');\n\n      // On button\n      @include jigsass-util('u-type', $modifier: 'delta');\n\n      // On menu\n      @include jigsass-util('u-bgc', $modifier: 'bg');\n      @include jigsass-util('u-end', $modifier: 0);\n      @include jigsass-util('u-mt', $modifier: 1);\n\n      // On menu items\n      @include jigsass-util('u-p', $modifier: 1);\n      @include jigsass-util('u-ta', $modifier: 'end');\n    }\n\n\n\n\n    // 1. Better swipe experience in iOS and IE >= 10.\n    .c-masthead__primary-nav {\n      @include jigsass-util('u-fw', $modifier: 700);\n      @include jigsass-util('u-ov', $modifier: 'a');\n      @include jigsass-util('u-whs', $modifier: 'nw');\n\n      // On parent nav\n      @include jigsass-util('u-ov', $modifier: 'h');\n\n      -webkit-overflow-scrolling: touch; // [1]\n      -ms-overflow-style: -ms-autohiding-scrollbar; // [1]\n\n      > :hover {\n        color: jigsass-color('text-inverse');\n      }\n\n      > * + * {\n        @include jigsass-bidi(margin-start, jigsass-rhythm(2));\n      }\n    }\n\n\n\n\n    .c-masthead__secondary-nav {\n      // On parent nav\n      @include jigsass-util('u-is-hidden', $until: 'l');\n      @include jigsass-util('u-ph', $modifier: 1);\n      @include jigsass-util('u-bgc', $modifier: 'bg');\n\n      // On parent ul\n      @include jigsass-util('u-type', $modifier: 'micro');\n      @include jigsass-util('u-whs', $modifier: 'nw');\n\n      > :hover {\n        color: jigsass-color('primary');\n      }\n    }\n\n\n\n\n\n    // -------------------------------------\n    // States\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Context\n    // -------------------------------------\n\n    //\n\n\n\n\n\n  }\n}\n","@import 'file-text';\n@import 'inline-urlescape';\n\n@function inline-svg($str) {\n  @return url(\"data:image/svg+xml;charset=utf8,#{inline-urlescape($str)}\");\n}\n\n@function inline-svg-file($path, $encoding:'utf8') {\n  @return inline-svg(file-text($path, $encoding));\n}\n","// *************************************\n//\n// #FOOTER\n// -> Site footer style\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n@mixin c-footer {\n  @include jigsass-component('c-footer') {\n    // -------------------------------------\n    // Base\n    // -------------------------------------\n\n    .c-footer {\n      @include jigsass-util('u-bgc', $modifier: 'primary');\n      @include jigsass-util('u-c', $modifier: 'text-inverse');\n      @include jigsass-util('u-pt', $modifier: 4, $from: 's');\n      @include jigsass-util('u-pt', $modifier: 6, $from: 'l');\n      @include jigsass-util('u-pb', $modifier: 9, $until: 'l');\n      @include jigsass-util('u-pos', $modifier: 'r');\n    }\n\n\n\n\n    // -------------------------------------\n    // Modifiers\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Items\n    // -------------------------------------\n\n    .c-footer__slant {\n      @include jigsass-util('u-c', $modifier: 'has-card', $until: 's');\n      @include jigsass-util('u-pos', $modifier: 'a');\n      @include jigsass-util('u-t', $modifier: 0);\n      @include jigsass-util('u-w', $modifier: 100%);\n    }\n\n    .c-footer__content {\n      @include jigsass-util('u-p', $modifier: 4);\n    }\n\n    .c-footer__side-col {\n      @include jigsass-util('u-autospace', $modifier: 2);\n      @include jigsass-util('u-ta', $modifier: 'c', $until: 'l');\n    }\n\n    .c-footer__logo {\n      // Set size through font-size.\n      font-size: 4rem;\n      @include jigsass-mq($from: 's') { font-size: 8rem; }\n      @include jigsass-mq($from: 'l') { font-size: 10rem; }\n\n      @include jigsass-util('u-d', $modifier: 'b');\n      @include jigsass-util('u-start', $modifier: 'min-1.5', $from: 'l');\n      @include jigsass-util('u-is-hidden', $from: 'l');\n      @include jigsass-util('u-is-hidden', $until: 'l');\n      @include jigsass-util('u-pos', $modifier: 'r');\n    }\n\n    .c-footer__links {\n      @include jigsass-util('u-fw', $modifier: 700);\n      @include jigsass-util('u-td', $modifier: 'u:hover');\n      @include jigsass-util('u-td', $modifier: 'u:focus');\n      @include jigsass-util('u-type', $modifier: 'milli');\n    }\n\n    .c-footer__social {\n      @include jigsass-util('u-autospace', $modifier: 1);\n      @include jigsass-util('u-c', $modifier: 'text-pale');\n      @include jigsass-util('u-mb', $modifier: 4);\n      @include jigsass-util('u-type', $modifier: 'delta');\n\n      // On icon links:\n      @include jigsass-util('u-d', $modifier: 'b');\n\n      // On apple and android icons.\n      @include jigsass-util('u-is-hidden', $until: 'l');\n\n      // On download app button\n      @include jigsass-util('u-fw', $modifier: 700);\n      @include jigsass-util('u-mt', $modifier: 4);\n      @include jigsass-util('u-is-hidden', $from: 's');\n    }\n\n    .c-footer__nav {\n      @include jigsass-util('u-is-hidden', $until: 's');\n      @include jigsass-util('u-type', $modifier: 'micro');\n\n      > ul {\n        @include jigsass-util('u-autospace', $modifier: '4(3up)', $until: 'l');\n      }\n\n      h4 {\n        @include jigsass-util('u-type', $modifier: 'milli');\n        @include jigsass-util('u-mt', $modifier: 4);\n      }\n    }\n\n\n\n\n    // -------------------------------------\n    // States\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Context\n    // -------------------------------------\n\n    //\n\n\n\n\n\n  }\n}\n","// *************************************\n//\n// #LISTING SOCIAL\n// -> Collapsible social panel\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n\n// Used internally for sorting doclets.\n$_listing-social-i: 0;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@mixin c-listing-social {\n  @include jigsass-component(c-listing-social) {\n    // Collapsible share panels for listings.\n    // ---\n    // 1. Set up animating on min-width\n    // ---\n    .c-listing-social {\n      @include jigsass-bidi(end, 0);\n      @include jigsass-rem(max-width, jigsass-rhythm(7, $unit: px));\n\n      background-color: transparent;\n      display: flex;\n      height: 100%;\n      min-width: 0; // [1]\n      position: absolute;\n      top: 0;\n      transition: all get-anim($duration: short, $easing: swift-out);\n\n      @include jigsass-mq($from: xl) {\n        @include jigsass-rem(max-width, jigsass-rhythm(6, $unit: px));\n      }\n    }\n\n    // ----- Items ----- //\n    .c-listing-social__content {\n      align-items: center;\n      color: jigsass-color(text-inverse);\n      display: none;\n      fill: jigsass-color('primary');\n      flex-grow: 1;\n      justify-content: center;\n\n      > * {\n        :hover,\n        :focus,\n        :active {\n          color: jigsass-color(primary (jigsass-tint: 16));\n        }\n\n        & + * {\n          @include jigsass-bidi(margin-start, jigsass-rhythm(1));\n        }\n      }\n    }\n\n    .c-listing-social__toggle {\n      @include jigsass-util('u-is-hidden', $from: l);\n\n      background-color: jigsass-color('bg-neutral-b');\n      color: jigsass-color('primary');\n      height: 100%;\n      outline: none;\n      transition: all get-anim($duration: mid, $easing: swift-out);\n\n      &:hover,\n      &:focus,\n      &:active {\n        background-color: jigsass-color('bg-accented');\n        color: jigsass-color('primary' (jigsass-shade: 6));\n      }\n    }\n\n    .c-listing-social__close {\n      display: none;\n    }\n\n    // ----- State ----- //\n    .c-listing-social-is-expanded {\n      background-color: jigsass-color('primary');\n      max-width: 100%;\n      min-width: 100%;\n\n      .c-listing-social__toggle {\n        background-color: jigsass-color('primary' (jigsass-tint: 2));\n        color: jigsass-color('text-inverse');\n\n        &:hover,\n        &:focus,\n        &:active {\n          background-color: jigsass-color('primary' (jigsass-tint: 6));\n        }\n      }\n\n      .c-listing-social__content {\n        display: flex;\n      }\n\n      .c-listing-social__open {\n        display: none;\n      }\n\n      .c-listing-social__close {\n        display: block;\n        margin: 0 auto;\n      }\n    }\n  }\n}\n","// *************************************\n//\n// #BOUNTY LIST\n//\n// *************************************\n\n@mixin c-bounty-list {\n  @include jigsass-component('c-bounty-list') {\n    // -------------------------------------\n    // Base\n    // -------------------------------------\n\n    .c-bounty-list {\n      // @include jigsass-util('u-autospace', $modifier: 1);\n    }\n\n\n\n\n    // -------------------------------------\n    // Modifiers\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Items\n    // -------------------------------------\n\n    .c-bounty-list__header {\n      @include jigsass-util('u-is-visually-hidden');\n    }\n\n    .c-bounty-list__teaser {\n      @include jigsass-util('u-oh', $modifier: 'h');\n      @include jigsass-util('u-pos', $modifier: 'r');\n      @include jigsass-util('u-type', $modifier: 'micro');\n      @include jigsass-util('u-pb', $modifier: 4);\n\n      & + & {\n        @include jigsass-rem('padding-top', jigsass-rhythm(1));\n      }\n\n      // On headline\n      @include jigsass-util('u-p', $modifier: 1);\n\n\n      time {\n        @include jigsass-util('u-c', $modifier: 'primary');\n      }\n\n      // promoted content notice\n      @include jigsass-util('u-c', $modifier: 'text-promoted');\n\n      footer {\n        @include jigsass-util('u-b', $modifier: 0);\n        @include jigsass-util('u-bdb', $modifier: '1px(1)');\n        @include jigsass-util('u-c', $modifier: 'secondary');\n        @include jigsass-util('u-fw', $modifier: 700);\n        @include jigsass-util('u-ph', $modifier: 1);\n        @include jigsass-util('u-pos', $modifier: 'a');\n        @include jigsass-util('u-type', $modifier: 'micro');\n        @include jigsass-util('u-w', $modifier: 100%);\n\n        // On purchase button\n        @include jigsass-util('u-ms', $modifier: 1);\n        @include jigsass-util('u-ph', $modifier: 1);\n        @include jigsass-util('u-pos', $modifier: 'a');\n        @include jigsass-util('u-type', $modifier: 'micro');\n      }\n    }\n\n\n\n\n\n    // -------------------------------------\n    // States\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Context\n    // -------------------------------------\n\n    //\n\n\n\n\n  }\n}\n","// *************************************\n//\n// #HERO SEARCH\n// -> A large search component\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n@mixin c-hero-search {\n  // Base\n  // -------------------------------------\n\n  @include jigsass-component(c-hero-search) {\n    .c-hero-search {\n      @include jigsass-util('u-bgc', $modifier: 'bg:before', $until: 's');\n      @include jigsass-util('u-mb', $modifier: 8);\n      @include jigsass-util('u-pos', $modifier: 'r');\n      @include jigsass-util('u-pb', $modifier: 2, $from: 'm');\n      @include jigsass-util('u-pt', $modifier: 6, $from: 's');\n      @include jigsass-util('u-type', $modifier: 'epsilon');\n      @include jigsass-util('u-type', $modifier: 'delta', $from: 'l');\n\n      // Background and accent in small bps\n      @include jigsass-mq($until: 's') {\n        $bg-color: jigsass-color('bg');\n\n        &:before,\n        &:after {\n          @include z-index('hero-search-bg');\n\n          content: '';\n          position: absolute;\n          speak: none;\n          width: 100%;\n        }\n\n        &:before {\n          background-color: $bg-color;\n          height: 100%;\n          top: 0;\n        }\n\n        &:after {\n          $accent-svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 250 20\"><polygon points=\"256,10 0,0 256,0\" fill=\"#{$bg-color}\" /></svg>'; /* stylelint-disable-line max-line-length */\n\n          content: inline-svg($accent-svg);\n          top: 100%;\n        }\n      }\n    }\n\n\n\n\n\n    // -------------------------------------\n    // Modifiers\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Items\n    // -------------------------------------\n\n    .c-hero-search__inputs {\n      @include jigsass-util('u-pv', $modifier: 6);\n      @include jigsass-util('u-pv', $modifier: 1, $from: 's');\n      @include jigsass-util('u-w', $modifier: 100%);\n\n      &:after {\n        content: '';\n        opacity: 0;\n      }\n\n      &.is-sticky {\n        $stop1: mix(jigsass-color('primary'), jigsass-color('quinary'), 60%);\n        $stop2: mix(jigsass-color('primary'), jigsass-color('quinary'), 20%);\n        $stop3: jigsass-color('quinary');\n\n        $accent-svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 250 15\"><defs><linearGradient id=\"heroSearchAccent\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\"><stop stop-color=\"#{$stop2}\" offset=\"30%\" /><stop stop-color=\"#{$stop3}\" offset=\"100%\" /></linearGradient></defs><polygon points=\"256,3 0,0 256,0\" fill=\"#{$stop3}\"></polygon></svg>'; /* stylelint-disable-line max-line-length */\n\n        @include z-index(hero-search);\n\n        background: linear-gradient(180deg, $stop1, $stop3);\n        transition: background-color get-anim($duration: 'mid', $easing: 'swift-out');\n\n        &:after {\n          bottom: 0;\n          content: inline-svg($accent-svg);\n          opacity: 1;\n          pointer-events: none;\n          position: absolute;\n          touch-events: none;\n          transform: translateY(100%);\n          transition: opacity get-anim($duration: 'mid', $easing: 'swift-out');\n          width: 100%;\n        }\n\n        button {\n          background-color: jigsass-color('bg');\n          color: jigsass-color('primary');\n\n          &:hover,\n          &:focus,\n          &:active {\n            background-color: jigsass-color('primary');\n            color: jigsass-color('text-inverse');\n          }\n        }\n      }\n\n      > .l-wrapper {\n        @include jigsass-util('u-ph', $modifier: 6);\n        @include jigsass-util('u-ph', $modifier: 2, $from: 's');\n        @include jigsass-util('u-ph', $modifier: 20, $from: 'l');\n      }\n\n      .c-hero-search__input-list {\n        @include jigsass-util('u-autospace', $modifier: 2, $until: 's');\n\n        > li:first-child {\n          @include jigsass-util('u-mt', $modifier: 2, $until: 's');\n        }\n      }\n\n      .c-hero-search__title {\n        @include jigsass-util('u-is-visually-hidden', $from: 's');\n        @include jigsass-util('u-ta', $modifier: 'c');\n        @include jigsass-util('u-type', $modifier: 'delta');\n      }\n\n\n      select,\n      input {\n        @include jigsass-util('u-h', $modifier: 100%);\n        @include jigsass-util('u-bgc', $modifier: 'bg', $from: 's');\n      }\n\n      select {\n        @include jigsass-util('u-is-hidden', $until: 's');\n      }\n\n      // On free text input, to provide\n      // positioning context for caret\n      label {\n        @include jigsass-util('u-pos', $modifier: 'r');\n      }\n    }\n\n    .c-hero-search__caret {\n      :placeholder-shown + & {\n        @include jigsass-bidi(start, jigsass-rhythm(.7));\n\n        animation: o-hero-search__caret 0.7s linear infinite alternate;\n        background-color: jigsass-color('primary' (jigsass-tint: 10));\n        height: 100%;\n        opacity: 1;\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        touch-events: none;\n        width: 1px;\n      }\n\n      :focus + & {\n        display: none;\n      }\n    }\n\n    @keyframes o-hero-search__caret {\n      0% { opacity: 0; }\n\n      40% { opacity: 0; }\n\n      60% { opacity: 1; }\n    }\n\n\n\n\n\n    // -------------------------------------\n    // States\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Context\n    // -------------------------------------\n\n    //\n\n\n\n\n  }\n}\n","// *************************************\n//\n// #HOMEPAGE CENTERPIECE\n//\n// *************************************\n\n@mixin c-centerpiece {\n  @include jigsass-component(c-centerpiece) {\n    // -------------------------------------\n    // Base\n    // -------------------------------------\n    .c-centerpiece {\n      @include jigsass-util('u-autospace', $modifier: 2, $until: 'l');\n    }\n\n\n\n\n\n    // -------------------------------------\n    // Modifiers\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Items\n    // -------------------------------------\n\n    .c-centerpiece__col {\n      // ----- On right column ----- //\n      @include jigsass-util('u-autospace', $modifier: 2, $until: 's');\n      @include jigsass-util('u-autospace', $modifier: '2(2up)', $from: 's');\n\n      // on grid containing the teasers which are 2up in mobile\n      @include jigsass-util('u-autospace', $modifier: 2, $from: 's');\n\n      // ----- On right column ------ //\n      @include jigsass-util('u-autospace', $modifier: 2, $from: 'l');\n      @include jigsass-util('u-autospace', $modifier: 2, $until: 's');\n\n      // On small items container inside right column\n      @include jigsass-util('u-autospace', $modifier: 2, $until: 'l');\n    }\n\n    .c-centerpiece__item {\n      @include jigsass-util('u-ov', $modifier: 'h');\n      @include jigsass-util('u-pos', $modifier: 'r');\n      @include jigsass-util('u-type', $modifier: 'milli');\n\n      transition: all get-anim($duration: 'short', $easing: 'swift-out', $delay: 'short');\n\n      &:before {\n        @include jigsass-bidi(transform-origin, bottom 'start');\n\n        background-color: rgba(jigsass-color('bg-accented'), 0.7);\n        bottom: 0;\n        content: '';\n        height: 100%;\n        position: absolute;\n        transform: scale(0, 0);\n        transform: scale3d(0, 0, 1);\n        transition: all get-anim($duration: 'short', $easing: 'swift-out', $delay: 'short');\n        width: 100%;\n      }\n\n      &:hover {\n        background-color: jigsass-color('bg-accented');\n\n        &,\n        &:before {\n          transition-duration: get-anim($duration: 'brief');\n          transition-timing-function: get-anim($easing: 'swift-in');\n        }\n\n        &:before {\n          transform: scale(1, 1);\n          transform: scale3d(1, 1, 1);\n        }\n      }\n    }\n\n    .c-centerpiece__content {\n      @include jigsass-util('u-p', $modifier: 1);\n      @include jigsass-util('u-w', $modifier: 100%);\n\n      h3 {\n        time {\n          @include jigsass-util('u-c', $modifier: 'primaty');\n        }\n\n        // On promoted content notice\n        @include jigsass-util('u-c', $modifier: 'text-promoted');\n        @include jigsass-util('u-type', $modifier: 'milli');\n      }\n    }\n\n    .c-centerpiece__footer {\n      @include jigsass-util('u-b', $modifier: 0);\n      @include jigsass-util('u-bdb', $modifier: '1px(1)');\n      @include jigsass-util('u-c', $modifier: 'secondary');\n      @include jigsass-util('u-fw', $modifier: 700);\n      @include jigsass-util('u-ph', $modifier: 1);\n      @include jigsass-util('u-pos', $modifier: 'a');\n      @include jigsass-util('u-type', $modifier: 'milli');\n      @include jigsass-util('u-w', $modifier: 100%);\n\n      // On purchase button\n      @include jigsass-util('u-ms', $modifier: 1);\n      @include jigsass-util('u-ph', $modifier: 1);\n      @include jigsass-util('u-pos', $modifier: 'a');\n      @include jigsass-util('u-type', $modifier: 'micro');\n    }\n\n\n    // ----- Modifiers ----- //\n    .c-centerpiece__item--small {\n      @include jigsass-util('u-pb', $modifier: 40%, $from: 's');\n      @include jigsass-util('u-pb', $modifier: 25%, $from: 'm');\n      @include jigsass-util('u-pb', $modifier: 45.4%, $from: 'l');\n\n      .centerpiece__content {\n        @include jigsass-util('u-pb', $modifier: 6, $until: 's');\n        @include jigsass-util('u-pos', $modifier: 'a', $from: 's');\n\n        figure {\n          @include jigsass-util('u-is-hidden', $until: 's');\n        }\n      }\n    }\n\n    .c-centerpiece__item--medium {\n      @include jigsass-util('u-pb', $modifier: 14);\n      @include jigsass-util('u-pb', $modifier: 40%, $from: 's');\n      @include jigsass-util('u-pb', $modifier: 25%, $from: 'm');\n      @include jigsass-util('u-pb', $modifier: 45.4%, $from: 'l');\n\n      .centerpiece__content {\n        @include jigsass-util('u-pos', $modifier: 'a');\n      }\n    }\n\n    .c-centerpiece__item--large {\n      @include jigsass-util('u-pb', $modifier: 16);\n      @include jigsass-util('u-pb', $modifier: 40%, $from: 's');\n      @include jigsass-util('u-pb', $modifier: 25%, $from: 'm');\n      @include jigsass-util('u-pb', $modifier: 45%, $from: 'l');\n      @include jigsass-util('u-type', $modifier: 'epsilon');\n      @include jigsass-util('u-type', $modifier: 'gamma', $from: 's');\n\n      .centerpiece__content {\n        @include jigsass-util('u-pos', $modifier: 'a');\n      }\n    }\n\n    .c-centerpiece__item--textual {\n      @include jigsass-util('u-type', $modifier: 'beta', $from: 's');\n      @include jigsass-util('u-pb', $modifier: 55.72%, $from: 's');\n      @include jigsass-util('u-pb', $modifier: 48.8%, $from: 'm');\n      @include jigsass-util('u-pb', $modifier: 58.3%, $from: 'l');\n\n      .centerpiece__content {\n        @include jigsass-util('u-pb', $modifier: 6, $until: 's');\n        @include jigsass-util('u-pos', $modifier: 'a', $from: 's');\n      }\n    }\n\n    .c-centerpiece__item--textual--b {\n      @include jigsass-util('u-pb', $modifier: 237.33%, $from: 's');\n      @include jigsass-util('u-pb', $modifier: 204.92%, $from: 'm');\n      @include jigsass-util('u-pb', $modifier: 58.3%, $from: 'l');\n    }\n\n\n\n\n\n    // -------------------------------------\n    // States\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Context\n    // -------------------------------------\n\n    //\n\n\n\n\n\n  }\n}\n","// *************************************\n//\n// #SEARCH RESULTS FILTER\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n@mixin c-search-results-filter {\n  @include jigsass-component(search-results-filter) {\n    // -------------------------------------\n    // Base\n    // -------------------------------------\n    .c-search-results-filter {\n      @include jigsass-util('u-autospace', $modifier: 2);\n      @include jigsass-util('u-bgc', $modifier: 'bg-neutral-dark');\n      @include jigsass-util('u-d', $modifier: 'f');\n      @include jigsass-util('u-fxd', $modifier: 'c');\n      @include jigsass-util('u-mah', $modifier: 96vh, $from: 'l');\n      @include jigsass-util('u-mb', $modifier: 4, $until: 'l');\n      @include jigsass-util('u-p', $modifier: 2);\n      @include jigsass-util('u-pos', $modifier: 'stck', $from: 'l');\n      @include jigsass-util('u-t', $modifier: 2, $from: 'l');\n    }\n\n\n\n\n\n    // -------------------------------------\n    // Modifiers\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Items\n    // -------------------------------------\n\n    .c-search-results-filter__submit {\n      @include jigsass-util('u-type', $modifier: 'delta');\n    }\n\n\n    .c-search-results-filter__header {\n      @include jigsass-util('u-fxg', $modifier: 0);\n      @include jigsass-util('u-fxs', $modifier: 0);\n    }\n\n    .c-search-results-filter__search {\n      @include jigsass-util('u-pos', $modifier: 'r');\n      @include jigsass-util('u-type', $modifier: 'delta');\n\n      // On accesibility span\n      @include jigsass-util('u-is-visually-hidden');\n\n      // On note\n      @include jigsass-util('u-c', $modifier: 'text--muted');\n      @include jigsass-util('u-type', $modifier: 'micro');\n    }\n\n    .c-search-results-filter__main {\n      @include jigsass-util('u-autospace', $modifier: 2);\n      @include jigsass-util('u-fxg', $modifier: 1);\n      @include jigsass-util('u-fxs', $modifier: 0);\n      @include jigsass-util('u-ov', $modifier: 'a');\n    }\n\n    .c-search-results-filter__section {\n      @include jigsass-util('u-bgc', $modifier: 'bg-neutral-c');\n      @include jigsass-util('u-type', $modifier: 'milli', $from: 'l');\n    }\n\n    .c-search-results-filter__section-head {\n      @include jigsass-util('u-bds', $modifier: '.5rem(1,solid,primary)');\n      @include jigsass-util('u-bgc', $modifier: 'neutral(jigsass-tint,5)');\n      @include jigsass-util('u-d', $modifier: 'f');\n      @include jigsass-util('u-fw', $modifier: 700);\n      @include jigsass-util('u-type', $modifier: 'epsilon');\n\n      // On span\n      @include jigsass-util('u-c', $modifier: 'text--inverse');\n      @include jigsass-util('u-fxg', $modifier: 1);\n      @include jigsass-util('u-pv', $modifier: 1);\n      @include jigsass-util('u-ps', $modifier: 1);\n    }\n\n    .c-search-results-filter__section-content {\n      @include jigsass-util('u-autospace', $modifier: 2);\n      @include jigsass-util('u-bds', $modifier: '.5rem(2,solid,quinary)');\n      @include jigsass-util('u-p', $modifier: 1);\n      @include jigsass-util('u-p', $modifier: 2, $from: 's');\n    }\n\n    .c-search-results-filter__time-info {\n      @include jigsass-util('u-c', $modifier: 'text-pale');\n      @include jigsass-util('u-type', $modifier: 'micro');\n    }\n\n    .c-search-results-filter__time-opts {\n      @include jigsass-util('u-autospace', $modifier: '1(2up)');\n\n      // on labels\n      @include jigsass-util('u-d', $modifier: 'b');\n    }\n\n    .c-search-results-filter__clear-or {\n      @include jigsass-util('u-c', $modifier: 'text-pale');\n      @include jigsass-util('u-fw', $modifier: 700);\n      @include jigsass-util('u-ta', $modifier: 'c');\n    }\n\n    .c-search-results-filter__datepickers {\n      @include jigsass-util('u-autospace', $modifier: 1);\n    }\n\n    .c-search-results-filter__datepicker {\n      @include jigsass-util('u-pos', $modifier: 'r');\n\n      // On label\n      @include jigsass-util('u-type', $modifier: 'milli');\n\n      // On input\n      @include jigsass-util('u-bgc', $modifier: 'bg');\n      @include jigsass-util('u-ph', $modifier: 6);\n      @include jigsass-util('u-ta', $modifier: 'start');\n      @include jigsass-util('u-is-visually-hidden');\n\n      // On datepicker button\n      @include jigsass-util('u-b', $modifier: 1px);\n      @include jigsass-util('u-c', $modifier: 'primary');\n      @include jigsass-util('u-pos', $modifier: 'a');\n      @include jigsass-util('u-start', $modifier: 0);\n      @include jigsass-util('u-type', $modifier: 'delta');\n\n      // On icon\n      @include jigsass-util('u-type', $modifier: 'epsilon');\n      @include jigsass-util('u-va', $modifier: 'bl');\n    }\n\n    .c-search-results-filter__clear-date {\n      @include jigsass-util('u-b', $modifier: 1px);\n      @include jigsass-util('u-pos', $modifier: 'a');\n      @include jigsass-util('u-end', $modifier: 0);\n      @include jigsass-util('u-type', $modifier: 'delta');\n\n      display: block;\n\n      :placeholder-shown ~ & {\n        display: none;\n      }\n\n      // On icon\n      @include jigsass-util('u-type', $modifier: 'zeta');\n      @include jigsass-util('u-va', $modifier: 'bl');\n    }\n\n    .c-search-results-filter__footer {\n      @include jigsass-util('u-mt', $modifier: 4);\n      @include jigsass-util('u-fxg', $modifier: 0);\n      @include jigsass-util('u-fxs', $modifier: 0);\n    }\n\n\n\n\n\n    // -------------------------------------\n    // States\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Context\n    // -------------------------------------\n\n    //\n\n\n\n\n\n  }\n}\n\n","// *************************************\n//\n// # Util\n// -> Define and call utility classes\n//    without bloat.\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n//\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not (global-variable-exists(jigsass-breakpoints) and mixin-exists(jigsass-mq))) {\n  @error '`jigsass-tools-selectors` has a dependency on `jigsass-tools-mq`. Please import it.';\n}\n\n@if (not (function-exists(jigsass-set))) {\n  @error '`jigsass-tools-selectors` has a dependency on `jigsass-tools-maps`. Please import it.';\n}\n\n@if (not function-exists(jigsass-strip-unit)) {\n  @error '`jigsass-tools-selectors` has a dependency on `jigsass-tools-typography`. ' +\n    'Please import it before this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Functions\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// The current context's utility name.\n/// For use inside `@content` blocks\n/// ---\n/// @group Selectors - 04 Define\n/// ---\n/// @type {Null | String}\n/// ---\n$jigsass-util-name: null;\n\n/// The current context's utility modifier.\n/// For use inside `@content` blocks\n/// ---\n/// @group Selectors - 04 Define\n/// ---\n/// @type {Null | String}\n/// ---\n$jigsass-util-modifier: null;\n\n/// The current context's media query arguments.\n/// For use inside `@content` blocks.\n/// ---\n/// @prop {Boolean | Number} from [false]\n///   The min-width condition of the current context.\n/// @prop {Boolean | Number} until [false]\n///   The max-width condition of the current context.\n/// @prop {Boolean | String | List} misc [false]\n///   The miscellaneous media-query conditions of the current context.\n/// ---\n/// @type Map\n/// ---\n/// @group Selectors - 04 Define\n/// ---\n$jigsass-util-mq-args: (from: false, until: false, misc: false);\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n/// Define a utility class\n/// ---\n/// @param {String} $name\n///   The name of the utility class being defined, sans modifiers.\n/// ---\n/// @group Selectors - 04 Define\n/// ---\n@mixin jigsass-define-util($name) {\n  // Don't do anything if the utility wasn't included\n  // with `@include jigsass-util($name)` at some point\n  // in the past.\n  @if (map-has-key($_jigsass-selectors, $name)) {\n    // Set util name in global scope\n    $jigsass-util-name: $name !global;\n    // Reset util modifier in global scope\n    $jigsass-util-modifier: null !global;\n\n\n    @each $bp, $modifiers in map-get($_jigsass-selectors, $name) {\n      @each $modifier, $was-included in $modifiers {\n        @if ($was-included and $was-included != 'silent') {\n          // Save $modifier to global scope, so that it is available to `@content`.\n          $jigsass-util-modifier: if($modifier == no-modifier, null, $modifier) !global;\n\n          @include _jigsass-define-util($name, $bp) {\n            @content;\n          }\n\n          // Reset util modifier in global scope\n          $jigsass-util-modifier: null !global;\n        }\n      }\n    }\n\n    // Reset util name in global scope\n    $jigsass-util-name: null !global;\n  }\n}\n\n\n/// Generate CSS of a utility class\n///\n/// `jigsass-util` must be `@include`d **before** the util class\n/// it calls is defined.\n///\n/// No matter how many times the mixin is called with a\n/// certain set of argument, only a single selector will\n/// be created in the generated CSS.\n///\n/// **The generated class will be created where it\n/// was defined**, not where it was called.\n///\n/// If `$jigsass-silent` is set to `true` when the `jigsass-util`\n/// is first called with a certain set of argument, no class\n/// will be generated for that argument set.\n/// ---\n/// @param {String} $name\n///   The base-name of the util class to generate\n/// @param {String | Boolean} $from\n///   The name of breakpoint used as the min-width condition.\n/// @param {String | Boolean} $until\n///   The name of breakpoint used as the max-width condition.\n/// @param {String | Boolean} $misc\n///   The name of a miscellaneous media query condition.\n/// @param {String | Boolean} $modifier\n///   A modifier's name\n/// ---\n/// @group Selectors - 05 Require\n/// ---\n@mixin jigsass-util($name, $from: false, $until: false, $misc: false, $modifier: false) {\n  @if (not map-has-key($_jigsass-selectors, $name)) {\n    $_jigsass-selectors: jigsass-deep-merge(\n      $_jigsass-selectors,\n      _jigsass-generate-selector-map($name)\n    ) !global;\n  }\n\n  // Check if util was already included\n  $_was-included: _jigsass-class-was-included($name, $from, $until, $misc, $modifier);\n\n  // Generate selector.\n  // Will only generate CSS once, where it was defined,\n  // regardless of how many times `jigsass-util` was called\n  // with the same arguments.\n  @if (not $_was-included) {\n    // Make sure $modifier is not called `no-modifier`.\n    @if ($modifier) {\n      @if ($modifier == 'no-modifier') {\n        @error 'jigsass-util: A jigsass util class modifier cannot be called ' +\n          '`no-modifier`. (from #{$name}).';\n      }\n    }\n\n    $_bp-str: _jigsass-bp-string($from, $until, $misc);\n\n    // Set class as defined in the `$_jigsass-selectors` map.\n    $_selector-map: (\n      $name: (\n        $_bp-str: (\n          $modifier or no-modifier: if($jigsass-silent, silent, true)\n        )\n      )\n    );\n\n\n    $_jigsass-selectors: jigsass-deep-merge($_jigsass-selectors, $_selector-map) !global;\n  }\n}\n\n\n\n// -------------------------------------\n// Private mixins\n// -------------------------------------\n\n/// ---\n/// Private util used to abstract away selector generation\n/// ---\n/// @param {String} $name\n///   The name of the utility class being defined, sans modifiers.\n/// @param {String} $bp-str\n///   A string representing media query conditions in the following format:\n///   `from-#{$width-bp}-until-#{$width-bp}-when-#{$misc-bp}` and where each\n///   part is optional\n/// ---\n/// @access private\n/// ---\n/// @group Selectors - 04 Define\n/// ---\n@mixin _jigsass-define-util($name, $bp-str) {\n  $_modifier: if(\n    $jigsass-util-modifier,\n    '--#{jigsass-str-escape($jigsass-util-modifier)}',\n    ''\n  );\n\n  $jigsass-util-mq-args: _jigsass-mq-args-parser($bp-str) !global;\n\n  $_selector: '.#{jigsass-get-namespace()}#{$name}#{$_modifier}';\n\n  $_selector: if(\n    $bp-str == no-breakpoint,\n    $_selector,\n    #{$_selector}--#{$bp-str}\n  );\n\n  @include jigsass-mq(\n    $from: map-get($jigsass-util-mq-args, from),\n    $until: map-get($jigsass-util-mq-args, until),\n    $misc: map-get($jigsass-util-mq-args, misc)\n  ) {\n    #{$_selector} {\n      @content;\n    }\n  }\n\n  // Reset in global scope\n  $jigsass-util-mq-args: (from: false, until: false, misc: false) !global;\n}\n","// *************************************\n//\n// # jigsass-utils-clearfix\n// -> Micro-clearfix utility class\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-clearfix` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before importing this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n/* ---\nsection: Clearfix Util\ntitle: Introduction\norder: -10\n---\nForce an element to clear its floated child element and\nprevent its layout from collapsing.\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-clearfix\n```\n\n#### Usage\nImport JigSass Utils Clearfix into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-clearfix/scss/index';\n```\n\nImporting the file will not create any styles by itself. You would need to indicate that the\n`.u-cf` class should actually be generated in each component or object it is used in:\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-cf);\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-cf);\n\n  ...\n}\n```\n\n```scss\n// _c.baz.scss\n.baz {\n  @include jigsass-util(u-cf);\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Clearfix partial was imported into the main file:\n*/\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n$_doclet-store: () !default;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-util(u-cf) {\n  &:after {\n    clear: both;\n    content: '';\n    display: block;\n  }\n\n  $_doclet: $jigsass-util-name;\n  @if (not index($_doclet-store, $_doclet)) {\n    // stylelint-disable\n/* ---\nsection: Clearfix Util\ntitle: Clear Fix\norder: 1\n---\n```scss\n// output.css\n.u-cf:after {\n  clear: both;\n  content: '';\n  display: block;\n}\n```\n\n```example:html\n<div class='u-cf' style='background-color: #09a5d9;'>\n  <div class=\"fpo\">Cleared float</div>\n</div>\n```\n*/\n    // stylelint-enable;\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n  }\n}\n","// *************************************\n//\n// # jigsass-utils-color\n// -> color-related utility classes\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhawks.github.io/jigsass-utils-color\n//\n// *************************************\n\n@charset 'UTF-8';\n\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-color` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before this file.';\n}\n@if (not function-exists(jigsass-color)) {\n  @error '`jigsass-utils-color` has a dependency on `jigsass-tools-color`. ' +\n    'Please import it before this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Color Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated `color` and `background-color` utility classes.\n\nJigSass Utils Color works in tandem with [JigSass Tools Color](https://txhawks.github.io/jigsass-tools-color)\nand allows defining color and background-color classes based on the color palette defined in\n[$jigsass-colors](https://txhawks.github.io/jigsass-tools-color/#variable-jigsass-colors) as well as\nadjusting them on the fly.\n\nColor utils can be limited to a certain state (i.e., `hover`, `focus`,  etc.)\n\nThe syntax for generating a color util is: `$modifier: '<color-name>[(<adjustment-function>,<arg>)][:state]'`\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `u-c--<color-name>` (example: u-c--brand)\n  - `u-c--<color-name>(<adjustment-func>,<arg>)` (example: u-c--brand(tint-2))\n  - `u-c--<color-name>:<state>` (example: u-c--brand:focus)\n  - `u-c--<color-name>(<adjustment-func>,<arg>):<state>` (example: u-c--brand(shade-20%):focus)\n\n\n  - `u-bgc--<color-name>`\n  - `u-bgc--<color-name>(<adjustment-func>,<arg>)`\n  - `u-bgc--<color-name>:<state>`\n  - `u-bgc--<color-name>(<adjustment-func>,<arg>):<state>`\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-color\n```\n\n#### Usage\n\nImport JigSass Utils Color into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-color/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Utils Color does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual color\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-c, $modifier: primary); // <-- color: #09a5d9\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-c, $modifier: 'black(tint,10%)');  // <-- color: #191919\n  @include jigsass-util(u-bgc, $modifier: 'white(shade,30%)', $from: large); // <-- background-color: #b2b2b2 from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Utils Color partial was imported into the main file.\n\n\nJigSass Utils Color classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-c-<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n.u-bgc-<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-c, $modifier: secondary);\n```\nwill generate the `.u-c--secondary` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-bgc, $modifier: primary, $until: medium);\n```\n\nwill generate the `.u-bgc--primary--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-c, $modifier: primary, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-c--primary--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-util-color-i: 1;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@each $util in u-c u-bgc {\n  @include jigsass-define-util($util) {\n    @if (not $jigsass-util-modifier) {\n      @error 'jigsass-utils-color: #{$jigsass-util-name} must be passed A ' +\n        'value through a modifier.';\n    }\n\n    $parsed-mod-values: jigsass-parse-modifier($jigsass-util-modifier);\n\n    $color-name: map-get($parsed-mod-values, modifier);\n    $args: map-get($parsed-mod-values, args);\n    $state: map-get($parsed-mod-values, state);\n    $prop: if(str-slice($jigsass-util-name, 3) == c, color, background-color);\n\n    @if ($args and length($args) > 1) {\n      $arglist: ();\n      @for $i from 2 through length($args) {\n        $arglist: append($arglist, nth($args, $i));\n      }\n      $args: (nth($args, 1) : $arglist);\n    }\n\n    $color: if($args, append($color-name, $args), $color-name);\n    $color: jigsass-color($color);\n\n    // stylelint-disable selector-no-id\n    &#{unquote($state or '')} {\n      // stylelint-enable\n\n      #{$prop}: $color;\n\n      $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n        // stylelint-disable\n/* ---\nsection: Color Utils\ntitle: #{$prop}: #{$jigsass-util-name}--#{$jigsass-util-modifier}\norder: #{$_jigsass-util-color-i + if($prop == color, 0, 100)}\n---\nA utility class for setting the `#{$prop}` of an element to `#{$color}`\n#{if($state, 'when ' + if($state == active, ' active', ' ' + $state + 'ed.'), '.')}\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='#{if($prop == color,'', 'fpo ')}#{$jigsass-util-name}--#{$jigsass-util-modifier}'>\n  This element's `#{$prop}` is set to `#{$color}`\n  #{if($state, 'when ' + if($state == active, ' active', ' ' + $state + 'ed.'), '.')}\n</p>\n```\n*/\n        $_jigsass-util-color-i: $_jigsass-util-color-i + 1 !global;\n        // stylelint-enable\n      }\n    }\n  }\n}\n\n\n\n\n\n// -------------------------------------\n// Mixins\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Modifiers\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Items\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// States\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Context\n// -------------------------------------\n\n//\n\n\n\n\n\n","// *************************************\n//\n// # BEZEQ\n// -> Styles for the bezeq widjet\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n@mixin c-bezeq {\n  @include jigsass-component(bezeq) {\n    // -------------------------------------\n    // Base\n    // -------------------------------------\n    // .c-bezeq {}\n\n\n\n\n\n    // -------------------------------------\n    // Modifiers\n    // -------------------------------------\n\n    .c-bezeq__sec-head {\n      @include jigsass-util('u-bgc', $modifier: 'bezeq');\n      @include jigsass-util('u-c', $modifier: 'text--inverse');\n      @include jigsass-util('u-ovx', $modifier: 'h');\n      @include jigsass-util('u-p', $modifier: 1);\n      @include jigsass-util('u-tov', $modifier: 'e');\n      // @include jigsass-util('u-type', $modifier: 'epsilon');\n      @include jigsass-util('u-whs', $modifier: 'nw');\n    }\n\n    .c-bezeq__logo {\n      @include jigsass-util('u-h', $modifier: 1em);\n      @include jigsass-util('u-w', $modifier: 2.5em);\n    }\n\n    .c-bezeq__results {\n      @include jigsass-util('u-autospace', $modifier: 3);\n      @include jigsass-util('u-autospace', $modifier: 4, $until: 's');\n      @include jigsass-util('u-bgc', $modifier: 'bezeq-pale');\n      @include jigsass-util('u-c', $modifier: 'bezeq');\n      @include jigsass-util('u-p', $modifier: 2);\n      @include jigsass-util('u-pt', $modifier: 1);\n    }\n\n    .c-bezeq__result {\n      @include jigsass-util('u-pos', $modifier: 'r');\n    }\n\n    .c-bezeq__result-header {\n      @include jigsass-util('u-bdb', $modifier: '2px(1,solid)');\n      @include jigsass-util('u-fw', $modifier: 700);\n      @include jigsass-util('u-mb', $modifier: 1);\n      @include jigsass-util('u-pl', $modifier: 12);\n      @include jigsass-util('u-pl', $modifier: 14, $from: 's');\n    }\n\n    .c-bezeq__result-rating {\n      @include jigsass-util('u-c', $modifier: 'text-muted');\n      @include jigsass-util('u-end', $modifier: 1);\n      @include jigsass-util('u-is-visually-hidden');\n      @include jigsass-util('u-pos', $modifier: 'a');\n      @include jigsass-util('u-t', $modifier: 1);\n      @include jigsass-util('u-t', $modifier: 0, $from: 's');\n      @include jigsass-util('u-type', $modifier: 'milli', $until: 's');\n    }\n\n    .c-bezeq__result-content {\n      @include jigsass-util('u-autospace', $modifier: 1, $until: 's');\n      @include jigsass-util('u-cf');\n      @include jigsass-util('u-type', $modifier: 'milli');\n\n      // li`s\n      @include jigsass-util('u-pe', $modifier: 2);\n      @include jigsass-util('u-is-visually-hidden');\n      @include jigsass-util('u-td', $modifier: 'u:hover');\n      @include jigsass-util('u-td', $modifier: 'u:focus');\n\n    }\n\n    .c-bezeq__result-phone {\n      @include jigsass-util('u-c', $modifier: 'text-pale');\n      @include jigsass-util('u-fw', $modifier: 700);\n      @include jigsass-util('u-td', $modifier: 'u');\n    }\n\n    .c-bezeq__result-details {\n      @include jigsass-util('u-fl', $modifier: 'end', $from: 's');\n    }\n\n\n\n\n\n    // -------------------------------------\n    // Items\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // States\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Context\n    // -------------------------------------\n\n    //\n\n\n\n\n\n  }\n}\n\n","// *************************************\n//\n// # jigsass-utils-display\n// -> CSS display utility classes\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n//\n// https://txhawks.github.io/jigsass-utils-display/\n// https://www.github.com/txhawks/jigsass-utils-display/\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-display` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before importing this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Display Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA collection of dynamically generated css `display` utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions (It modifiies the user agent's default display).\nE.g., the `display: none` utility class name is `.u-d--n`.\n\n#### Available classes\n  - `.u-d--b` (display: block)\n  - `.u-d--f` (display: flex)\n  - `.u-d--if` (display: inline-flex)\n  - `.u-d--i` (display: inline)\n  - `.u-d--ib` (display: inline-block)\n  - `.u-d--inher` (display: inherit)\n  - `.u-d--init` (display: initial)\n  - `.u-d--li` (display: list-item)\n  - `.u-d--n` (display: none)\n  - `.u-d--tb` (display: table)\n  - `.u-d--iteb` (display: inline-table)\n  - `.u-d--tbcp` (display: table-caption)\n  - `.u-d--tbcl` (display: table-column)\n  - `.u-d--tbclg` (display: table-column-group)\n  - `.u-d--tbhg` (display: table-header-group)\n  - `.u-d--tbfg` (display: table-footer-group)\n  - `.u-d--tbr` (display: table-row)\n  - `.u-d--tbrg` (display: table-row-group)\n  - `.u-d--tbc` (display: table-cell)\n  - `.u-d--rb` (display: ruby)\n  - `.u-d--rbb` (display: ruby-base)\n  - `.u-d--rbbg` (display: ruby-base-group)\n  - `.u-d--rbt` (display: ruby-text)\n  - `.u-d--rbtg` (display: ruby-text-group)\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-display\n```\n\n#### Usage\nImport JigSass Utils Display into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-display/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Display does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual display\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-d, $modifier: b); // <-- display: block\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-d, $modifier: ib);  // <-- display: inline-block\n  @include jigsass-util(\n    u-d,\n    $modifier: f,\n    $from: large\n  ); // <-- display: flex from large bp an on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Display partial was imported into the main file.\n\n\nJigSass Display classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a display class, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.u-d--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-d, $modifier: f);\n```\nwill generate the `.u-d--f` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-d, $modifier: f, $until: medium);\n```\n\nwill generate the `.u-d--f--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-d, $modifier: f, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-d--f--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-display.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-display\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-display.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-display\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// A constant for translating modifiers to style declarations.\n/// ---\n/// @type Map\n/// ---\n/// @access private\n/// ---\n$_jigsass-display-mod-to-style: (\n  b: block,\n  cp: compact,\n  f: flex,\n  if: inline-flex,\n  i: inline,\n  ib: inline-block,\n  inher: inherit,\n  init: initial,\n  li: list-item,\n  n: none,\n  rb: ruby,\n  rbb: ruby-base,\n  rbbg: ruby-base-group,\n  rbt: ruby-text,\n  rbtg: ruby-text-group,\n  ri: run-in,\n  tb: table,\n  iteb: inline-table,\n  tbcp: table-caption,\n  tbcl: table-column,\n  tbclg: table-column-group,\n  tbhg: table-header-group,\n  tbfg: table-footer-group,\n  tbr: table-row,\n  tbrg: table-row-group,\n  tbc: table-cell,\n);\n\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-util-display-i: 1;\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-util(u-d) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-display: You must specify a display type as a modifier';\n  }\n  @if (not map-has-key($_jigsass-display-mod-to-style, $jigsass-util-modifier)) {\n    @error 'jigsass-utils-display: `#{$jigsass-util-modifier}` is not a valid display ' +\n      'property value abbreviation. Valid abbreviations are: \\a' +\n      '#{inspect($_jigsass-display-mod-to-style)}';\n  }\n\n  display: map-get($_jigsass-display-mod-to-style, $jigsass-util-modifier);\n\n\n  $_doclet: $jigsass-util-name + $jigsass-util-modifier;\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n/* ---\nsection: Display Utils\ntitle: u-d--#{$jigsass-util-modifier} (#{map-get($_jigsass-display-mod-to-style, $jigsass-util-modifier)})\norder: #{$_jigsass-util-display-i}\n---\nA util to modify an element's `display` property value to\n`#{map-get($_jigsass-display-mod-to-style, $jigsass-util-modifier)}`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-d, $modifier: #{map-get($_jigsass-display-mod-to-style, $jigsass-util-modifier)}[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-d--#{$jigsass-util-modifier}'>\n  This div is display value is set to: <em>#{map-get($_jigsass-display-mod-to-style, $jigsass-util-modifier)}</em>.\n</div>\n```\n*/\n    $_jigsass-util-display-i: $_jigsass-util-display-i + 1 !global;\n    // stylelint-enable\n  }\n}\n","// *************************************\n//\n// # jigsass-utils-flexbox\n// -> Flexbox related utility classes\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhawks.github.io/jigsass-utils-flexbox/\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-flexbox` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before importing this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Flexbox Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated flexbox-related utility classes.\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-flexbox\n```\n\n\n#### Available classes\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\nE.g., the `justify-content: space-around` utility class name is `.u-jc--sa`.\n\n  - `.u-ac--c` (align-content: center)\n  - `.u-ac--fe` (align-content: flex-end)\n  - `.u-ac--fs` (align-content: flex-start)\n  - `.u-ac--s` (align-content: stretch)\n  - `.u-ac--sa` (align-content: space-around)\n  - `.u-ac--sb` (align-content: space-between)\n\n\n  - `.u-ai--b` (align-items: baseline)\n  - `.u-ai--c` (align-items: center)\n  - `.u-ai--fe` (align-items: flex-end)\n  - `.u-ai--fs` (align-items: flex-start)\n  - `.u-ai--s` (align-items: stretch)\n\n\n  - `.u-as--a` (align-self: auto)\n  - `.u-as--b` (align-self: baseline)\n  - `.u-as--c` (align-self: center)\n  - `.u-as--fe` (align-self: flex-end)\n  - `.u-as--fs` (align-self: flex-start)\n  - `.u-as--s` (align-self: stretch)\n\n\n  - `.u-jc--c` (justify-content: center)\n  - `.u-jc--fe` (justify-content: flex-end)\n  - `.u-jc--fs` (justify-content: flex-start)\n  - `.u-jc--sa` (justify-content: space-around)\n  - `.u-jc--sb` (justify-content: space-between)\n\n\n  - `.u-fb--a` (flex-basis: auto)\n  - `.u-fb--<width>` (flex-basis: &lt;width>)\n\n\n  - `.u-fxg--<number>` (flex-grow: &lt;number>)\n  - `.u-fxsh--<number>` (flex-shrink: &lt;number>)\n\n\n  - `.u-fxw--n` (flex-wrap: nowrap)\n  - `.u-fxw--w` (flex-wrap: wrap)\n  - `.u-fxw--wr` (flex-wrap: wrap-reverse)\n\n\n  - `.u-fxd--c` (flex-direction: column)\n  - `.u-fxd--cr` (flex-direction: column-reverse)\n  - `.u-fxd--r` (flex-direction: row)\n  - `.u-fxd--rr` (flex-direction: row-reverse)\n\n\n  - `.u-ord--<number>` (order: &lt;number>)\n  - `.u-ord--min-<number>` (order: -&lt;number>)\n\n\n#### Usage\nImport JigSass Utils Flexbox into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-flexbox/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Flexbox does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual flexbox\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-ord, $modifier: 1); // <-- order: 1\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-jc, $modifier: fe);  // <-- justify-content: flex-end\n  @include jigsass-util(u-ord, $modifier: min-1, $from: large); // <-- ordr: -1 from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Flexbox partial was imported into the main file.\n\n\nJigSass Flexbox classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a flexbox class, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.u-<util>--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-ord, $modifier: 2);\n```\nwill generate the `.u-ord--2` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-ord, $modifier: 2, $until: medium);\n```\n\nwill generate the `.u-ord--2--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-ord, $modifier: min2, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-ord-min2--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// Constants for translating modifiers to values\n$_jigsass-flex-ac-vals: (\n  c: center,\n  fe: flex-end,\n  fs: flex-start,\n  s: stretch,\n  sa: space-around,\n  sb: space-between\n);\n\n$_jigsass-flex-ai-vals: (\n  b: baseline,\n  c: center,\n  fe: flex-end,\n  fs: flex-start,\n  s: stretch\n);\n\n$_jigsass-flex-as-vals: (\n  a: auto,\n  b: baseline,\n  c: center,\n  fe: flex-end,\n  fs: flex-start,\n  s: stretch\n);\n\n$_jigsass-flex-jc-vals: (\n  c: center,\n  fe: flex-end,\n  fs: flex-start,\n  sa: space-around,\n  sb: space-between\n);\n\n$_jigsass-flex-fxw-vals: (\n  n: nowrap,\n  w: wrap,\n  wr: wrap-reverse,\n);\n\n$_jigsass-flex-fxd-vals: (\n  c: column,\n  cr: column-reverse,\n  r: row,\n  rr: row-reverse,\n);\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-util-flex-i: 1;\n$_jigsass-util-flex-addition: (\n  u-ac: 0,\n  u-ai: 10,\n  u-as: 20,\n  u-jc: 30,\n  u-fb: 40,\n  u-fxg: 100,\n  u-fxsh: 150,\n  u-fxw: 200,\n  u-fxd: 210,\n  u-ord: 220\n);\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-util(u-ac) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-flexbox: #{$jigsass-util-name} must be passed an alignment ' +\n      'value through a modifier.';\n  }\n\n  $value: map-get($_jigsass-flex-ac-vals, $jigsass-util-modifier);\n\n  @if (not $value) {\n    @warn '#{$jigsass-util-modifier} is not a valid modifier for `#{$jigsass-util-name}`';\n  }\n  @else {\n    align-content: $value;\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Flexbox Utils\ntitle: Align Content: #{$value}\norder: #{$_jigsass-util-flex-i + map-get($_jigsass-util-flex-addition, $jigsass-util-name)}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for setting an element's `align-content` value to #{$value}.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper demo-wrap u-ac--#{$jigsass-util-modifier}\" style=\"height: 15rem;\">\n  <div class=\"fpo\" style=\"width: 40%;\"></div>\n  <div class=\"fpo\" style=\"width: 40%;\"></div>\n  <div class=\"fpo\" style=\"width: 40%;\"></div>\n  <div class=\"fpo\" style=\"width: 40%;\"></div>\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-flex-i: $_jigsass-util-flex-i + 1 !global;\n    }\n  }\n}\n\n\n@include jigsass-define-util(u-ai) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-flexbox: #{$jigsass-util-name} must be passed an alignment ' +\n      'value through a modifier.';\n  }\n\n  $value: map-get($_jigsass-flex-ai-vals, $jigsass-util-modifier);\n\n  @if (not $value) {\n    @warn '#{$jigsass-util-modifier} is not a valid modifier for `#{$jigsass-util-name}`';\n  }\n  @else {\n    align-items: $value;\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Flexbox Utils\ntitle: Align Items: #{$value}\norder: #{$_jigsass-util-flex-i + map-get($_jigsass-util-flex-addition, $jigsass-util-name)}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for setting an element's `align-items` value to #{$value}.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper u-ai--#{$jigsass-util-modifier}\">\n  <div class=\"fpo\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te.\n  </div>\n  <div class=\"fpo\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his. Est an integre offendit instructior. Ea sed cibo dolor, vel an nostro ceteros democritum. Vel at ipsum commodo similique, at vix soluta eruditi assueverit, pro dico utinam forensibus ei. Ullum propriae pro no.\n  </div>\n  <div class=\"fpo\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his.\n  </div>\n  <div class=\"fpo\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his. Est an integre offendit instructior. Ea sed cibo dolor, vel an nostro ceteros democritum. Vel at ipsum commodo similique.\n  </div>\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-flex-i: $_jigsass-util-flex-i + 1 !global;\n    }\n  }\n}\n\n\n@include jigsass-define-util(u-as) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-flexbox: #{$jigsass-util-name} must be passed an alignment ' +\n      'value through a modifier.';\n  }\n\n  $value: map-get($_jigsass-flex-as-vals, $jigsass-util-modifier);\n\n  @if (not $value) {\n    @warn '#{$jigsass-util-modifier} is not a valid modifier for `#{$jigsass-util-name}`';\n  }\n  @else {\n    align-self: $value;\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Flexbox Utils\ntitle: Align Self: #{$value}\norder: #{$_jigsass-util-flex-i + map-get($_jigsass-util-flex-addition, $jigsass-util-name)}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for setting an element's `align-self` value to #{$value}.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper\" style=\"align-items: #{if($jigsass-util-modifier == fs, 'flex-end', 'flex-start')}\";>\n  <div class=\"fpo\" style=\"width: 25%\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his. Est an integre offendit instructior. Ea sed cibo dolor, vel an nostro ceteros democritum. Vel at ipsum commodo similique, at vix soluta eruditi assueverit, pro dico utinam forensibus ei. Ullum propriae pro no.\n  </div>\n  <div class=\"fpo u-as--#{$jigsass-util-modifier}\" style=\"width: 25%\">\n    This element's <code>align-self</code> property is set to <code>#{$value}</code>\n  </div>\n  <div class=\"fpo\" style=\"width: 25%\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his.\n  </div>\n  <div class=\"fpo\" style=\"width: 25%\">\n    Lorem ipsum dolor sit amet, pro postea officiis periculis te. Ad mel tale suas vidit, stet docendi eloquentiam ut his. Est an integre offendit instructior. Ea sed cibo dolor, vel an nostro ceteros democritum. Vel at ipsum commodo similique.\n  </div>\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-flex-i: $_jigsass-util-flex-i + 1 !global;\n    }\n  }\n}\n\n\n@include jigsass-define-util(u-jc) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-flexbox: #{$jigsass-util-name} must be passed an alignment ' +\n      'value through a modifier.';\n  }\n\n  $value: map-get($_jigsass-flex-jc-vals, $jigsass-util-modifier);\n\n  @if (not $value) {\n    @warn '#{$jigsass-util-modifier} is not a valid modifier for `#{$jigsass-util-name}`';\n  }\n  @else {\n    justify-content: $value;\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Flexbox Utils\ntitle: Justify Content: #{$value}\norder: #{$_jigsass-util-flex-i + map-get($_jigsass-util-flex-addition, $jigsass-util-name)}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for setting an element's `justify-content` value to #{$value}.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper u-jc--#{$jigsass-util-modifier}\">\n  <div class=\"fpo\" style=\"width: 33%\"></div>\n  <div class=\"fpo\" style=\"width: 33%\"></div>\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-flex-i: $_jigsass-util-flex-i + 1 !global;\n    }\n  }\n}\n\n\n@include jigsass-define-util(u-fb) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-flexbox: #{$jigsass-util-name} must be passed a ' +\n      'value through a modifier.';\n  }\n\n  $value: if(\n    $jigsass-util-modifier == a,\n    auto,\n    if(type-of($jigsass-util-modifier) == number, $jigsass-util-modifier, false)\n  );\n\n  @if (not $value) {\n    @warn 'values for `flex-basis` can only be `auto` or a length. You are trying to pass ' +\n      '`#{$jigsass-util-modifier}`, which is a #{type-of($jigsass-util-modifier)}.';\n  }\n  @else {\n    flex-basis: $value;\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Flexbox Utils\ntitle: Flex Basis: #{$value}\norder: #{$_jigsass-util-flex-i + map-get($_jigsass-util-flex-addition, $jigsass-util-name)}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for setting an element's `flex-basis` value to #{$value}.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper\">\n  <div class=\"fpo\"></div>\n  <div class=\"fpo  u-fb--#{$jigsass-util-modifier}\">flex-basis: #{$jigsass-util-modifier}</div>\n  <div class=\"fpo\"></div>\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-flex-i: $_jigsass-util-flex-i + 1 !global;\n    }\n  }\n}\n\n\n@include jigsass-define-util(u-fxg) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-flexbox: #{$jigsass-util-name} must be passed a unitless number' +\n      'as a modifier.';\n  }\n\n  $value: if(\n    type-of($jigsass-util-modifier) == number and unitless($jigsass-util-modifier),\n    $jigsass-util-modifier,\n    false\n  );\n\n  @if (not $value) {\n    @warn 'values for `flex-grow` can only be a unitless number. ' +\n      '`#{$jigsass-util-modifier}`, is a #{type-of($jigsass-util-modifier)}.';\n  }\n  @else {\n    flex-grow: $value;\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Flexbox Utils\ntitle: Flex Grow: #{$value}\norder: #{$_jigsass-util-flex-i + map-get($_jigsass-util-flex-addition, $jigsass-util-name)}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for setting an element's `flex-grow` value to #{$value}.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-flex-i: $_jigsass-util-flex-i + 1 !global;\n    }\n  }\n}\n\n\n@include jigsass-define-util(u-fxsh) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-flexbox: #{$jigsass-util-name} must be passed a unitless number' +\n      'as a modifier.';\n  }\n\n  $value: if(\n    type-of($jigsass-util-modifier) == number and unitless($jigsass-util-modifier),\n    $jigsass-util-modifier,\n    false\n  );\n\n  @if (not $value) {\n    @warn 'values for `flex-shrink` can only be a unitless number. ' +\n      '`#{$jigsass-util-modifier}`, is a #{type-of($jigsass-util-modifier)}.';\n  }\n  @else {\n    flex-shrink: $value;\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Flexbox Utils\ntitle: Flex Shrink: #{$value}\norder: #{$_jigsass-util-flex-i + map-get($_jigsass-util-flex-addition, $jigsass-util-name)}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for setting an element's `flex-shrink` value to #{$value}.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-flex-i: $_jigsass-util-flex-i + 1 !global;\n    }\n  }\n}\n\n\n@include jigsass-define-util(u-fxw) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-flexbox: #{$jigsass-util-name} must be passed a ' +\n      'value through a modifier.';\n  }\n\n  $value: map-get($_jigsass-flex-fxw-vals, $jigsass-util-modifier);\n\n  @if (not $value) {\n    @warn '#{$jigsass-util-modifier} is not a valid modifier for `#{$jigsass-util-name}`';\n  }\n  @else {\n    flex-wrap: $value;\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Flexbox Utils\ntitle: Flex Wrap: #{$value}\norder: #{$_jigsass-util-flex-i + map-get($_jigsass-util-flex-addition, $jigsass-util-name)}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for setting an element's `flex-wrap` value to #{$value}.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper u-fxw--#{$jigsass-util-modifier}\">\n  <div class=\"fpo\" style=\"width: 40%\"></div>\n  <div class=\"fpo\" style=\"width: 40%\"></div>\n  <div class=\"fpo\" style=\"width: 40%\"></div>\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-flex-i: $_jigsass-util-flex-i + 1 !global;\n    }\n  }\n}\n\n\n@include jigsass-define-util(u-fxd) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-flexbox: #{$jigsass-util-name} must be passed a ' +\n      'value through a modifier.';\n  }\n\n  $value: map-get($_jigsass-flex-fxd-vals, $jigsass-util-modifier);\n\n  @if (not $value) {\n    @warn '#{$jigsass-util-modifier} is not a valid modifier for `#{$jigsass-util-name}`';\n  }\n  @else {\n    flex-direction: $value;\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Flexbox Utils\ntitle: Flex Direction: #{$value}\norder: #{$_jigsass-util-flex-i + map-get($_jigsass-util-flex-addition, $jigsass-util-name)}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for setting an element's `flex-direction` value to #{$value}.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper u-fxd--#{$jigsass-util-modifier}\">\n  <div class=\"fpo\">item 1</div>\n  <div class=\"fpo\">item 2</div>\n  <div class=\"fpo\">item 3</div>\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-flex-i: $_jigsass-util-flex-i + 1 !global;\n    }\n  }\n}\n\n\n@include jigsass-define-util(u-ord) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-flexbox: #{$jigsass-util-name} must be passed a ' +\n      'number as a modifier.';\n  }\n\n  $value: $jigsass-util-modifier;\n\n  @if (type-of($value) == string and str-index($value, min-) == 1) {\n    $_num: str-slice($value, 5);\n    $value: -1 * jigsass-str-to-number($_num);\n  }\n\n  @if (type-of($value) != number) {\n    @warn '#{$jigsass-util-modifier} is not a valid modifier for `#{$jigsass-util-name}`';\n  }\n  @else {\n    order: $value;\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Flexbox Utils\ntitle:  Order:  #{$value}\norder: #{$_jigsass-util-flex-i + map-get($_jigsass-util-flex-addition, $jigsass-util-name)}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for setting an element's `flex-direction` value to #{$value}.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n```example:html\n<div class=\"demo-wrapper\">\n  <div class=\"fpo  fpo--b\">item 1</div>\n  <div class=\"[ fpo fpo--b ] u-ord--#{$jigsass-util-modifier}\">item 2</div>\n  <div class=\"fpo fpo--b\">item 3</div>\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-flex-i: $_jigsass-util-flex-i + 1 !global;\n    }\n  }\n}\n","// *************************************\n//\n// # EXTRA FORM\n// -> Styles for the Extra from\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n@mixin c-extra-form {\n  @include jigsass-component(extra-form) {\n    // -------------------------------------\n    // Base\n    // -------------------------------------\n    // .c-extra-form {}\n\n\n\n\n\n    // -------------------------------------\n    // Modifiers\n    // -------------------------------------\n\n    .c-extra-form__title {\n      @include jigsass-util('u-d', $modifier: 'f');\n      @include jigsass-util('u-bgc', $modifier: 'neutral(jigsass-tint,2)');\n      @include jigsass-util('u-c', $modifier: 'text--inverse');\n      @include jigsass-util('u-fxg', $modifier: 1);\n      @include jigsass-util('u-p', $modifier: 1);\n      @include jigsass-util('u-ps', $modifier: 2, $from: 's');\n      @include jigsass-util('u-type', $modifier: 'delta');\n    }\n\n    .c-extra-form__tagline {\n      @include jigsass-util('u-c', $modifier: 'text-muted');\n      @include jigsass-util('u-fw', $modifier: 400);\n      @include jigsass-util('u-is-hidden', $until: 'l');\n    }\n\n    .c-extra-form__form {\n      @include jigsass-util('u-autospace', $modifier: 3);\n    }\n\n    .c-extra-form__headline {\n      @include jigsass-util('u-fw', $modifier: 700);\n      @include jigsass-util('u-mb', $modifier: 1);\n      @include jigsass-util('u-type', $modifier: 'epsilon');\n    }\n\n    .c-extra-form__details {\n      @include jigsass-util('u-maw', $modifier: 60, $from: 'm');\n    }\n\n    .c-extra-form__detail {\n      // On label\n      @include jigsass-util('u-d', $modifier: 'f');\n\n      // On input wrappers\n      @include jigsass-util('u-d', $modifier: 'b');\n      @include jigsass-util('u-fxg', $modifier: 1);\n\n      //On notes\n      @include jigsass-util('u-type', $modifier: 'micro');\n      @include jigsass-util('u-va', $modifier: 't');\n    }\n\n    .c-extra-form__detail-label {\n      @include jigsass-util('u-fw', $modifier: 700);\n      @include jigsass-util('u-miw', $modifier: 10);\n      @include jigsass-util('u-pe', $modifier: 1);\n    }\n\n    .c-extra-form__phone {\n      // On prefix input\n      @include jigsass-util('u-ms', $modifier: 1);\n      @include jigsass-util('u-w', $modifier: 8);\n    }\n\n    .c-extra-form__regulations-modal {\n      // On wrapper\n      @include jigsass-util('u-pos', $modifier: 'f');\n\n      // On dialog\n      @include jigsass-util('u-mah', $modifier: 90vh);\n      @include jigsass-util('u-maw', $modifier: 65vh);\n      @include jigsass-util('u-p', $modifier: 2);\n      @include jigsass-util('u-w', $modifier: 90%);\n\n      // On headline\n      @include jigsass-util('u-c', $modifier: 'primary');\n      @include jigsass-util('u-fw', $modifier: 700);\n      @include jigsass-util('u-mb', $modifier: 2);\n      @include jigsass-util('u-type', $modifier: 'delta');\n\n      // On `ol`\n      @include jigsass-util('u-autospace', $modifier: 3);\n      @include jigsass-util('u-ps', $modifier: 2em);\n\n      // `li  ul` and multi paragraph `li`s\n      @include jigsass-util('u-autospace', $modifier: 2);\n\n      // On close-button\n      @include jigsass-util('u-end', $modifier: 0);\n      @include jigsass-util('u-pos', $modifier: 'a');\n      @include jigsass-util('u-t', $modifier: 0);\n      @include jigsass-util('u-type', $modifier: 'delta');\n    }\n\n\n\n\n\n    // -------------------------------------\n    // Items\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // States\n    // -------------------------------------\n\n    //\n\n\n\n\n\n    // -------------------------------------\n    // Context\n    // -------------------------------------\n\n    //\n\n\n\n\n\n  }\n}\n\n","// *************************************\n//\n// # jigsass-utils-float\n// -> Float-related utility classes\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhawks.github.com/jigsass-utils-float/\n//\n// *************************************\n\n@charset 'UTF-8';\n\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-flot` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Float Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated float and clear utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-fl--start`: float: (left|right) (left in `LTR`, right in `RTL`)\n    - `[dir=ltr] .u-fl--start`: float: left\n    - `[dir=rtl] .u-fl--start`: float: right\n  - `.u-fl--end`: float: (right|left) (right in `LTR`, left in `RTL`)\n    - `[dir=ltr] .u-fl--end`: float: right\n    - `[dir=rtl] .u-fl--end`: float: left\n  - `.u-fl--n`: float: none\n  - `.u-fl--l`: float: left\n  - `.u-fl--r`: float: right\n\n  - `.u-cl--start`: clear: (left|right) (left in `LTR`, right in `RTL`)\n    - `[dir=ltr] .u-cl--start`: clear: left\n    - `[dir=rtl] .u-cl--start`: clear: right\n  - `.u-cl--end`: clear: (right|left) (right in `LTR`, left in `RTL`)\n    - `[dir=ltr] .u-cl--end`: clear: right\n    - `[dir=rtl] .u-cl--end`: clear: left\n  - `.u-cl--b`: clear: both\n  - `.u-cl--n`: clear: none\n  - `.u-cl--l`: clear: left\n  - `.u-cl--r`: clear: right\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-float\n```\n\n#### Usage\nImport JigSass Utils Float into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-float/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Float does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual float or clear\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-fl, $modifier: n); // <-- float: none;\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-cl, $modifier: b);  // <-- clear: both\n  @include jigsass-util(u-cl, $modifier: r, $from: large); // <-- clear: right from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Float partial was imported into the main file.\n\n\nJigSass Float classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a float or clear class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-fl--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-fl, $modifier: end);\n```\nwill generate the `.u-fl--end` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-fl, $modifier: start, $until: medium);\n```\n\nwill generate the `.u-fl--start--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-fl, $modifier: c, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-fl--c--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// A constant used for generating float and clear utility classes.\n/// ---\n/// @type Map\n/// ---\n$_jigsass-float-map: (\n  n: none,\n  l: left,\n  b: both,\n  r: right,\n  start: start,\n  end: end\n);\n\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-util-fl-i: 1;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@each $util in u-fl u-cl {\n  @include jigsass-define-util($util) {\n    @if (not $jigsass-util-modifier) {\n      @error 'jigsass-utils-text: #{$jigsass-util-name} must be passed A ' +\n        'value through a modifier.';\n    }\n\n    $_prop: if(str-slice($jigsass-util-name, 3) == fl, float, clear);\n    $_value: map-get($_jigsass-float-map, $jigsass-util-modifier);\n\n    @if ($jigsass-util-modifier == start) {\n      @include jigsass-bidi($_prop, $_value);\n\n      [dir=ltr] & {\n        #{$_prop}: left;\n      }\n\n      [dir=rtl] & {\n        #{$_prop}: right;\n      }\n    }\n    @else if ($jigsass-util-modifier == end) {\n      @include jigsass-bidi($_prop, $_value);\n\n      [dir=ltr] & {\n        #{$_prop}: right;\n      }\n\n      [dir=rtl] & {\n        #{$_prop}: left;\n      }\n    }\n    @else if (\n      $_prop == clear or\n      $_value != both\n    ) {\n      #{$_prop}: $_value;\n    }\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (\n      not index($_doclet-store, $_doclet) and\n      ($_prop == clear or $_value != both)\n    ) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      $_order: if($_prop == fl, 0, 100);\n      // stylelint-disable\n\n/* ---\nsection: Float Utils\ntitle: #{$_prop} #{map-get($_jigsass-float-map, $jigsass-util-modifier)}\norder: #{$_jigsass-util-fl-i + $_order}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\n#{if(\n  $_prop == float,\n  if($_value == none, 'Prevent an element from being floated', 'Float an element to the ' + $_value),\n  if($_value == none, 'Prevent an element from being cleared', 'Clear an element on its ' + $_value)\n)}\n\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo  #{$jigsass-util-name}--#{$jigsass-util-modifier}'>\n#{if(\n  $_value == none,\n  'This element is not ' + $_prop + 'ed.',\n  if(\n    $_value == both,\n    This element is cleared on both it sides,\n    'This element is ' + $_prop + 'ed' + if($_prop == float, ' to the ', ' on its ') + $_value\n  )\n)}\n</p>\n```\n*/\n      $_jigsass-util-fl-i: $_jigsass-util-fl-i + 1 !global;\n      // stylelint-enable\n    }\n  }\n}\n","// *************************************\n//\n// # jigsass-utils-offset\n// -> Utility classes for offsetting positioned elements\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhawks.github.io/jigsass-tools-offset/\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-offset` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before importing this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Offset Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA collection of dynamically generated utility classes for offsetting positioned elements.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-t--<amount>`: top\n  - `.u-end--<amount>`: horizontal end (right in `ltr`, right in `ltr`)\n  - `.u-r--<amount>`: right\n  - `.u-b--<amount>`: bottom\n  - `.u-start--<amount>`: horizontal start (left in `ltr`, left in `ltr`)\n  - `.u-l--<amount>`: left\n\nWhere `<amount>` can be either a unitless number representing a number of\ntypographic rhythm units as defined in\n[$jigsass-sizes](https://txhawks.github.io/jigsass-tools-typography/#variable-jigsass-sizes)\na percentage, or a length specified in pixels.\n\nJigSass Offset also supports negative offsets, using `min-<number>` modifiers\n(e.g., `h-t--min-4`), as well as auto ofsets (e.g., `h-b--auto`).\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-offset\n```\n\n#### Usage\nImport JigSass Utils Offset into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-offset/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Offset does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual offset\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-t, $modifier: 6px); // <-- top: 6px\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-b, $modifier: 12px);  // <-- bottom: 12px\n  @include jigsass-util(u-b, $modifier: 0, $from: large); // <-- bottom: 0 from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Offset partial was imported into the main file.\n\n\nJigSass Offset classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a Offset class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-t--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-t, $modifier: 2);\n```\nwill generate the `.u-t--2` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-b, $modifier: min-4, $until: medium);\n```\n\nwill generate the `.u-b--min-4--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-l, $modifier: 20%, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-l--20%--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-offset.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-offset\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-offset.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-offset\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// A constant for translating util names to properties.\n/// ---\n/// @type Map\n/// ---\n/// @access private\n/// ---\n$_jigsass-offset-sides: (\n  u-t: top,\n  u-r: right,\n  u-b: bottom,\n  u-l: left,\n  u-start: start,\n  u-end: end\n);\n\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally for ordering doclets\n$_jigsass-util-offset-i: 1;\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@each $util-name, $side in $_jigsass-offset-sides {\n  @include jigsass-define-util($util-name) {\n    $_type: map-get($_jigsass-offset-sides, $jigsass-util-name);\n\n    @if(not $jigsass-util-modifier) {\n      @error 'jigsass-utils-offset: #{$jigsass-util-name} must be passed a ' +\n        'value as a modifier.';\n    }\n\n    $_auto: $jigsass-util-modifier == auto;\n    $_neg: type-of($jigsass-util-modifier) != number and\n      str-index($jigsass-util-modifier, min-) == 1;\n    $_modifier: if(\n      $_neg,\n      jigsass-str-to-number(str-slice($jigsass-util-modifier, 4)),\n      $jigsass-util-modifier\n    );\n\n    @if(\n      not $_auto and\n      (type-of($_modifier) != number or not index(px '' '%', unit($_modifier)))\n    ) {\n      @error 'jigsass-utils-offset: A length modifier must be a unitless number,' +\n        'a percentage or a length in pixels to #{$jigsass-util-name}. \\a' +\n        'You are trying to pass the #{type-of($_modifier)} `#{$jigsass-util-modifier}`.';\n    }\n\n    // When length is in rhythm units\n    @if (not $_auto and unitless($_modifier)) {\n      @if ($_type == start) {\n        @include jigsass-bidi(\n          start,\n          jigsass-rhythm($_modifier, $unit: rem),\n          $rem: true\n        );\n\n        [dir=ltr] & {\n          @include jigsass-rem(\n            left,\n            jigsass-rhythm($_modifier, $unit: rem)\n          );\n        }\n\n        [dir=rtl] & {\n          @include jigsass-rem(\n            right,\n            jigsass-rhythm($_modifier, $unit: rem)\n          );\n        }\n      }\n      @else if ($_type == end) {\n        @include jigsass-bidi(\n          end,\n          jigsass-rhythm($_modifier, $unit: rem),\n          $rem: true\n        );\n\n        [dir=ltr] & {\n          @include jigsass-rem(\n            right,\n            jigsass-rhythm($_modifier, $unit: rem)\n          );\n        }\n\n        [dir=rtl] & {\n          @include jigsass-rem(\n            left,\n            jigsass-rhythm($_modifier, $unit: rem)\n          );\n        }\n      }\n      @else {\n        @include jigsass-rem(\n          $_type,\n          jigsass-rhythm($_modifier, $unit: rem)\n        );\n      }\n    }\n\n    // When modifier is auto or length is in pixels\n    @else {\n      @if ($_type == start) {\n        @include jigsass-bidi(start, $_modifier, $rem: false);\n\n        [dir=ltr] & {\n          left: $_modifier;\n        }\n\n        [dir=rtl] & {\n          right: $_modifier;\n        }\n      }\n      @else if ($_type == end) {\n        @include jigsass-bidi($_type, $_modifier, $rem: false);\n\n        [dir=ltr] & {\n          right: $_modifier;\n        }\n\n        [dir=rtl] & {\n          left: $_modifier;\n        }\n      }\n      @else {\n        #{$_type}: $_modifier;\n      }\n    }\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    $_side: if(index(start end, $_type), horizontal $_type, $_type);\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection:  Offset Utils\ntitle: #{$jigsass-util-name}--#{$jigsass-util-modifier}\norder: #{$_jigsass-util-offset-i}\n---\nA utility class to set the #{$_side} offset of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  #{$jigsass-util-name}--#{$jigsass-util-modifier}'>\n  This element's #{$_side} offest is set to\n  #{$_modifier}#{if(type-of($_modifier) == number and unitless($_modifier), ' rhythm units', '')}\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-offset-i: $_jigsass-util-offset-i + 1 !global;\n    }\n  }\n}\n","// *************************************\n//\n// # jigsass-utils-overflow\n// -> Overflow utility classes\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhawks.github.io/jigsass-utils-overflow/\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-overflow` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before importing this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Overflow Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated `overflow` utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\nE.g., the `overflow: hidden` utility class name is `.u-ov--h`.\n\n#### Available classes\n\n  - `.u-ov--v` (overflow: visible)\n  - `.u-ov--h` (overflow: hidden)\n  - `.u-ov--s` (overflow: scroll)\n  - `.u-ov--a` (overflow: auto)\n\n\n  - `.u-ovx--v` (overflow-x: visible)\n  - `.u-ovx--h` (overflow-x: hidden)\n  - `.u-ovx--s` (overflow-x: scroll)\n  - `.u-ovx--a` (overflow-x: auto)\n\n\n  - `.u-ovy--v` (overflow-y: visible)\n  - `.u-ovy--h` (overflow-y: hidden)\n  - `.u-ovy--s` (overflow-y: scroll)\n  - `.u-ovy--a` (overflow-y: auto)\n\n\n  - `.u-tov--c` (text-overflow: clamp)\n  - `.u-tov--e` (text-overflow: ellipsis)\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-overflow\n```\n\n#### Usage\nImport JigSass Utils Overflow into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-overflow/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Overfolow does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual overflow\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-ov, $modifier: h); // <-- overfolow: hidden\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-ovx, $modifier: h);  // <-- overflow-x: hidden\n  @include jigsass-util(u-ovx, $modifier: s, $from: large); // <-- overflow-x: scroll from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Overflow partial was imported into the main file.\n\n\nJigSass Overflow classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a overflow class, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.u-ov--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n.u-ovx--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n.u-ovy--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n.u-tov--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-ov, $modifier: h);\n```\nwill generate the `.u-ov--h` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-ov, $modifier: h, $until: medium);\n```\n\nwill generate the `.u-ov--h--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-ov, $modifier: h, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-ov--h--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n$_jigsass-overflow-props: (\n  u-ov: overflow,\n  u-ovx: overflow-x,\n  u-ovy: overflow-y,\n  u-tov: text-overflow,\n);\n$_jigsass-overflow-vals: (\n  a: auto,\n  c: clip,\n  e: ellipsis,\n  h: hidden,\n  s: scroll,\n  v: visible,\n);\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-util-ov-i: 1;\n$_jigsass-util-ov-addition: (u-ov: 0, u-ovx: 100, u-ovy: 200, u-tov: 300);\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@each $util in map-keys($_jigsass-overflow-props) {\n  @include jigsass-define-util($util) {\n    @if (not $jigsass-util-modifier) {\n      @error 'jigsass-utils-overflow: #{$jigsass-util-name} must be passed an overflow ' +\n        'value through a modifier.';\n    }\n\n    $prop: map-get($_jigsass-overflow-props, $jigsass-util-name);\n    $val: map-get($_jigsass-overflow-vals, $jigsass-util-modifier);\n\n\n    #{$prop}: $val;\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Overflow Utils\ntitle: #{$prop} #{$val}\norder: #{$_jigsass-util-ov-i + map-get($_jigsass-util-ov-addition, $jigsass-util-name)}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for setting an element's #{$prop} to #{$val}.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo #{if($jigsass-util-name == u-tov, 'u-ov--h fpo--x', '')} #{if($jigsass-util-name == u-ovx, fpo--x, '')} #{$jigsass-util-name}--#{$jigsass-util-modifier}'>\n  This element's #{$prop} is set to #{$val}.\n  Lorem ipsum dolor sit amet, nam cu clita persius eruditi, qui ei explicari persecuti. Ut vim nominavi quaestio rationibus, sed graeci labore utroque at, agam lucilius perpetua quo et. Te vis modus volumus menandri, doctus pericula at eos, autem omittantur ius ut. Ea quo tantas graece mandamus. In nibh iriure molestie pri, te eam quot consul quaerendum, ius ea justo neglegentur\n</p>\n```\n*/\n      $_jigsass-util-ov-i: $_jigsass-util-ov-i + 1 !global;\n      // stylelint-enable\n    }\n  }\n}\n","// *************************************\n//\n// # jigsass-utils-position\n// -> A collection of dynamically generated utility classes for setting CSS position values\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhawks.github.io/jigsass-utils-position/\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-position` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before importing this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Position Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA collection of dynamically generated `position` utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions (It modifiies the user agent's default position for the element).\nE.g., the `position: absolute` utility class name is `.u-pos--a`.\n\n#### Available classes\n  - `.u-pos--a` (position: absolute)\n  - `.u-pos--f` (position: fixed)\n  - `.u-pos--r` (position: relative)\n  - `.u-pos--s` (position: static)\n  - `.u-pos--stck` (position: sticky)\n\nAdditionally, JigSass Position provides the following helpers:\n  - `.u-pos--center` Used for vertically and horizontally centering `absolute` and `fixed`\n    positioned elements inside their first non-statically positioned ancestor (or `window`).\n    Will also work for `relative` positioned elements inside containers with explicit heights.\n  - `.u-pos--stretch` Used for stretching `absolute` and `fixed` positioned elements to the\n    dimensions of their first non-statically positioned ancestor (or `window`).\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-position\n```\n\n#### Usage\nImport JigSass Utils Position into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-position/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Position does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual class\nshould actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-pos, $modifier: a); // <-- position: absolute\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-pos, $modifier: r);  // <-- position: relative\n  @include jigsass-util(\n    u-pos,\n    $modifier: f,\n    $from: large\n  ); // <-- position: fixed, from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Position partial was imported into the main file.\n\n\nJigSass Position classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a position class, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.u-pos--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-pos, $modifier: f);\n```\nwill generate the `.u-pos--f` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-pos, $modifier: f, $until: medium);\n```\n\nwill generate the `.u-pos--f--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-pos, $modifier: f, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-pos--f--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-position.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-position\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-position.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-position\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// A constant for translating modifiers to style declarations.\n/// ---\n/// @type Map\n/// ---\n/// @access private\n/// ---\n$_jigsass-position-mod-to-style: (\n  a: absolute,\n  f: fixed,\n  r: relative,\n  s: static,\n  stck: sticky,\n);\n\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-util-position-i: 1;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-util(u-pos) {\n  @if ($jigsass-util-modifier == center) {\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n\n    $_doclet: $jigsass-util-name + $jigsass-util-modifier;\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Position Utils\ntitle: u-pos--#{$jigsass-util-modifier}\norder: #{$_jigsass-util-position-i} + 100\n---\nA utility class for vertically and horizontally centering `absolute` and `fixed`\npositioned elements inside their first non-statically positioned ancestor (or `window`).\nWill also work for `relative` positioned elements inside containers with explicit heights.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pos, $modifier: #{map-get($_jigsass-position-mod-to-style, $jigsass-util-modifier)}[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='has-fpo--fixed'>\n  <div class='[ fpo fpo--fixed ]  u-pos--#{$jigsass-util-modifier}'>\n    This div is horizontally and vertically centered inside its container.\n  </div>\n</div>\n```\n*/\n      $_jigsass-util-position-i: $_jigsass-util-position-i + 1 !global;\n      // stylelint-enable\n    }\n  }\n  @else if ($jigsass-util-modifier == stretch) {\n    bottom: 0;\n    left: 0;\n    margin: auto;\n    right: 0;\n    top: 0;\n\n    $_doclet: $jigsass-util-name + $jigsass-util-modifier;\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Position Utils\ntitle: u-pos--#{$jigsass-util-modifier}\norder: #{$_jigsass-util-position-i} + 100\n---\nA utility class for stretching `absolute` and `fixed` positioned elements to the dimensions of\ntheir first non-statically positioned ancestor (or `window`).\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pos, $modifier: #{map-get($_jigsass-position-mod-to-style, $jigsass-util-modifier)}[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='has-fpo--fixed'>\n  <div class='[ fpo fpo--fixed ]  u-pos--#{$jigsass-util-modifier}'>\n    This div is stretched to cover its container.\n  </div>\n</div>\n```\n*/\n      $_jigsass-util-position-i: $_jigsass-util-position-i + 1 !global;\n      // stylelint-enable\n    }\n  }\n  @else if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-position: You must specify a position type as a modifier';\n  }\n  @else if (not map-has-key($_jigsass-position-mod-to-style, $jigsass-util-modifier)) {\n    @error 'jigsass-utils-position: `#{$jigsass-util-modifier}` is not a valid position ' +\n      'property value abbreviation. Valid abbreviations are: \\a' +\n      '#{inspect($_jigsass-position-mod-to-style)}';\n  }\n  @else {\n    position: map-get($_jigsass-position-mod-to-style, $jigsass-util-modifier);\n\n    $_doclet: $jigsass-util-name + $jigsass-util-modifier;\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Position Utils\ntitle: u-pos--#{$jigsass-util-modifier} (#{map-get($_jigsass-position-mod-to-style, $jigsass-util-modifier)})\norder: #{$_jigsass-util-position-i}\n---\nA util to modify an element's `position` property value to\n`#{map-get($_jigsass-position-mod-to-style, $jigsass-util-modifier)}`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-pos, $modifier: #{map-get($_jigsass-position-mod-to-style, $jigsass-util-modifier)}[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-pos--#{$jigsass-util-modifier}'>\n  This div position is set to: <em>#{map-get($_jigsass-position-mod-to-style, $jigsass-util-modifier)}</em>.\n</div>\n```\n  */\n      $_jigsass-util-position-i: $_jigsass-util-position-i + 1 !global;\n      // stylelint-enable\n    }\n  }\n}\n","// *************************************\n//\n// # jigsass-utils-size\n// -> Dynamically generated size-related utility classes\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhawks.github.io/jigsass-utils-size/\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-ssize` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Intorduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Size Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA collection of dynamically generated size-related utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-w--<amount>`: width\n  - `.u-w--auto`: width: auto\n  - `.u-miw--<amount>`: min-width\n  - `.u-miw--none`: min-width: none\n  - `.u-maw--<amount>`: max-width\n  - `.u-maw--none`: max-width: none\n\n  - `.u-h--<amount>`: height\n  - `.u-h--auto`: height: auto\n  - `.u-mih--<amount>`: min-height\n  - `.u-mih--none`: min-height: none\n  - `.u-mah--<amount>`: max-height\n  - `.u-mah--none`: max-height: none\n\n\nWhere `<amount>` can be either a unitless number representing a number of\ntypographic rhythm units as defined in\n[$jigsass-sizes](https://txhawks.github.io/jigsass-tools-typography/#variable-jigsass-sizes),\na percentage, or a length specified in pixels, ems or rems, auto or none.\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-size\n```\n\n#### Usage\nImport JigSass Utils Size into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-size/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Size does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual size\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-w, $modifier: 360px); // <-- width: 360px\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-miw, $modifier: 600px);  // <-- min-width: 600px\n  @include jigsass-util(\n    u-miw, $modifier: 1200px,\n    $from: large\n  ); // <-- max-width: 1200px from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Size partial was imported into the main file.\n\n\nJigSass Size classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a Size class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-w--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-h, $modifier: 50);\n```\nwill generate the `.u-h--50` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-h, $modifier: 10, $until: medium);\n```\n\nwill generate the `.u-h--10--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-mih, $modifier: 300px, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-mih--200px--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-size.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-size\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-size.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-size\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// A constant used for generating size utility classes.\n/// ---\n/// @type Map\n/// ---\n$_jigsass-size-sizers: (\n  u-w: width,\n  u-miw: min-width,\n  u-maw: max-width,\n\n  u-h: height,\n  u-mih: min-height,\n  u-mah: max-height,\n);\n\n/// A constant used for generating size doclets.\n/// ---\n/// @type Map\n/// ---\n$_jigsass-size-translation: (\n  u-w: width,\n  u-miw: min-width,\n  u-maw: max-width,\n\n  u-h: height,\n  u-mih: min-height,\n  u-mah: max-height,\n);\n\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-util-size-i: 1;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@each $sizer, $property in $_jigsass-size-sizers {\n  @include jigsass-define-util($sizer) {\n    @if(not $jigsass-util-modifier) {\n      @error 'jigsass-utils-size: #{$jigsass-util-name} must be passed A ' +\n        'length for sizeing as a modifier.';\n    }\n\n    $_type: map-get($_jigsass-size-sizers, $jigsass-util-name);\n    $_modifier: $jigsass-util-modifier;\n    $_prop: map-get($_jigsass-size-sizers, $jigsass-util-name);\n\n    @if(\n      (not index(auto none, $_modifier)) and\n      type-of($_modifier) != number\n    ) {\n      @error 'jigsass-utils-size: A length modifier must be `auto`, `none`, ' +\n        'a css length or a unitless number. \\a' +\n        'You are trying to pass the #{type-of($_modifier)} `#{$_modifier}`.';\n    }\n\n\n    // When length is in rhythm units\n    @if (type-of($_modifier) == number and unitless($_modifier)) {\n      @include jigsass-rem($_prop, jigsass-rhythm($_modifier, $unit: rem));\n    }\n\n    // Otherwise\n    @else {\n      #{$_prop}: $_modifier;\n    }\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Size Utils\ntitle: #{$jigsass-util-name}--#{$jigsass-util-modifier}\norder: #{$_jigsass-util-size-i}\n---\nA utility class to set the #{map-get($_jigsass-size-sizers, $jigsass-util-name)} of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n  <div class='fpo  #{$jigsass-util-name}--#{$jigsass-util-modifier}'>\n    This element has a #{map-get($_jigsass-size-sizers, $jigsass-util-name)} of\n    #{ if(\n      type-of($jigsass-util-modifier) == number and unitless($jigsass-util-modifier),\n      $jigsass-util-modifier rhythm units,\n      $jigsass-util-modifier\n    )}.\n  </div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-size-i: $_jigsass-util-size-i + 1 !global;\n    }\n  }\n}\n","// *************************************\n//\n// #LAYOUT.ROW\n// -> A structural layout row.\n//\n// *************************************\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@include jigsass-util(u-cf);\n@include jigsass-util(u-w, $modifier: 100%);\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Base\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Modifiers\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Items\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// States\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Context\n// -------------------------------------\n\n//\n\n\n\n\n\n","// *************************************\n//\n// #LISTING DETAILS\n//\n// *************************************\n\n// -------------------------------------\n// Base\n// -------------------------------------\n\n@mixin c-article-entry {\n  @include jigsass-component(c-article-entry) {\n    .c-article-entry {\n      @include jigsass-util('u-mt', $modifier: 2);\n      @include jigsass-util('u-p', $modifier: 1);\n      @include jigsass-util('u-p', $modifier: 2, $from: 's');\n      @include jigsass-util('u-autospace', $modifier: 3);\n\n      // text subheads\n      h3 {\n        @include jigsass-util('u-bdb', $modifier: '1px(1,solid,border-accented)');\n        @include jigsass-util('u-c', $modifier: 'primary');\n        @include jigsass-util('u-fw', $modifier: 700);\n        @include jigsass-util('u-mt', $modifier: 4);\n        @include jigsass-util('u-type', $modifier: 'epsilon');\n      }\n\n      figure {\n        // End to end media\n        @include jigsass-util('u-mh', $modifier: min-1);\n        @include jigsass-util('u-mh', $modifier: min-2, $from: s);\n        @include jigsass-util('u-maw', $modifier: none);\n\n        figcaption {\n          @include jigsass-util('u-cf');\n          @include jigsass-util('u-fw', $modifier: 700);\n          @include jigsass-util('u-mt', $modifier: 1);\n          @include jigsass-util('u-mh', $modifier: 1);\n          @include jigsass-util('u-type', $modifier: micro);\n        }\n\n        // Tags\n        @include jigsass-util('u-d', $modifier: 'i');\n        @include jigsass-util('u-fw', $modifier: 700);\n        @include jigsass-util('u-me', $modifier: 1);\n        @include jigsass-util('u-type', $modifier: milli);\n\n        // Text link ad\n        @include jigsass-util('u-fw', $modifier: 700);\n        @include jigsass-util('u-c', $modifier: 'primary');\n      }\n    }\n\n    .c-article-entry__related {\n      @include jigsass-util('u-bdb', $modifier: '1rem(3,solid,border-accented)');\n\n      h3 {\n        @include jigsass-util('u-d', $modifier: 'ib');\n        @include jigsass-util('u-mb', $modifier: 2);\n      }\n\n      ul {\n        @include jigsass-util('u-autospace', $modifier: 1);\n        @include jigsass-util('u-c', $modifier: 'primary');\n        @include jigsass-util('u-fw', $modifier: 700);\n        @include jigsass-util('u-type', $modifier: 'milli');\n      }\n\n      // on item location\n      @include jigsass-util('u-c', $modifier: 'text-pale');\n      @include jigsass-util('u-fw', $modifier: 400);\n      @include jigsass-util('u-ps', $modifier: 1);\n    }\n  }\n}\n\n\n\n\n\n// -------------------------------------\n// Modifiers\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Items\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// States\n// -------------------------------------\n\n//\n\n\n\n\n\n// -------------------------------------\n// Context\n// -------------------------------------\n\n//\n\n\n\n\n\n","// *************************************\n//\n// # jigsass-utils-spacing\n// -> A collection of dynamically generated spacing utility classes\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhawks.github.io/jigsass-utils-spacing\n//\n// *************************************\n\n@charset 'UTF-8';\n\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-spacing` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Spacing Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA collection of dynamically generated spacing utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-m--<amount>`: margin\n  - `.u-mt--<amount>`: margin top\n  - `.u-me--<amount>`: margin end (right in `LTR`, left in `RTL`)\n  - `.u-mb--<amount>`: margin bottom\n  - `.u-ms--<amount>`: margin start (left in `LTR`, right in `RTL`)\n  - `.u-mh--<amount>`: horizontal margins (left and right)\n  - `.u-mv--<amount>`: vertical margins (top and bottom)\n  - `.u-mr--<amount>`: margin right\n  - `.u-ml--<amount>`: margin left\n\n  - `.u-p--<amount>`: padding\n  - `.u-pt--<amount>`: padding top\n  - `.u-pe--<amount>`: padding end (right in `LTR`, left in `RTL`)\n  - `.u-pb--<amount>`: padding bottom\n  - `.u-ps--<amount>`: padding start (left in `LTR`, right in `RTL`)\n  - `.u-ph--<amount>`: horizontal padding\n  - `.u-pv--<amount>`: vertical padding\n  - `.u-pr--<amount>`: padding right\n  - `.u-pl--<amount>`: padding left\n\n\nWhere `<amount>` can be either a unitless number representing a number of\ntypographic rhythm units as defined in\n[$jigsass-sizes](https://txhawks.github.io/jigsass-tools-typography/#variable-jigsass-sizes)\na percentage, or a length specified in pixels.\n\nJigSass Spacing supports negative margins, using `min-<number>` modifiers\n(e.g., `h-mt--min-4`), as well as auto margins (e.g., `h-m--auto`).\n\nAdditionally, JigSass Spacing provide the autospace (`.u-autospace`) set of helper classes\nfor intelligently spacing an element's direct descendants:\n\n\n  - `.u-autospace--<amount>`\n  - `.u-autospace--<amount>(<n>up)`\n\n\n`.u-autospace--<amount>` classes will give all but the first direct descendant of the element carrying the\nclass a `margin-top` of `<amount>`.\n\nSimilarly, `.u-autospace--<amount>(<n>up)` classes will give all but the `n` direct descendants of the\nelement carrying the class a `margin-top` of `<amount>`, allowing for intelligent spacing of\ngrid-like layouts.\n\nFor an in-depth presentation of the technique, see\n[this article](http://alistapart.com/article/axiomatic-css-and-lobotomized-owls) by Heydon Pickering.\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-spacing\n```\n\n#### Usage\nImport JigSass Utils Spacing into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-spacing/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Spacing does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual spacing\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-mt, $modifier: 6px); // <-- margin-top: 6px\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-pb, $modifier: 12px);  // <-- padding-bottom: 12px\n  @include jigsass-util(u-m, $modifier: 0, $from: large); // <-- margin: 0 from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Spacing partial was imported into the main file.\n\n\nJigSass Spacing classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a Spacing class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-m--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-m, $modifier: 2);\n```\nwill generate the `.u-m--2` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-p, $modifier: 4, $until: medium);\n```\n\nwill generate the `.u-p--4--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-mb, $modifier: 12px, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-mb--12px--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-spacing.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-spacing\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-spacing.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-spacing\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// A constant used for generating spacing utility classes.\n/// ---\n/// @type Map\n/// ---\n$_jigsass-spacing-directions: (\n  u-m: margin,\n  u-mt: margin-top,\n  u-me: margin-end,\n  u-mb: margin-bottom,\n  u-ms: margin-start,\n  u-mh: margin-left margin-right,\n  u-mv: margin-bottom margin-top,\n  u-mr: margin-right,\n  u-ml: margin-left,\n  u-p: padding,\n  u-pt: padding-top,\n  u-pe: padding-end,\n  u-pb: padding-bottom,\n  u-ps: padding-start,\n  u-ph: padding-left padding-right,\n  u-pv: padding-bottom padding-top,\n  u-pr: padding-right,\n  u-pl: padding-left,\n);\n\n/// A constant used for generating spacing doclets.\n/// ---\n/// @type Map\n/// ---\n$_jigsass-spacing-translation: (\n  u-m: 'margin on all sides',\n  u-mt: 'top margin',\n  u-me: 'margin on the horizontal end',\n  u-mb: 'bottom margin',\n  u-ms: 'margin on the horizontal start',\n  u-mh: 'horizontal (left and right) margins',\n  u-mv: 'vertical (top and bottom) margins',\n  u-mr: 'right margin',\n  u-ml: 'left margin',\n  u-p: 'padding',\n  u-pt: 'top padding',\n  u-pe: 'padding on the horizontal end',\n  u-pb: 'bottom padding',\n  u-ps: 'padding on the horizontal start',\n  u-ph: 'horizontal (left and right) padding',\n  u-pv: 'vertical (tiop and bottom) padding',\n  u-pr: 'right padding',\n  u-pl: 'left padding',\n);\n\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-util-spacing-i: 1;\n$_jigsass-util-spacing-addition: (\n  u-m: 100,\n  u-mt: 200,\n  u-me: 300,\n  u-mb: 400,\n  u-ms: 500,\n  u-mh: 600,\n  u-mv: 700,\n  u-mr: 800,\n  u-ml: 900,\n  u-p: 1000,\n  u-pt: 1100,\n  u-pe: 1200,\n  u-pb: 1300,\n  u-ps: 1400,\n  u-ph: 1500,\n  u-pv: 1600,\n  u-pr: 1700,\n  u-pl: 1800,\n);\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n// Auto space\n@include jigsass-define-util('u-autospace') {\n  @if(not $jigsass-util-modifier) {\n    @error 'jigsass-utils-spacing: #{$jigsass-util-name} must be passed a ' +\n      'spacing length as a modifier.';\n  }\n  $modifier: $jigsass-util-modifier;\n  $columns: false;\n\n  @if (type-of($modifier) != number) {\n    $parsed-mod-values: jigsass-parse-modifier($jigsass-util-modifier);\n    $modifier: jigsass-str-to-number(map-get($parsed-mod-values, modifier));\n\n    @if (type-of($modifier) != number) {\n      @error 'jigsass-utils-spacing: #{$jigsass-util-name} must be passed a ' +\n        'spacing length as a modifier. #{$modifier} is a #{type-of($modifier)}';\n    }\n\n    $arg: nth(map-get($parsed-mod-values, args), 1);\n    $columns: jigsass-str-to-number(str-slice($arg, 1, str-length($arg) - 2));\n  }\n\n  > * + * {\n    @if ($columns) {\n      $nth: $columns  + 1;\n\n      &:nth-child(n+#{$nth}) {\n        @if (unitless($modifier)) {\n          @include jigsass-rem(margin-top, jigsass-rhythm($modifier, $unit: rem));\n        }\n        @else {\n          margin-top: $modifier;\n        }\n      }\n    }\n\n    @else if (unitless($modifier)) {\n      @include jigsass-rem(margin-top, jigsass-rhythm($modifier, $unit: rem));\n    }\n    @else {\n      margin-top: $modifier;\n    }\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Spacing Utils\ntitle: #{$jigsass-util-name}--#{$jigsass-util-modifier}\norder: #{$_jigsass-util-spacing-i}\n---\nA utility class to intelligently space the direct descendants of an element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b #{if($columns, fpo--autospace + $columns, '')} #{$jigsass-util-name}--#{$jigsass-util-modifier}'>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  <div><div class='fpo'></div></div>\n  #{if($columns and $columns > 3, \"<div><div class='fpo'></div></div>\", '')}\n  #{if($columns and $columns > 4, \"<div><div class='fpo'></div></div>\", '')}\n  #{if($columns and $columns > 5, \"<div><div class='fpo'></div></div>\", '')}\n  #{if($columns and $columns > 6, \"<div><div class='fpo'></div></div>\", '')}\n  #{if($columns and $columns > 7, \"<div><div class='fpo'></div></div>\", '')}\n  #{if($columns and $columns > 8, \"<div><div class='fpo'></div></div>\", '')}\n  #{if($columns and $columns > 9, \"<div><div class='fpo'></div></div>\", '')}\n  #{if($columns and $columns > 10, \"<div><div class='fpo'></div></div>\", '')}\n  #{if($columns and $columns > 11, \"<div><div class='fpo'></div></div>\", '')}\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-spacing-i: $_jigsass-util-spacing-i + 1 !global;\n    }\n  }\n}\n\n\n// Spacing\n@each $direction, $properties in $_jigsass-spacing-directions {\n  @include jigsass-define-util($direction) {\n    $_type: if(str-slice($jigsass-util-name, 3, 3) == m, margin, padding);\n\n    @if(not $jigsass-util-modifier) {\n      @error 'jigsass-utils-spacing: #{$jigsass-util-name} must be passed a ' +\n        'spacing length as a modifier.';\n    }\n\n    $_auto: $jigsass-util-modifier == auto;\n    $_neg: type-of($jigsass-util-modifier) != number and\n      str-index($jigsass-util-modifier, min-) == 1;\n    $_modifier: if(\n      $_neg,\n      jigsass-str-to-number(str-slice($jigsass-util-modifier, 4)),\n      $jigsass-util-modifier\n    );\n\n    @if(\n      (not index(auto none, $_modifier)) and\n      type-of($_modifier) != number\n    ) {\n      @error 'jigsass-utils-spacing: A length modifier must be `auto`, `none`, ' +\n        'a css length or a unitless number. \\a' +\n        'You are trying to pass the #{type-of($_modifier)} `#{$jigsass-util-modifier}`.';\n    }\n\n    $props: map-get($_jigsass-spacing-directions, $jigsass-util-name);\n    @each $property in $props {\n      // When length is in rhythm units\n      @if (not $_auto and unitless($_modifier)) {\n        @if (str-slice($property, -5) == start) {\n          @include jigsass-bidi(\n            $property,\n            jigsass-rhythm($_modifier, $unit: rem),\n            $rem: true\n          );\n\n          [dir=ltr] & {\n            @include jigsass-rem(\n              #{str-slice($property, 1, -7)}-left,\n              jigsass-rhythm($_modifier, $unit: rem)\n            );\n          }\n\n          [dir=rtl] & {\n            @include jigsass-rem(\n              #{str-slice($property, 1, -7)}-right,\n              jigsass-rhythm($_modifier, $unit: rem)\n            );\n          }\n        }\n        @else if (str-slice($property, -3) == end) {\n          @include jigsass-bidi(\n            $property,\n            jigsass-rhythm($_modifier, $unit: rem),\n            $rem: true\n          );\n\n          [dir=ltr] & {\n            @include jigsass-rem(\n              #{str-slice($property, 1, -5)}-right,\n              jigsass-rhythm($_modifier, $unit: rem)\n            );\n          }\n\n          [dir=rtl] & {\n            @include jigsass-rem(\n              #{str-slice($property, 1, -5)}-left,\n              jigsass-rhythm($_modifier, $unit: rem)\n            );\n          }\n        }\n        @else {\n          @include jigsass-rem(\n            $property,\n            jigsass-rhythm($_modifier, $unit: rem)\n          );\n        }\n      }\n\n      // When modifier is auto or length is in pixels\n      @else {\n        @if (str-slice($property, -5) == start) {\n          @include jigsass-bidi($property, $_modifier, $rem: false);\n\n          [dir=ltr] & {\n            #{str-slice($property, 1, -7)}-left: $_modifier;\n          }\n\n          [dir=rtl] & {\n            #{str-slice($property, 1, -7)}-right: $_modifier;\n          }\n        }\n        @else if (str-slice($property, -3) == end) {\n          @include jigsass-bidi($property, $_modifier, $rem: false);\n\n          [dir=ltr] & {\n            #{str-slice($property, 1, -5)}-right: $_modifier;\n          }\n\n          [dir=rtl] & {\n            #{str-slice($property, 1, -5)}-left: $_modifier;\n          }\n        }\n        @else {\n          #{$property}: $_modifier;\n        }\n      }\n    }\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n/* ---\nsection: Spacing Utils\ntitle: #{$jigsass-util-name}--#{$jigsass-util-modifier}\norder: #{$_jigsass-util-spacing-i + map-get($_jigsass-util-spacing-addition, $jigsass-util-name)}\n---\nA utility class to set the #{map-get($_jigsass-spacing-translation, $jigsass-util-name)} of\nan element.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo--b'>\n  <div class='fpo  #{$jigsass-util-name}--#{$jigsass-util-modifier}'>\n    This element has #{\n      if(\n        $_auto,\n        auto,\n        if(unit($_modifier) == px, a $_modifier pixels, a $_modifier rhythm units)\n      )\n    } #{map-get($_jigsass-spacing-translation, $jigsass-util-name)}.\n  </div>\n</div>\n```\n*/\n      // stylelint-enable\n      $_jigsass-util-spacing-i: $_jigsass-util-spacing-i + 1 !global;\n    }\n  }\n}\n","// *************************************\n//\n// # Text Alignment\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-text` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Text Alignment Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated text-alignment utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-ta--start`: text-align: (left|right) (left in `LTR`, right in `RTL`)\n    - `[dir=ltr] .u-ta--start`: text-align: left\n    - `[dir=rtl] .u-ta--start`: text-align: right\n  - `.u-ta--l`: text-align: left\n  - `.u-ta--c`: text-align: center\n  - `.u-ta--end`: text-align: (right|left) (right in `LTR`, left in `RTL`)\n    - `[dir=ltr] .u-ta--end`: text-align: right\n    - `[dir=rtl] .u-ta--end`: text-align: left\n  - `.u-tr--r`: text-align: right\n  - `.u-ta--j`: text-align: justify\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-text\n```\n\n#### Usage\nImport JigSass Utils Text into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-text/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Text does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual text alignment\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-ta, $modifier: c); // <-- text-align: center\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-ta, $modifier: j);  // <-- text-align: justify\n  @include jigsass-util(u-ta, $modifier: r, $from: large); // <-- text-align: right from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Text partial was imported into the main file.\n\n\nJigSass Text classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a text-alignment class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-ta--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-ta, $modifier: end);\n```\nwill generate the `.u-ta--end` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-ta, $modifier: start, $until: medium);\n```\n\nwill generate the `.u-ta--start--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-ta, $modifier: c, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-ta--c--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// A constant used for generating text-alignment utility classes.\n/// ---\n/// @type Map\n/// ---\n$_jigsass-text-aligners: (\n  l: left,\n  c: center,\n  j: justify,\n  r: right,\n  start: start,\n  end: end\n);\n\n\n// Used internally to ordering doclets\n$_jigsass-util-ta-i: 1;\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-util(u-ta) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-text: #{$jigsass-util-name} must be passed A ' +\n      'value through a modifier.';\n  }\n  @if ($jigsass-util-modifier == start) {\n    @include jigsass-bidi(text-align, $jigsass-util-modifier);\n\n    [dir=ltr] & {\n      text-align: left;\n    }\n\n    [dir=rtl] & {\n      text-align: right;\n    }\n  }\n  @else if ($jigsass-util-modifier == end) {\n    @include jigsass-bidi(text-align, $jigsass-util-modifier);\n\n    [dir=ltr] & {\n      text-align: right;\n    }\n\n    [dir=rtl] & {\n      text-align: left;\n    }\n  }\n  @else {\n    text-align: map-get($_jigsass-text-aligners, $jigsass-util-modifier);\n  }\n\n  $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n\n/* ---\nsection: Text Alignment Utils\ntitle: Align to #{map-get($_jigsass-text-aligners, $jigsass-util-modifier)}\norder: #{$_jigsass-util-ta-i}\n---\n**.#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\n#{if(\n  $jigsass-util-modifier == j,\n  A utility class for justifying blocks of text,\n  A utility class for aligning text to the horizontal map-get($_jigsass-text-aligners, $jigsass-util-modifier)\n)}\n\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo  #{$jigsass-util-name}--#{$jigsass-util-modifier}'>\n  The text in this element is #{if(\n    $jigsass-util-modifier == j,\n    justified,\n    aligned towards the horizontal map-get($_jigsass-text-aligners, $jigsass-util-modifier)\n  )}.\n</p>\n```\n*/\n    $_jigsass-util-ta-i: $_jigsass-util-ta-i + 1 !global;\n    // stylelint-enable\n  }\n}\n","// *************************************\n//\n// # Vertical Alignment\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-text` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Vertical Alignment Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated vertical-alignment utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-va--sup`: vertical-align: super\n  - `.u-va--t`: vertical-align: top\n  - `.u-va--tt`: vertical-align: text-top\n  - `.u-va--m`: vertical-align: middle\n  - `.u-va--bl`: vertical-align: baseline\n  - `.u-va--b`: vertical-align: bottom\n  - `.u-va--tb`: vertical-align: text-bottom\n  - `.u-va--sub`: vertical-align: sub\n  - `.u-va--<length>`: vertical-align: sub\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-text\n```\n\n#### Usage\nImport JigSass Utils Text into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-text/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Text does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual vertical alignment\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-va, $modifier: m); // <-- vertical-align: middle\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-va, $modifier: b);  // <-- vertical-align: bottom\n  @include jigsass-util(u-va, $modifier: t, $from: large); // <-- vertical-align: top from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Text partial was imported into the main file.\n\n\nJigSass Text classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a vertical-alignment class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-va--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-va, $modifier: bl);\n```\nwill generate the `.u-va--bl` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-va, $modifier: tt, $until: medium);\n```\n\nwill generate the `.u-va--tt--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-va, $modifier: t, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-va--t--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// A constant used for generating vertical-alignment utility classes.\n/// ---\n/// @type Map\n/// ---\n$_jigsass-text-va-vals: (\n  sup: super,\n  t: top,\n  tt: text-top,\n  m: middle,\n  bl: baseline,\n  b: bottom,\n  tb: text-bottom,\n  sub: sub\n);\n\n\n// Used internally to ordering doclets\n$_jigsass-util-va-i: 1;\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-util(u-va) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-text: #{$jigsass-util-name} must be passed A ' +\n      'value through a modifier.';\n  }\n\n  $_mod-is-num: false;\n\n  @if (type-of($jigsass-util-modifier) == number) {\n    $_mod-is-num: true;\n    vertical-align: $jigsass-util-modifier;\n  }\n  @else if (\n    type-of($jigsass-util-modifier) == string and\n    str-index($jigsass-util-modifier, min-) ==1\n  ) {\n    $_mod-is-num: true;\n    $value: -1 * jigsass-str-to-number(str-slice($jigsass-util-modifier, 5));\n\n    vertical-align: $value;\n  }\n  @else {\n    vertical-align: map-get($_jigsass-text-va-vals, $jigsass-util-modifier);\n  }\n\n  $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n\n/* ---\nsection: Vertical Alignment Utils\ntitle: V Align #{if(\n  $_mod-is-num,\n  by map-get($_jigsass-text-va-vals, $jigsass-util-modifier),\n  to map-get($_jigsass-text-va-vals, $jigsass-util-modifier)\n)}\norder: #{$_jigsass-util-va-i}\n---\n**#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for vertically aligning elements #{if(\n  $_mod-is-num,\n  by map-get($_jigsass-text-va-vals, $jigsass-util-modifier),\n  to map-get($_jigsass-text-va-vals, $jigsass-util-modifier)\n)}\n\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo'>\n  <span class='#{$jigsass-util-name}--#{$jigsass-util-modifier}'>\n    The text in this element is vertically aligned to #{map-get($_jigsass-text-va-vals, $jigsass-util-modifier)}\n  </span>\n  <span class='fpo--va #{$jigsass-util-name}--#{$jigsass-util-modifier}'></span>\n</p>\n```\n*/\n    $_jigsass-util-va-i: $_jigsass-util-va-i + 1 !global;\n    // stylelint-enable\n  }\n}\n","// *************************************\n//\n// # Text Alignment\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-text` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: White-space Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated white-space utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\n\n#### Available classes\n\n  - `.u-whs--n`: white-space: normal\n  - `.u-whs--p`: white-space: pre\n  - `.u-whs--nw`: white-space: nowrap\n  - `.u-whs--pw`: white-space: pre-wrap\n  - `.u-whs--pl`: white-space: pre-line\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-text\n```\n\n#### Usage\nImport JigSass Utils Text into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-text/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Text does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual white-space\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-whs, $modifier: nw); // <-- white-space: nowrap\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-whs, $modifier: n);  // <-- white-space: normal\n  @include jigsass-util(u-whs, $modifier: pw, $from: large); // <-- white-space: pre-wrap from large bp and on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Text partial was imported into the main file.\n\n\nJigSass Text classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a white-space class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-whs--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-whs, $modifier: nw);\n```\nwill generate the `.u-whs--nw` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-whs, $modifier: nw, $until: medium);\n```\n\nwill generate the `.u-whs--nw--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-whs, $modifier: p, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-whs--p--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// A constant used for generating white-space utility classes.\n/// ---\n/// @type Map\n/// ---\n$_jigsass-text-whs-vals: (\n  n: normal,\n  p: pre,\n  nw: nowrap,\n  pw: pre-wrap,\n  pl: pre-line,\n);\n\n\n// Used internally to ordering doclets\n$_jigsass-util-whs-i: 1;\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-util(u-whs) {\n  @if (not $jigsass-util-modifier) {\n    @error 'jigsass-utils-text: #{$jigsass-util-name} must be passed A ' +\n      'value through a modifier.';\n  }\n  white-space: map-get($_jigsass-text-whs-vals, $jigsass-util-modifier);\n\n  $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n\n/* ---\nsection: White-space Utils\ntitle: White-space #{map-get($_jigsass-text-whs-vals, $jigsass-util-modifier)}\norder: #{$_jigsass-util-whs-i}\n---\n**#{$jigsass-util-name}--#{$jigsass-util-modifier}**\n\nA utility class for setting an element's `white-space` to #{map-get($_jigsass-text-whs-vals, $jigsass-util-modifier)}\n\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='fpo #{$jigsass-util-name}--#{$jigsass-util-modifier}'>\n  The white-space of      the text in thiselement is set to #{map-get($_jigsass-text-whs-vals, $jigsass-util-modifier)}.\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n  Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n  Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</p>\n```\n*/\n    $_jigsass-util-whs-i: $_jigsass-util-whs-i + 1 !global;\n    // stylelint-enable\n  }\n}\n","// *************************************\n//\n// u jigsass-utils-type\n// -> `font-size` and `line-height` definitions\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhawks.github.io/jigsass-utils-type/\n// https://www.github.com/txhawks/jigsass-utils-type/\n//\n// *************************************\n\n@charset 'UTF-8';\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-type` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before importing this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Type Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA dynamically generated set of typesetting utility classes, in charge of modifying\nan element's font-size and line-height, based on sizes defined in the\n[$jigsass-sizes](https://txhawks.github.io/jigsass-tools-typography/#variable-jigsass-sizes)\nvariable.\n\nAdditionally, JigSass Type provides utility classes for setting an element's\n`font-weight`, `font-style` and `font-family` stacks through the\n`$jigsass-font-stacks` variable.\n\n#### Available classes\n\n  - `u-type--<named-size>` (example: .u-type--alpha)\n  - `u-fw--<weight>` (example: .u-fw--700)\n  - `u-fs--i` (italic)\n  - `u-fs--n` (normal)\n  - `u-fs--o` (oblique)\n  - `u-ff--<stack>` (example: .u-ff--serif)\n\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-type\n```\n\n#### Usage\nImport JigSass Utils Type into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-type/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Type does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual typesetting\nclass should actually be generated in each component or object it is used in:\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-type, $modifier: alpha);\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-type, $modifier: epsilon);\n  @include jigsass-util(u-type, $modifier: delta, $from: large);\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Type partial was imported into the main file.\n\n\n\nJigSass Type classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a type class, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.u-type--modifier[-[-from-{breakpoint-name}][-until-{breakpoint-name}][-misc-{breakpoint-name}]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-type, $modifier: zeta);\n```\nwill generate the `.u-type--zeta` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-type, $modifier: zeta, $until: medium);\n```\n\nwill generate the `.u-type--zeta--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-type, $modifier: zeta, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-type--zeta--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-type.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-type\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-type.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-type\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Type Utils\ntitle: Configuration\norder: 0\n---\n\nJigSass Utils Type can be tweaked by setting the values of the following\nconfiguration variables. To override the default values, set your own\n_before_ importing JigSass Utils Type.\n\n#### Font family stacks\n\n```scss\n$jigsass-font-stacks\n```\n\n**Type:** `Map`\n\nA map holding named lists of font-family stacks for use as font-family modfiers:\n```scss\n@include jigsass-util(u-ff, $modifier: serif);\n```\n\n**Default:** `()`\n*/\n//stylelint-enable\n/// A map holding named lists of font-family stacks.\n/// ---\n/// @type Map\n/// ---\n$jigsass-font-stacks: () !default;\n\n\n// Used internally for generating font-style classes.\n$_jigsass-fs-val: (i: italic, n: normal, o: oblique);\n\n// Used internally for generating text-decoration classes.\n$_jigsass-td-val: (n: none, u: underline, o: overline, l: line-through);\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-util-type-i: 1;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@include jigsass-define-util(u-type) {\n  $parsed-mod-values: jigsass-parse-modifier($jigsass-util-modifier);\n  $modifier: map-get($parsed-mod-values, modifier);\n  $state: map-get($parsed-mod-values, state) or '';\n\n  @if (\n    index(\n      map-keys(jigsass-merge-sizes()),\n      $modifier\n    )\n  ) {\n    @if (\n      not global-variable-exists(jigsass-sizes) or\n      not function-exists(jigsass-merge-sizes)\n    ) {\n      @error '`jigsass-utils-type` has a dependency on `jigsass-tools-typography`. ' +\n        'Please import it before importing this file.';\n    }\n\n    $_from: map-get($jigsass-util-mq-args, from);\n    $_until: map-get($jigsass-util-mq-args, until);\n    $_misc: map-get($jigsass-util-mq-args, misc);\n\n    $_rhythm-bps: map-get(jigsass-merge-sizes(), rhythm-unit);\n    $_size-bps: map-get(jigsass-merge-sizes(), $modifier) or ();\n\n    $_bps: map-keys(map-merge($_rhythm-bps, $_size-bps));\n    $_bps: if($_from and not index($_bps, $_from), append($_bps, $_from), $_bps);\n\n    $_bps-order: map-keys(jigsass-mq-sort-length-breakpoints());\n\n    &#{$state} {\n      @each $bp in $_bps {\n        @if (not $_from or index($_bps-order, $_from) <= index($_bps-order, $bp)) {\n          @if (not $_until or index($_bps-order, $_until) > index($_bps-order, $bp)) {\n            @if ($_from == $bp) {\n              @include jigsass-font-size(\n                $size: $modifier,\n                $unit: rem\n              );\n            }\n            @else {\n              @at-root (without: media) {\n                @include jigsass-mq($from: $bp, $until: $_until, $misc: $_misc) {\n                  @include jigsass-font-size(\n                    $size: $modifier,\n                    $unit: rem\n                  );\n                }\n              }\n            }\n          }\n        }\n      }\n\n      $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n        // stylelint-disable\n/* ---\nsection: Type Utils\ntitle: Font Size #{$jigsass-util-modifier}\norder: #{$_jigsass-util-type-i}\n---\nA util to modify an element's font size to the that set in\n`$jigsass-sizes.#{$modifier}` and adjust its line-height\naccordingly.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-type, $modifier: #{$jigsass-util-modifier}[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p class='u-type--#{$jigsass-util-modifier}'>\n  This is <em>#{$jigsass-util-modifier}</em> sized text.\n</p>\n```\n*/\n        $_jigsass-util-type-i: $_jigsass-util-type-i + 1 !global;\n        // stylelint-enable\n      }\n    }\n  }\n  @else {\n    @warn 'jigsass-util-type: Could not find a size definition for ' +\n      '#{$jigsass-util-modifier}. No class will be generated.';\n  }\n}\n\n\n\n@include jigsass-define-util(u-fs) {\n  @if (not $jigsass-util-modifier) {\n    @error '#{$jigsass-util-name} must be passed a font-style modifier.';\n  }\n  @if (not index(i n o, $jigsass-util-modifier)) {\n    @error '#{$jigsass-util-name} modifiers may only be `i` for italics, `n` for normal ' +\n      'or `o` fro oblique. You are trying to pass #{$jigsass-util-modifier}.';\n  }\n\n  font-style: map-get($_jigsass-fs-val, $jigsass-util-modifier);\n\n  $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n\n/* ---\nsection: Type Utils\ntitle: Font Style: #{map-get($_jigsass-fs-val, $jigsass-util-modifier)}\norder: #{$_jigsass-util-type-i}\n---\nA util class for setting an element's font-style to #{map-get($_jigsass-fs-val, $jigsass-util-modifier)}\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier}[, $from, $until, $misc]);\n```\n\n#### example\n\n```example:html\n<p class=#{$jigsass-util-name}--#{$jigsass-util-modifier}>\n  This element's font-style is set to <code>#{map-get($_jigsass-fs-val, $jigsass-util-modifier)}</code>.\n</p>\n```\n\n*/\n    // stylelint-enable\n    $_jigsass-util-type-i: $_jigsass-util-type-i + 1 !global;\n  }\n}\n\n\n@include jigsass-define-util(u-fw) {\n  @if (not $jigsass-util-modifier) {\n    @error '#{$jigsass-util-name} must be passed a font-weight modifier.';\n  }\n\n  $modifier: $jigsass-util-modifier;\n  $parsed-mod-values: jigsass-parse-modifier($modifier);\n  $state: '';\n\n  @if (type-of($modifier) == string) {\n    $modifier: jigsass-str-to-number(map-get($parsed-mod-values, modifier));\n    $state: map-get($parsed-mod-values, state) or '';\n  }\n\n  @if (type-of($modifier) != number and not unitless($modifier)) {\n    @error '#{$jigsass-util-name}: A font-weight modifier must be a unitless number,' +\n      'but you are trying to use #{$modifier}.';\n  }\n\n  &#{$state} {\n    font-weight: $modifier;\n\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n\n/* ---\nsection: Type Utils\ntitle: Font Weight: #{$jigsass-util-modifier}\norder: #{$_jigsass-util-type-i}\n---\nA util class for setting an element's font-weight to #{$jigsass-util-modifier}\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier}[, $from, $until, $misc]);\n```\n\n#### example\n\n```example:html\n<p class=#{$jigsass-util-name}--#{$jigsass-util-modifier}>\n  This element's font-weight is set to <code>#{$jigsass-util-modifier}</code>.\n</p>\n```\n\n*/\n      // stylelint-enable\n      $_jigsass-util-type-i: $_jigsass-util-type-i + 1 !global;\n    }\n  }\n}\n\n\n@include jigsass-define-util(u-ff) {\n  @if (not $jigsass-util-modifier) {\n    @error '#{$jigsass-util-name} must be passed a font-faimly stack as a modifier.';\n  }\n\n  $stack: map-get($jigsass-font-stacks, $jigsass-util-modifier);\n\n  @if (not $stack) {\n    @error 'u-ff: A `#{$jigsass-util-modifier}` stack is not defined in `$jigsass-font-stacks`.';\n  }\n\n  font-family: $stack;\n\n  $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n\n/* ---\nsection: Type Utils\ntitle: Font family: #{$jigsass-util-modifier}\norder: #{$_jigsass-util-type-i}\n---\nA util class for setting an element's font-familly to the #{$jigsass-util-modifier} named stack\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier}[, $from, $until, $misc]);\n```\n\n#### example\n\n```example:html\n<p class=#{$jigsass-util-name}--#{$jigsass-util-modifier}>\n  This element's font-family is set to the <code>#{$jigsass-util-modifier}</code> stack.\n</p>\n```\n\n*/\n    // stylelint-enable\n    $_jigsass-util-type-i: $_jigsass-util-type-i + 1 !global;\n  }\n}\n\n\n@include jigsass-define-util(u-td) {\n  @if (not $jigsass-util-modifier) {\n    @error '#{$jigsass-util-name} must be passed a text decoration modifier.';\n  }\n\n  $parsed-mod-values: jigsass-parse-modifier($jigsass-util-modifier);\n  $modifier: map-get($parsed-mod-values, modifier);\n  $state: map-get($parsed-mod-values, state) or '';\n\n  @if (not index(n u o l, $modifier)) {\n    @error '#{$jigsass-util-name} modifiers may only be `n` for none, `u` for underline, ' +\n      '`o` for overlinea or `l` for line-through. ' +\n      'You are trying to pass #{$modifier}.';\n  }\n\n  &#{$state} {\n    text-decoration: map-get($_jigsass-td-val, $modifier);\n\n\n    $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n    @if (not index($_doclet-store, $_doclet)) {\n      $_doclet-store: append($_doclet-store, $_doclet) !global;\n      // stylelint-disable\n\n/* ---\nsection: Type Utils\ntitle: Text Decoration: #{map-get($_jigsass-td-val, $modifier)$state}\norder: #{$_jigsass-util-type-i}\n---\nA util class for setting an element's text decoration to `#{map-get($_jigsass-td-val, $modifier)}`\n#{if(\n  $state != '',\n  ' on `' + $state + '`',\n  ''\n)}\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier}[, $from, $until, $misc]);\n```\n\n#### example\n\n```example:html\n<p class=#{$jigsass-util-name}--#{$jigsass-util-modifier}>\n  This element's font-style is set to\n  <code>#{map-get($_jigsass-td-val, $modifier)}</code>\n#{if(\n  $state != '',\n  ' on <code>' + $state + '</code>',\n  ''\n)}.\n</p>\n```\n\n*/\n      // stylelint-enable\n      $_jigsass-util-type-i: $_jigsass-util-type-i + 1 !global;\n    }\n  }\n}\n","// *************************************\n//\n// #BASE-FIGURE\n// -> A simple figure with caption\n//    and credit. Has no styling of\n//    its own, and is simply used to\n//    enable the generation of utility\n//    classes.\n//\n// *************************************\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n//\n\n\n\n\n\n@include jigsass-component(base-figure) {\n  // -------------------------------------\n  // Base\n  // -------------------------------------\n\n  //\n\n\n\n\n\n  // -------------------------------------\n  // Modifiers\n  // -------------------------------------\n\n\n\n\n\n  // -------------------------------------\n  // Items\n  // -------------------------------------\n\n  .b-fig__caption {\n    @include jigsass-util(u-cf);\n    @include jigsass-util(u-fw, $modifier: 700);\n    @include jigsass-util(u-mt, $modifier: 1);\n    @include jigsass-util(u-type, $modifier: micro);\n  }\n\n  .b-fig__caption {\n    @include jigsass-util(u-fl, $modifier: end);\n    @include jigsass-util(u-fw, $modifier: 400);\n    @include jigsass-util(u-me, $modifier: 2);\n  }\n\n\n\n\n\n  // -------------------------------------\n  // States\n  // -------------------------------------\n\n  //\n\n\n\n\n\n  // -------------------------------------\n  // Context\n  // -------------------------------------\n\n  //\n\n\n\n\n\n}\n","// *************************************\n//\n// # jigsass-utils-visibility\n// -> Visibility related utility classes\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https:txhawks.github.io/jigsass-utils-visibility/\n//\n// *************************************\n\n@charset 'UTF-8';\n\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-visibility` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Visibility Utils\ntitle: Introduction\norder: -10\n---\n\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\nA collection of dynamically generated css visibility related utility classes.\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions.\nE.g., the `visibility: hidden` utility class name is `.u-v--h` and\nthe `backface-visibility: visible` one is `.u-bfv--v`.\nIn the same vein, the `opacity: 0.5` class will be `.u-o--0\\.5` (It is automatically escaped).\n\n#### Available classes\n\n  - `.u-v--h` (visibility: hidden)\n  - `.u-v--v` (visibility: visible)\n  - `.u-v--inher` (visibility: inherit)\n  - `.u-c--init` (visibility: initial)\n  - `.u-v--un` (visibility: unset)\n\n  - `.u-bfv--h` (backface-visibility: hidden)\n  - `.u-bfv--v` (backface-visibility: visible)\n\n  - `.u-o--<level>` (opacity: <level>)\n\nAdditionally, JigSass Visibility provides the following stateful helpers:\n  - `.u-is-hidden`: Hides elements visually and from screen readers.\n  - `.u-is-visually-hidden`: Hides elements visually but leaves them accesible for screen readers.\n  - `.u-is-visually-hidden.u-is-focusable`: Reveal focusable visually hidden elements on focus\n    (with keyboard navigation or js).\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-visibility\n```\n\n#### Usage\nImport JigSass Utils Visibility into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-visibility/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Visibility does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual visibility\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-v, $modifier: h); // <-- visibility: hidden\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-bfv, $modifier: h);  // <-- backface-visibility: hidden\n  @include jigsass-util(\n    u-bfv,\n    $modifier: visible,\n    $from: large\n  ); // <-- backface-visibility: visible from large bp an on.\n\n  ...\n}\n```\n\n```scss\n// _c.baz.scss\n.baz {\n  @include jigsass-util(u-is-hidden, $from: medium); // <-- display: none from medium bp an on.\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Visibility partial was imported into the main file.\n\n\nJigSass Visibility classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a visibility class, responsive\nmodifiers are generated according to the following logic:\n\n```scss\n.u-v--<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-v, $modifier: h);\n```\nwill generate the `.u-v--h` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-v, $modifier: h, $until: medium);\n```\n\nwill generate the `.u-v--h--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-v, $modifier: h, $from: large, $misc: landscape);\n```\n\nwill generate the `.u-v--h--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n\n\n[npm-image]: https://badge.fury.io/js/jigsass-utils-visibility.svg\n[npm-url]: https://npmjs.org/package/jigsass-utils-visibility\n\n[daviddm-image]: https://david-dm.org/TxHawks/jigsass-utils-visibility.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/TxHawks/jigsass-utils-visibility\n*/\n// stylelint-enable\n\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// A constant for translating visibility modifiers to style declarations.\n/// ---\n/// @type Map\n/// ---\n/// @access private\n/// ---\n$_jigsass-vis-mod-to-style: (\n  c: collapse,\n  h: hidden,\n  v: visible,\n  inher: inherit,\n  init: initial,\n  un: unset,\n);\n\n\n/// A constant for translating backface visibility\n/// modifiers to style declarations.\n/// ---\n/// @type Map\n/// ---\n/// @access private\n/// ---\n$_jigsass-bfv-mod-to-style: (\n  h: hidden,\n  v: visible,\n);\n\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-util-vis-i: 1;\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n// ----- Visibility ----- //\n\n@include jigsass-define-util(u-v) {\n  visibility: map-get($_jigsass-vis-mod-to-style, $jigsass-util-modifier);\n\n  $_doclet: $jigsass-util-name + $jigsass-util-modifier;\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n/* ---\nsection: Visibility Utils\ntitle: u-v--#{$jigsass-util-modifier} (#{map-get($_jigsass-vis-mod-to-style, $jigsass-util-modifier)})\norder: #{$_jigsass-util-vis-i}\n---\nA util to modify an element's `visibility` property to\n`#{map-get($_jigsass-vis-mod-to-style, $jigsass-util-modifier)}`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-v, $modifier: #{map-get($_jigsass-vis-mod-to-style, $jigsass-util-modifier)}[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-v--#{$jigsass-util-modifier}'>\n  This div's visibility is set to: <em>#{map-get($_jigsass-vis-mod-to-style, $jigsass-util-modifier)}</em>.\n</div>\n```\n*/\n    $_jigsass-util-vis-i: $_jigsass-util-vis-i + 1 !global;\n    // stylelint-enable\n  }\n}\n\n// ----- Backface Visibility ----- //\n\n@include jigsass-define-util(u-bfv) {\n  bacface-visibility: map-get($_jigsass-bfv-mod-to-style, $jigsass-util-modifier);\n\n  $_doclet: $jigsass-util-name + $jigsass-util-modifier;\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n/* ---\nsection: Visibility Utils\ntitle: u-bfv--#{$jigsass-util-modifier} (#{map-get($_jigsass-bfv-mod-to-style, $jigsass-util-modifier)})\norder: #{$_jigsass-util-vis-i} + 100\n---\nA util to modify an element's `backface-visibility` property to\n`#{map-get($_jigsass-bfv-mod-to-style, $jigsass-util-modifier)}`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-bfv, $modifier: #{map-get($_jigsass-bfv-mod-to-style, $jigsass-util-modifier)}[, $from, $until, $misc]);\n```\n\n#### Example\n\n```html\n<div class='u-bfv--#{$jigsass-util-modifier}'>\n  A div with backface-visibility set to #{map-get($_jigsass-bfv-mod-to-style, $jigsass-util-modifier)}.\n</div>\n```\n*/\n    $_jigsass-util-vis-i: $_jigsass-util-vis-i + 1 !global;\n    // stylelint-enable\n  }\n}\n\n\n// ----- Opacity ----- //\n\n@include jigsass-define-util(u-o) {\n  @if(not $jigsass-util-modifier) {\n    @error 'jigsass-utils-visibility: An opacity level must me passed to `u-o` as a modifier.';\n  }\n  @if(\n    type-of($jigsass-util-modifier) != number or\n    $jigsass-util-modifier > 1 or\n    $jigsass-util-modifier < 0\n  ) {\n    @error 'jigsass-utils-visibility: An opacity level modifier for `u-o` must be ' +\n      'a number between `0` and `1`. \\a' +\n      'You are trying to pass the #{type-of($jigsass-util-modifier)} #{$jigsass-util-modifier}.';\n  }\n\n  opacity: $jigsass-util-modifier;\n\n  $_doclet: $jigsass-util-name + $jigsass-util-modifier;\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n/* ---\nsection: Visibility Utils\ntitle: u-o--#{$jigsass-util-modifier}\norder: #{$_jigsass-util-vis-i} + 200\n---\nA util to modify an element's `opacity` property to `#{$jigsass-util-modifier}`.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-o, $modifier: #{$jigsass-util-modifier}[, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-o--#{$jigsass-util-modifier}'>\n  A div with opacity set to #{$jigsass-util-modifier}.\n</div>\n```\n*/\n    $_jigsass-util-vis-i: $_jigsass-util-vis-i + 1 !global;\n    // stylelint-enable\n  }\n}\n\n\n// ----- State ----- //\n\n@include jigsass-define-util(u-is-hidden) {\n  @if ($jigsass-util-modifier) {\n    @error 'jigsass-utils-visibility: `u-is-hidden` has no modifiers. You are ' +\n      'trying to pass #{$jigsass-util-modifier}.';\n  }\n\n  display: none;\n\n  $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n/* ---\nsection: Visibility Utils\ntitle: u-is-hidden\norder: #{$_jigsass-util-vis-i} + 300\n---\nA util to hide elements visually and from screen readers.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-is-hidden [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo u-is-hidden>\n  This div is hidden both visually and from screen readers.\n</div>\n```\n*/\n    $_jigsass-util-vis-i: $_jigsass-util-vis-i + 1 !global;\n    // stylelint-enable\n  }\n}\n\n@include jigsass-define-util(u-is-visually-hidden) {\n  @if ($jigsass-util-modifier) {\n    @error 'jigsass-utils-visibility: `u-is-visually-hidden` has no modifiers. You are ' +\n      'trying to pass #{$jigsass-util-modifier}.';\n  }\n\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n\n  // Display when focused\n  &.u-is-focusable:active,\n  &.u-is-focusable:focus {\n    clip: auto;\n    height: auto;\n    margin: 0;\n    overflow: visible;\n    position: static;\n    width: auto;\n  }\n\n  $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n/* ---\nsection: Visibility Utils\ntitle: u-is-visually-hidden\norder: #{$_jigsass-util-vis-i} + 300\n---\nA util to hide elements visually but leaves them accesible for screen readers.\n\nOptionally reveal focusable visually hidden elements on focus (with keyboard navigation or js),\nby attaching the `u-is-focusable` class to them.\n\n#### Include with:\n\n```scss\n@include jigsass-util(u-is-visually-hidden [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<p>Tab-cycle inside the demo iFrame to reveal the focusable visually hidden element</p>\n<div tabindex='0' class='fpo [ u-is-visually-hidden u-is-focusable ]'>\n  This div is hidden visually but is available to screen readers.\n  It is revealed when focusd\n</div>\n```\n*/\n    $_jigsass-util-vis-i: $_jigsass-util-vis-i + 1 !global;\n    // stylelint-enable\n  }\n}\n","// *************************************\n//\n// # jigsass-utils-border\n// -> Border utility classes\n//\n// Author: TxHawks (tofu.hawks@gmail.com)\n// https://txhawks.github.com/jigsass-utils-border/\n//\n// *************************************\n\n@charset 'UTF-8';\n\n\n// -------------------------------------\n// Dependencies\n// -------------------------------------\n\n@if (not mixin-exists(jigsass-define-util)) {\n  @error '`jigsass-utils-border` has a dependency on `jigsass-tools-selectors`. ' +\n    'Please import it before this file.';\n}\n@if (not mixin-exists(jigsass-border)) {\n  @error '`jigsass-utils-border` has a dependency on `jigsass-tools-typography`. ' +\n    'Please import it before this file.';\n}\n@if (not global-variable-exists(jigsass-direction)) {\n  @error '`jigsass-utils-border` has a dependency on `jigsass-tools-bidi`. ' +\n    'Please import it before this file.';\n}\n\n\n\n\n\n// -------------------------------------\n// Introduction\n// -------------------------------------\n\n// stylelint-disable\n/* ---\nsection: Border Utils\ntitle: Introduction\norder: -10\n---\n\nA collection of dynamically generated border utility classes.\n\nJigSass Utils Border works in tandem with\n[JigSass Tools typography](https://txhawks.github.io/jigsass-tools-typography),\nproviding utility classes which add borders that don't mess up vertical rhythm.\n\nBorder utils can be limited to a certain state (i.e., `hover`, `focus`,  etc.)\n\nThe syntax for generating a border util is: `$modifier: '<width-in-pixels>[(<rhythm-units>,<border-style>,<border-color>)][:state]'`\n\nClass names follow the [Emmet](http://docs.emmet.io/cheat-sheet/) abbreviation\nsyntax, with colons (':') replaced by two dashes (`--`) to follow BEM naming\nconventions, e.g, bdb--1px(2,solid,#ccc) for setting border-bottom of 1px,\na padding-bottom of two typographic lines minus the border width, border-style\nof solid and border-color or #ccc.\n\n#### Available classes\n\n  **Border Width**<br />\n  - `u-bd--<width>` (example: u-bd--2px, sets a border of 2 pixels around an element)\n  - `u-bd--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px around an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n\n  - `u-bdt--<width>` (example: u-bd--2px, sets a border of 2 pixels above an element)\n  - `u-bdt--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px above an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n\n  - `u-bde--<width>` (example: u-bd--2px, sets a border of 2 pixels at the horizontal end an element)\n  - `u-bde--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px at the horizontal end of an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n\n  - `u-bdr--<width>` (example: u-bd--2px, sets a border of 2 pixels at the right end of an element)\n  - `u-bdr--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px at the right end of an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n\n  - `u-bdb--<width>` (example: u-bd--2px, sets a border of 2 pixels below an element)\n  - `u-bdb--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px below an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n\n  - `u-bds--<width>` (example: u-bd--2px, sets a border of 2 pixels at the horizontal start an element)\n  - `u-bds--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px at the horizontal start of an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n\n  - `u-bdl--<width>` (example: u-bd--2px, sets a border of 2 pixels at the left end of an element)\n  - `u-bdl--<width>(<rhythm-units>,<style>,<color>)` (example: u-bd--1px(1,dotted,#ccc),\n    sets a border of 1px at the left end of an element, padding of 1 rhythm unit minus 1px, a\n    border-style of `dotted` and border color of `#ccc`)\n\n  **Border Radius**<br />\n  - `u-bdrs--<radius>` (example: u-bd--2px, sets a border of 2 pixels at the left end of an element)\n\n\n\n#### Installation\n\nUsing npm:\n\n```sh\nnpm i -S jigsass-utils-border\n```\n\n#### Usage\n\nImport JigSass Utils Border into your main scss file near its very end, together with all\nother utilities (utilities should always be the last to be imported).\n\n```scss\n@import 'path/to/jigsass-utils-border/scss/index';\n```\n\nLike all other JigSass Utils, JigSass Utils Border does not automatically generate any CSS\nwhen imported. You would need to explicitly indicate that each individual border\nclass should actually be generated in each component or object it is used in\n(clarification: This will include style declarations inside `.foo` and .`bar`):\n\n```scss\n// _c.foo.scss\n.foo {\n  @include jigsass-util(u-bds, $modifier: '2px(1,solid,#4c4)');\n\n  ...\n}\n```\n\n```scss\n// _c.bar.scss\n.bar {\n  @include jigsass-util(u-bdb, $modifier: '1px(1,dotted,#4c4):hover');\n  @include jigsass-util(u-bdb, $modifier: '2px(1,dotted,#4c4):hover', $from: large);\n\n  ...\n}\n```\n\nDoing so helps us a great deal with portability, as no matter where we import component or object\npartials, the correct utility classes will be generated. Think of it as a poor man's dependency\nmanagement.\n\nDeveloper communication is also assisted by including \"dependencies\" wherever they are required,\nas anyone going through a partial, can easily understand how it should be marked up with just a\nglance.\n\nAs far as bloat goes, just don't worry about it - the actual styles will only be generated once,\nat the location in the cascade where the Jigsass Utils Border partial was imported into the main file.\n\n\nJigSass Utils Border classes are responsive-enabled, using [JigSass MQ](https://txhawks.github.io/jigsass-tools-mq/)\nand the breakpoints defined in the [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints) variable.\n\nBased on the breakpoint arguments passed to `jigsass-util` when including a class,\nresponsive modifiers are generated according to the following logic:\n\n```scss\n.u-bd-<modifier>[-[-from-<breakpoint-name>][-until-<breakpoint-name>][-misc-<breakpoint-name>]]\n```\n\nSo, assuming the `medium`, `large` and `landscape` breakpoints are defined in `$jigsass-breakpoints`\nas `600px`, `1024px` and `(orientation: landscape)` respectively,\n\n```scss\n@include jigsass-util(u-bd, $modifier: 1px);\n```\nwill generate the `u-bd--1px` class, which is not limited to any media-query.\n\n```scss\n@include jigsass-util(u-bd, $modifier: '1px(1,solid)', $until: medium);\n```\n\nwill generate the `u-bd--1px(1,solid)--until-medium` class, which will be in effect at\n`(max-width: 37.49em)` and will override styles in the default class until that point.\n\n```scss\n@include jigsass-util(u-bd, $modifier: 2px(2):focus, $from: large, $misc: landscape);\n```\n\nwill generate the `u-bd--2px(2):focus--from-large-when-landscape` class, which will go into\neffect at `(min-width: 64em) and (orientation: landscape)` and will override styles in the default\nclass under these  conditions.\n\n\n**License:** MIT\n\n*/\n// stylelint-enable\n\n\n\n\n// -------------------------------------\n// Variables\n// -------------------------------------\n\n/// A constant used for generating border utility classes.\n/// ---\n/// @type Map\n/// ---\n$_jigsass-brdr-prop: (\n  u-bd: border,\n  u-bdt: border-top,\n  u-bde: border-end,\n  u-bdr: border-right,\n  u-bdb: border-bottom,\n  u-bds: border-start,\n  u-bdl: border-left\n);\n\n\n// Used internally to store doclets\n$_doclet-store: () !default;\n\n// Used internally to ordering doclets\n$_jigsass-util-brdr-i: 1;\n$_jigsass-util-brdr-addition: (\n u-bd: 0,\n u-bdt: 100,\n u-bde: 200,\n u-bdr: 300,\n u-bdb: 400,\n u-bds: 500,\n u-bdl: 600,\n u-bdrs: 700,\n);\n\n\n\n\n\n// -------------------------------------\n// Definitions\n// -------------------------------------\n\n@each $util in map-keys($_jigsass-brdr-prop) {\n  @include jigsass-define-util($util) {\n    @if(not $jigsass-util-modifier) {\n      @error '#{$jigsass-util-name} must be passed a border width as a modifier.';\n    }\n\n    $modifier: $jigsass-util-modifier;\n    $parsed-mod-values: jigsass-parse-modifier($jigsass-util-modifier);\n    $args: map-get($parsed-mod-values, args);\n    $lines: false;\n    $style: false;\n    $color: false;\n    $state: '';\n\n    @if (type-of($modifier) == string) {\n      $modifier: jigsass-str-to-number(map-get($parsed-mod-values, modifier));\n      $state: map-get($parsed-mod-values, state) or '';\n    }\n\n    @if (type-of($modifier) != number and not index(px rem, unit($modifier))) {\n      @error '#{$jigsass-util-name}: A border width must be specified in pixels or rems, ' +\n        'but you are trying to use #{$modifier}.';\n    }\n\n    @if ($args) {\n      $args-length: length($args);\n\n      $lines: nth($args, 1);\n      $style: if($args-length > 1, unquote(nth($args, 2)), false);\n      $color: if($args-length == 3, unquote(nth($args, 3)), false);\n\n      @if (not type-of($lines) == number or not unitless($lines)) {\n        @error '#{$jigsass-util-name}--#{$jigsass-util-modifier}: The `lines` argument must ' +\n          'a unitless number, but you are trying to pass #{$lines}.';\n      }\n\n      @if ($color) {\n\n        // If an explicit color\n        @if (str-index($color, '#') or str-index($color, 'rgb') or str-index($color, 'hsl')) {\n          $style: append($style, $color, space);\n        }\n\n        // If a named color (no support for transformation functions)\n        @else {\n          $style: append($style, jigsass-color($color), space);\n        }\n      }\n    }\n\n    &#{$state} {\n      @if ($args) {\n        $rtl: to-lower-case($jigsass-direction) == rtl;\n        $side: str-slice(map-get($_jigsass-brdr-prop, $jigsass-util-name), 8);\n        $side: if($side == '', all, $side);\n\n        @if ($side == start) {\n          $side: if($rtl, right, left);\n\n          @include jigsass-border($side, $modifier, $lines, $style or solid);\n\n          [dir=ltr] & {\n            @include jigsass-border(left, $modifier, $lines, $style or solid);\n          }\n\n          [dir=rtl] & {\n            @include jigsass-border(right, $modifier, $lines, $style or solid);\n          }\n        }\n        @else if ($side == end) {\n          $side: if($rtl, left, right);\n\n          @include jigsass-border($side, $modifier, $lines, $style or solid);\n\n          [dir=ltr] & {\n            @include jigsass-border(right, $modifier, $lines, $style or solid);\n          }\n\n          [dir=rtl] & {\n            @include jigsass-border(left, $modifier, $lines, $style or solid);\n          }\n        }\n        @else {\n          @include jigsass-border($side, $modifier, $lines, $style or solid);\n        }\n      }\n\n      @else {\n        @if ($jigsass-util-name == u-bds) {\n          @include jigsass-bidi(border-start, $modifier solid);\n\n          [dir=ltr] & {\n            border-left: $modifier solid;\n          }\n\n          [dir=rtl] & {\n            border-right: $modifier solid;\n          }\n        }\n        @else if ($jigsass-util-name == u-bde) {\n          @include jigsass-bidi(border-end, $modifier solid);\n\n          [dir=ltr] & {\n            border-right: $modifier solid;\n          }\n\n          [dir=rtl] & {\n            border-left: $modifier solid;\n          }\n        }\n        @else {\n          #{map-get($_jigsass-brdr-prop, $jigsass-util-name)}: $modifier solid;\n        }\n      }\n\n      $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n      @if (not index($_doclet-store, $_doclet)) {\n        $_doclet-store: append($_doclet-store, $_doclet) !global;\n        // stylelint-disable\n        @if ($args and not $state) { @error $text; }\n/* ---\nsection: Border Utils\ntitle: #{$jigsass-util-name}--#{$jigsass-util-modifier}\norder: #{$_jigsass-util-brdr-i + map-get($_jigsass-util-brdr-addition, $jigsass-util-name)}\n---\nA utility class to set an element's #{map-get($_jigsass-brdr-prop, $jigsass-util-name)}\n#{if(\n  $args,\n  'and padding #{if($state != \"\", \"on <code>\" + $state + \"</code>\", \"\")} so that it does not mess up the vertical rhythm',\n  ''\n)}\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  #{$jigsass-util-name}--#{$jigsass-util-modifier}'></div>\n```\n*/\n        // stylelint-enable\n        $_jigsass-util-brdr-i: $_jigsass-util-brdr-i + 1 !global;\n      }\n    }\n  }\n}\n\n@include jigsass-define-util('u-bdrs') {\n  @if(not $jigsass-util-modifier) {\n    @error '#{$jigsass-util-name} must be passed a radius length as a modifier.';\n  }\n\n  $modifier: $jigsass-util-modifier;\n  $parsed-mod-values: jigsass-parse-modifier($jigsass-util-modifier);\n  $state: '';\n\n  @if (type-of($modifier) == string) {\n    $modifier: jigsass-str-to-number(map-get($parsed-mod-values, modifier));\n    $state: map-get($parsed-mod-values, state) or '';\n  }\n\n  @if (type-of($modifier) != number and not index('px' 'rem' 'em' '%,' unit($modifier))) {\n    @error '#{$jigsass-util-name}: A border-radius must be specified in pixels, ems, rems or %, ' +\n      'but you are trying to use #{$modifier}.';\n  }\n\n  &#{$state} {\n    border-radius: $modifier;\n  }\n\n  $_doclet: $jigsass-util-name + ($jigsass-util-modifier or '');\n  @if (not index($_doclet-store, $_doclet)) {\n    $_doclet-store: append($_doclet-store, $_doclet) !global;\n    // stylelint-disable\n/* ---\nsection: Border Utils\ntitle: #{$jigsass-util-name}--#{$jigsass-util-modifier}\norder: #{$_jigsass-util-brdr-i + map-get($_jigsass-util-brdr-addition, $jigsass-util-name)}\n---\nA utility class to set an element's border-radius#{if($state != \"\", \"on <code>\" + $state + \"</code> \", \"\")}.\n\n#### Include with:\n\n```scss\n@include jigsass-util(#{$jigsass-util-name}, $modifier: #{$jigsass-util-modifier} [, $from, $until, $misc]);\n```\n\n#### Example\n\n```example:html\n<div class='fpo  #{$jigsass-util-name}--#{$jigsass-util-modifier}'></div>\n```\n*/\n    // stylelint-enable\n    $_jigsass-util-brdr-i: $_jigsass-util-brdr-i + 1 !global;\n  }\n}\n"]}